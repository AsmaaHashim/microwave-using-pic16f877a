

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 05 17:49:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	functab,global,class=ENTRY,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.10
    56                           ; Generated 31/07/2019 GMT
    57                           ; 
    58                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F877A Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  0091                     	;# 
   134  0092                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0098                     	;# 
   258  0099                     	;# 
   259  009C                     	;# 
   260  009D                     	;# 
   261  009E                     	;# 
   262  009F                     	;# 
   263  010C                     	;# 
   264  010D                     	;# 
   265  010E                     	;# 
   266  010F                     	;# 
   267  018C                     	;# 
   268  018D                     	;# 
   269                           
   270                           	psect	idataBANK0
   271  0ACB                     __pidataBANK0:	
   272                           
   273                           ;initializer for microWave_init@F119
   274  0ACB  3407               	retlw	7
   275  0ACC  3401               	retlw	1
   276                           
   277                           	psect	strings
   278  0700                     __pstrings:	
   279  0700                     stringtab:	
   280  0700                     __stringtab:	
   281                           
   282                           ;	String table - string pointers are 1 byte each
   283  0700  1BFF               	btfsc	btemp+1,7
   284  0701  2F0A               	ljmp	stringcode
   285  0702  1383               	bcf	3,7
   286  0703  187F               	btfsc	btemp+1,0
   287  0704  1783               	bsf	3,7
   288  0705  0800               	movf	0,w
   289  0706  0A84               	incf	4,f
   290  0707  1903               	skipnz
   291  0708  0AFF               	incf	btemp+1,f
   292  0709  0008               	return
   293  070A                     stringcode:	
   294  070A                     stringdir:	
   295  070A  3007               	movlw	high stringdir
   296  070B  008A               	movwf	10
   297  070C  0804               	movf	4,w
   298  070D  0A84               	incf	4,f
   299  070E  0782               	addwf	2,f
   300  070F                     __stringbase:	
   301  070F  3400               	retlw	0
   302  0710                     __end_of__stringtab:	
   303  0710                     _keypad:	
   304  0710  342A               	retlw	42
   305  0711  3400               	retlw	0
   306  0712  3423               	retlw	35
   307  0713  3407               	retlw	7
   308  0714  3408               	retlw	8
   309  0715  3409               	retlw	9
   310  0716  3404               	retlw	4
   311  0717  3405               	retlw	5
   312  0718  3406               	retlw	6
   313  0719  3401               	retlw	1
   314  071A  3402               	retlw	2
   315  071B  3403               	retlw	3
   316  071C                     __end_of_keypad:	
   317  009F                     _ADCON1	set	159
   318  071C                     STR_14:	
   319  071C  3420               	retlw	32	;' '
   320  071D  3420               	retlw	32	;' '
   321  071E  3420               	retlw	32	;' '
   322  071F  3420               	retlw	32	;' '
   323  0720  3420               	retlw	32	;' '
   324  0721  3420               	retlw	32	;' '
   325  0722  3420               	retlw	32	;' '
   326  0723  3420               	retlw	32	;' '
   327  0724  3420               	retlw	32	;' '
   328  0725  3420               	retlw	32	;' '
   329  0726  3420               	retlw	32	;' '
   330  0727  3420               	retlw	32	;' '
   331  0728  3420               	retlw	32	;' '
   332  0729  3420               	retlw	32	;' '
   333  072A  3420               	retlw	32	;' '
   334  072B  3420               	retlw	32	;' '
   335  072C  3420               	retlw	32	;' '
   336  072D  3420               	retlw	32	;' '
   337  072E  3420               	retlw	32	;' '
   338  072F  3420               	retlw	32	;' '
   339  0730  3420               	retlw	32	;' '
   340  0731  3420               	retlw	32	;' '
   341  0732  3420               	retlw	32	;' '
   342  0733  3420               	retlw	32	;' '
   343  0734  3400               	retlw	0
   344  0735                     STR_3:	
   345  0735  342A               	retlw	42	;'*'
   346  0736  342A               	retlw	42	;'*'
   347  0737  342A               	retlw	42	;'*'
   348  0738  342A               	retlw	42	;'*'
   349  0739  342A               	retlw	42	;'*'
   350  073A  342A               	retlw	42	;'*'
   351  073B  342A               	retlw	42	;'*'
   352  073C  3447               	retlw	71	;'G'
   353  073D  344F               	retlw	79	;'O'
   354  073E  344F               	retlw	79	;'O'
   355  073F  3444               	retlw	68	;'D'
   356  0740  342A               	retlw	42	;'*'
   357  0741  342A               	retlw	42	;'*'
   358  0742  342A               	retlw	42	;'*'
   359  0743  342A               	retlw	42	;'*'
   360  0744  342A               	retlw	42	;'*'
   361  0745  342A               	retlw	42	;'*'
   362  0746  342A               	retlw	42	;'*'
   363  0747  342A               	retlw	42	;'*'
   364  0748  342A               	retlw	42	;'*'
   365  0749  342A               	retlw	42	;'*'
   366  074A  3400               	retlw	0
   367  074B                     STR_6:	
   368  074B  3473               	retlw	115	;'s'
   369  074C  3465               	retlw	101	;'e'
   370  074D  3474               	retlw	116	;'t'
   371  074E  3420               	retlw	32	;' '
   372  074F  3474               	retlw	116	;'t'
   373  0750  3469               	retlw	105	;'i'
   374  0751  346D               	retlw	109	;'m'
   375  0752  3465               	retlw	101	;'e'
   376  0753  3420               	retlw	32	;' '
   377  0754  3470               	retlw	112	;'p'
   378  0755  346C               	retlw	108	;'l'
   379  0756  3465               	retlw	101	;'e'
   380  0757  3461               	retlw	97	;'a'
   381  0758  3473               	retlw	115	;'s'
   382  0759  3465               	retlw	101	;'e'
   383  075A  3420               	retlw	32	;' '
   384  075B  3420               	retlw	32	;' '
   385  075C  3400               	retlw	0
   386  075D                     STR_2:	
   387  075D  346D               	retlw	109	;'m'
   388  075E  3469               	retlw	105	;'i'
   389  075F  3463               	retlw	99	;'c'
   390  0760  3472               	retlw	114	;'r'
   391  0761  346F               	retlw	111	;'o'
   392  0762  3477               	retlw	119	;'w'
   393  0763  3461               	retlw	97	;'a'
   394  0764  3476               	retlw	118	;'v'
   395  0765  3465               	retlw	101	;'e'
   396  0766  3450               	retlw	80	;'P'
   397  0767  3472               	retlw	114	;'r'
   398  0768  346F               	retlw	111	;'o'
   399  0769  346A               	retlw	106	;'j'
   400  076A  3465               	retlw	101	;'e'
   401  076B  3463               	retlw	99	;'c'
   402  076C  3474               	retlw	116	;'t'
   403  076D  342A               	retlw	42	;'*'
   404  076E  3400               	retlw	0
   405  076F                     STR_17:	
   406  076F  3466               	retlw	102	;'f'
   407  0770  346F               	retlw	111	;'o'
   408  0771  346F               	retlw	111	;'o'
   409  0772  3464               	retlw	100	;'d'
   410  0773  3420               	retlw	32	;' '
   411  0774  3468               	retlw	104	;'h'
   412  0775  3465               	retlw	101	;'e'
   413  0776  3461               	retlw	97	;'a'
   414  0777  3474               	retlw	116	;'t'
   415  0778  3469               	retlw	105	;'i'
   416  0779  346E               	retlw	110	;'n'
   417  077A  3467               	retlw	103	;'g'
   418  077B  3420               	retlw	32	;' '
   419  077C  346E               	retlw	110	;'n'
   420  077D  346F               	retlw	111	;'o'
   421  077E  3477               	retlw	119	;'w'
   422  077F  3400               	retlw	0
   423  0780                     STR_4:	
   424  0780  342A               	retlw	42	;'*'
   425  0781  342A               	retlw	42	;'*'
   426  0782  342A               	retlw	42	;'*'
   427  0783  342A               	retlw	42	;'*'
   428  0784  342A               	retlw	42	;'*'
   429  0785  3450               	retlw	80	;'P'
   430  0786  3441               	retlw	65	;'A'
   431  0787  3455               	retlw	85	;'U'
   432  0788  3453               	retlw	83	;'S'
   433  0789  3445               	retlw	69	;'E'
   434  078A  342A               	retlw	42	;'*'
   435  078B  342A               	retlw	42	;'*'
   436  078C  342A               	retlw	42	;'*'
   437  078D  342A               	retlw	42	;'*'
   438  078E  342A               	retlw	42	;'*'
   439  078F  3400               	retlw	0
   440  0790                     STR_13:	
   441  0790  3445               	retlw	69	;'E'
   442  0791  346E               	retlw	110	;'n'
   443  0792  3474               	retlw	116	;'t'
   444  0793  3465               	retlw	101	;'e'
   445  0794  3472               	retlw	114	;'r'
   446  0795  3420               	retlw	32	;' '
   447  0796  3474               	retlw	116	;'t'
   448  0797  3468               	retlw	104	;'h'
   449  0798  3465               	retlw	101	;'e'
   450  0799  3420               	retlw	32	;' '
   451  079A  3466               	retlw	102	;'f'
   452  079B  346F               	retlw	111	;'o'
   453  079C  346F               	retlw	111	;'o'
   454  079D  3464               	retlw	100	;'d'
   455  079E  3400               	retlw	0
   456  079F                     STR_9:	
   457  079F  3463               	retlw	99	;'c'
   458  07A0  346C               	retlw	108	;'l'
   459  07A1  346F               	retlw	111	;'o'
   460  07A2  3473               	retlw	115	;'s'
   461  07A3  3465               	retlw	101	;'e'
   462  07A4  3420               	retlw	32	;' '
   463  07A5  3474               	retlw	116	;'t'
   464  07A6  3468               	retlw	104	;'h'
   465  07A7  3465               	retlw	101	;'e'
   466  07A8  3420               	retlw	32	;' '
   467  07A9  3464               	retlw	100	;'d'
   468  07AA  346F               	retlw	111	;'o'
   469  07AB  346F               	retlw	111	;'o'
   470  07AC  3472               	retlw	114	;'r'
   471  07AD  3400               	retlw	0
   472  07AE                     STR_15:	
   473  07AE  3474               	retlw	116	;'t'
   474  07AF  3461               	retlw	97	;'a'
   475  07B0  346B               	retlw	107	;'k'
   476  07B1  3465               	retlw	101	;'e'
   477  07B2  3420               	retlw	32	;' '
   478  07B3  3474               	retlw	116	;'t'
   479  07B4  3468               	retlw	104	;'h'
   480  07B5  3465               	retlw	101	;'e'
   481  07B6  3420               	retlw	32	;' '
   482  07B7  3466               	retlw	102	;'f'
   483  07B8  346F               	retlw	111	;'o'
   484  07B9  346F               	retlw	111	;'o'
   485  07BA  3464               	retlw	100	;'d'
   486  07BB  3400               	retlw	0
   487  07BC                     STR_11:	
   488  07BC  346F               	retlw	111	;'o'
   489  07BD  3470               	retlw	112	;'p'
   490  07BE  3465               	retlw	101	;'e'
   491  07BF  346E               	retlw	110	;'n'
   492  07C0  3420               	retlw	32	;' '
   493  07C1  3474               	retlw	116	;'t'
   494  07C2  3468               	retlw	104	;'h'
   495  07C3  3465               	retlw	101	;'e'
   496  07C4  3420               	retlw	32	;' '
   497  07C5  3464               	retlw	100	;'d'
   498  07C6  346F               	retlw	111	;'o'
   499  07C7  346F               	retlw	111	;'o'
   500  07C8  3472               	retlw	114	;'r'
   501  07C9  3400               	retlw	0
   502  07CA                     STR_1:	
   503  07CA  342A               	retlw	42	;'*'
   504  07CB  342A               	retlw	42	;'*'
   505  07CC  3477               	retlw	119	;'w'
   506  07CD  3465               	retlw	101	;'e'
   507  07CE  346C               	retlw	108	;'l'
   508  07CF  3463               	retlw	99	;'c'
   509  07D0  346F               	retlw	111	;'o'
   510  07D1  346D               	retlw	109	;'m'
   511  07D2  3465               	retlw	101	;'e'
   512  07D3  342A               	retlw	42	;'*'
   513  07D4  342A               	retlw	42	;'*'
   514  07D5  3400               	retlw	0
   515  07D6                     STR_5:	
   516  07D6  3430               	retlw	48	;'0'
   517  07D7  3430               	retlw	48	;'0'
   518  07D8  343A               	retlw	58	;':'
   519  07D9  3430               	retlw	48	;'0'
   520  07DA  3430               	retlw	48	;'0'
   521  07DB  3400               	retlw	0
   522  0721                     
   523                           ; #config settings
   524  0000                     
   525                           	psect	cinit
   526  0013                     start_initialization:	
   527  0013                     __initialization:	
   528                           
   529                           ; Initialize objects allocated to BANK0
   530  0013  120A  158A  22CB  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   531  0018  00E1               	movwf	__pdataBANK0& (0+127)
   532  0019  120A  158A  22CC  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   533  001E  00E2               	movwf	(__pdataBANK0+1)& (0+127)
   534                           
   535                           ; Clear objects allocated to BANK0
   536  001F  01D4               	clrf	__pbssBANK0& (0+127)
   537  0020  01D5               	clrf	(__pbssBANK0+1)& (0+127)
   538  0021  01D6               	clrf	(__pbssBANK0+2)& (0+127)
   539  0022  01D7               	clrf	(__pbssBANK0+3)& (0+127)
   540  0023  01D8               	clrf	(__pbssBANK0+4)& (0+127)
   541  0024  01D9               	clrf	(__pbssBANK0+5)& (0+127)
   542  0025  01DA               	clrf	(__pbssBANK0+6)& (0+127)
   543  0026  01DB               	clrf	(__pbssBANK0+7)& (0+127)
   544  0027  01DC               	clrf	(__pbssBANK0+8)& (0+127)
   545  0028  01DD               	clrf	(__pbssBANK0+9)& (0+127)
   546  0029  01DE               	clrf	(__pbssBANK0+10)& (0+127)
   547  002A  01DF               	clrf	(__pbssBANK0+11)& (0+127)
   548  002B  01E0               	clrf	(__pbssBANK0+12)& (0+127)
   549                           
   550                           ; Clear objects allocated to COMMON
   551  002C  01F5               	clrf	__pbssCOMMON& (0+127)
   552  002D  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   553  002E  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   554  002F  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   555  0030                     end_of_initialization:	
   556                           ;End of C runtime variable initialization code
   557                           
   558  0030                     __end_of__initialization:	
   559  0030  0183               	clrf	3
   560  0031  120A  118A  2AC6   	ljmp	_main	;jump to C main() function
   561                           
   562                           	psect	bssCOMMON
   563  0075                     __pbssCOMMON:	
   564  0075                     _count:	
   565  0075                     	ds	1
   566  0076                     _CCP2_CalL_Back_ptr:	
   567  0076                     	ds	1
   568  0077                     _CCP1_CalL_Back_ptr:	
   569  0077                     	ds	1
   570  0078                     _TIMER0_CalL_Back_ptr:	
   571  0078                     	ds	1
   572                           
   573                           	psect	bssBANK0
   574  0054                     __pbssBANK0:	
   575  0054                     scan_minutes@F127:	
   576  0054                     	ds	5
   577  0059                     _counter:	
   578  0059                     	ds	4
   579  005D                     _minutes:	
   580  005D                     	ds	2
   581  005F                     _finish:	
   582  005F                     	ds	1
   583  0060                     _second:	
   584  0060                     	ds	1
   585                           
   586                           	psect	dataBANK0
   587  0061                     __pdataBANK0:	
   588  0061                     microWave_init@F119:	
   589  0061                     	ds	2
   590                           
   591                           	psect	cstackCOMMON
   592  0070                     __pcstackCOMMON:	
   593  0070                     ?_microWave_init:	
   594  0070                     ?_start:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_start_LED_ON:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_scan_minutes:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_foodIsInMicro:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_door_is_close:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_heat_on:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_FAN_ON:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_start_calc_time:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_show_remaining_time:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_stop_cal_time:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_heat_off:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_stop:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_FAN_OFF:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_door_is_open:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_foodOutMicro:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_start_LED_OFF:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_LCD_clear_screen:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_LCD_sendCommand:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_LCD_init:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_LCD_displayCharacter:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_keypad_init:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_key_pressed:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_TIMER0_Call_Back:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_ISR:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_global_INT_enable:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_global_INT_disable:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_TIMER0_init:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_set_T0DR:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_Call_Back_OVFI:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ??_Call_Back_OVFI:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_main:	
   685                           ; 1 bytes @ 0x0
   686                           
   687                           
   688                           ; 2 bytes @ 0x0
   689  0070                     	ds	1
   690  0071                     ??_ISR:	
   691                           
   692                           ; 1 bytes @ 0x1
   693  0071                     	ds	4
   694  0075                     ??_start:	
   695  0075                     ??_start_LED_ON:	
   696                           ; 1 bytes @ 0x5
   697                           
   698  0075                     ??_heat_on:	
   699                           ; 1 bytes @ 0x5
   700                           
   701  0075                     ??_FAN_ON:	
   702                           ; 1 bytes @ 0x5
   703                           
   704  0075                     ??_stop_cal_time:	
   705                           ; 1 bytes @ 0x5
   706                           
   707  0075                     ??_stop:	
   708                           ; 1 bytes @ 0x5
   709                           
   710  0075                     ??_LCD_clear_screen:	
   711                           ; 1 bytes @ 0x5
   712                           
   713  0075                     ??_global_INT_enable:	
   714                           ; 1 bytes @ 0x5
   715                           
   716  0075                     ??___wmul:	
   717                           ; 1 bytes @ 0x5
   718                           
   719                           
   720                           	psect	cstackBANK0
   721  0020                     __pcstackBANK0:	
   722                           ; 1 bytes @ 0x5
   723                           
   724  0020                     ??_heat_off:	
   725  0020                     ??_FAN_OFF:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0020                     ??_start_LED_OFF:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0020                     ??_LCD_sendCommand:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0020                     ??_LCD_displayCharacter:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0020                     ??_keypad_init:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0020                     ??_key_pressed:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0020                     ??_TIMER0_Call_Back:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0020                     ??_global_INT_disable:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0020                     ??_TIMER0_init:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0020                     ??_set_T0DR:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0020                     ?___wmul:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0020                     ?___awdiv:	
   759                           ; 2 bytes @ 0x0
   760                           
   761  0020                     ?___awmod:	
   762                           ; 2 bytes @ 0x0
   763                           
   764  0020                     ___wmul@multiplier:	
   765                           ; 2 bytes @ 0x0
   766                           
   767  0020                     ___awdiv@divisor:	
   768                           ; 2 bytes @ 0x0
   769                           
   770  0020                     ___awmod@divisor:	
   771                           ; 2 bytes @ 0x0
   772                           
   773                           
   774                           ; 2 bytes @ 0x0
   775  0020                     	ds	1
   776  0021                     TIMER0_Call_Back@ptr:	
   777  0021                     set_T0DR@val:	
   778                           ; 1 bytes @ 0x1
   779                           
   780                           
   781                           ; 1 bytes @ 0x1
   782  0021                     	ds	1
   783  0022                     ??_start_calc_time:	
   784  0022                     TIMER0_init@data:	
   785                           ; 1 bytes @ 0x2
   786                           
   787  0022                     ___wmul@multiplicand:	
   788                           ; 1 bytes @ 0x2
   789                           
   790  0022                     ___awdiv@dividend:	
   791                           ; 2 bytes @ 0x2
   792                           
   793  0022                     ___awmod@dividend:	
   794                           ; 2 bytes @ 0x2
   795                           
   796                           
   797                           ; 2 bytes @ 0x2
   798  0022                     	ds	2
   799  0024                     ??___awdiv:	
   800  0024                     ??___awmod:	
   801                           ; 1 bytes @ 0x4
   802                           
   803  0024                     LCD_sendCommand@commond:	
   804                           ; 1 bytes @ 0x4
   805                           
   806  0024                     LCD_displayCharacter@ch:	
   807                           ; 1 bytes @ 0x4
   808                           
   809  0024                     ___wmul@product:	
   810                           ; 1 bytes @ 0x4
   811                           
   812                           
   813                           ; 2 bytes @ 0x4
   814  0024                     	ds	1
   815  0025                     ??_LCD_init:	
   816  0025                     ?_LCD_displayString:	
   817                           ; 1 bytes @ 0x5
   818                           
   819  0025                     ?_LCD_goToRowColum:	
   820                           ; 1 bytes @ 0x5
   821                           
   822  0025                     LCD_goToRowColum@colum:	
   823                           ; 1 bytes @ 0x5
   824                           
   825  0025                     ___awdiv@counter:	
   826                           ; 1 bytes @ 0x5
   827                           
   828  0025                     ___awmod@counter:	
   829                           ; 1 bytes @ 0x5
   830                           
   831  0025                     LCD_displayString@str:	
   832                           ; 1 bytes @ 0x5
   833                           
   834                           
   835                           ; 2 bytes @ 0x5
   836  0025                     	ds	1
   837  0026                     ??_microWave_init:	
   838  0026                     ??_LCD_goToRowColum:	
   839                           ; 1 bytes @ 0x6
   840                           
   841  0026                     ___awdiv@sign:	
   842                           ; 1 bytes @ 0x6
   843                           
   844  0026                     ___awmod@sign:	
   845                           ; 1 bytes @ 0x6
   846                           
   847                           
   848                           ; 1 bytes @ 0x6
   849  0026                     	ds	1
   850  0027                     ??_LCD_displayString:	
   851  0027                     microWave_init@data:	
   852                           ; 1 bytes @ 0x7
   853                           
   854  0027                     ___awdiv@quotient:	
   855                           ; 2 bytes @ 0x7
   856                           
   857                           
   858                           ; 2 bytes @ 0x7
   859  0027                     	ds	1
   860  0028                     LCD_displayString@i:	
   861  0028                     LCD_goToRowColum@row:	
   862                           ; 1 bytes @ 0x8
   863                           
   864                           
   865                           ; 1 bytes @ 0x8
   866  0028                     	ds	1
   867  0029                     ?_itoa:	
   868  0029                     LCD_goToRowColum@Address:	
   869                           ; 1 bytes @ 0x9
   870                           
   871  0029                     itoa@num:	
   872                           ; 1 bytes @ 0x9
   873                           
   874                           
   875                           ; 2 bytes @ 0x9
   876  0029                     	ds	1
   877  002A                     ?_LCD_displayStringOnRowColum:	
   878  002A                     ??_foodIsInMicro:	
   879                           ; 1 bytes @ 0xA
   880                           
   881  002A                     ??_door_is_close:	
   882                           ; 1 bytes @ 0xA
   883                           
   884  002A                     ??_door_is_open:	
   885                           ; 1 bytes @ 0xA
   886                           
   887  002A                     ??_foodOutMicro:	
   888                           ; 1 bytes @ 0xA
   889                           
   890  002A                     LCD_displayStringOnRowColum@colum:	
   891                           ; 1 bytes @ 0xA
   892                           
   893                           
   894                           ; 1 bytes @ 0xA
   895  002A                     	ds	1
   896  002B                     itoa@buff:	
   897  002B                     LCD_displayStringOnRowColum@str:	
   898                           ; 1 bytes @ 0xB
   899                           
   900                           
   901                           ; 1 bytes @ 0xB
   902  002B                     	ds	1
   903  002C                     ??_LCD_displayStringOnRowColum:	
   904  002C                     itoa@b:	
   905                           ; 1 bytes @ 0xC
   906                           
   907                           
   908                           ; 2 bytes @ 0xC
   909  002C                     	ds	1
   910  002D                     LCD_displayStringOnRowColum@row:	
   911                           
   912                           ; 1 bytes @ 0xD
   913  002D                     	ds	1
   914  002E                     ??_itoa:	
   915                           
   916                           ; 1 bytes @ 0xE
   917  002E                     	ds	2
   918  0030                     itoa@digits_num:	
   919                           
   920                           ; 2 bytes @ 0x10
   921  0030                     	ds	2
   922  0032                     itoa@n:	
   923                           
   924                           ; 2 bytes @ 0x12
   925  0032                     	ds	2
   926  0034                     ?_LCD_intgerToString:	
   927  0034                     LCD_intgerToString@data:	
   928                           ; 1 bytes @ 0x14
   929                           
   930                           
   931                           ; 2 bytes @ 0x14
   932  0034                     	ds	2
   933  0036                     ??_LCD_intgerToString:	
   934                           
   935                           ; 1 bytes @ 0x16
   936  0036                     	ds	1
   937  0037                     LCD_intgerToString@buff:	
   938                           
   939                           ; 16 bytes @ 0x17
   940  0037                     	ds	16
   941  0047                     ??_scan_minutes:	
   942  0047                     ??_show_remaining_time:	
   943                           ; 1 bytes @ 0x27
   944                           
   945                           
   946                           ; 1 bytes @ 0x27
   947  0047                     	ds	2
   948  0049                     scan_minutes@minutes_digits:	
   949                           
   950                           ; 5 bytes @ 0x29
   951  0049                     	ds	5
   952  004E                     scan_minutes@indix_of_digit:	
   953                           
   954                           ; 1 bytes @ 0x2E
   955  004E                     	ds	1
   956  004F                     scan_minutes@digit:	
   957                           
   958                           ; 1 bytes @ 0x2F
   959  004F                     	ds	1
   960  0050                     ??_main:	
   961                           
   962                           ; 1 bytes @ 0x30
   963  0050                     	ds	4
   964                           
   965                           	psect	maintext
   966  02C6                     __pmaintext:	
   967 ;;
   968 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   969 ;;
   970 ;; *************** function _main *****************
   971 ;; Defined at:
   972 ;;		line 29 in file "main.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;		None
   975 ;; Auto vars:     Size  Location     Type
   976 ;;		None
   977 ;; Return value:  Size  Location     Type
   978 ;;                  2   52[None  ] int 
   979 ;; Registers used:
   980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   981 ;; Tracked objects:
   982 ;;		On entry : B00/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   986 ;;      Params:         0       0       0       0       0
   987 ;;      Locals:         0       0       0       0       0
   988 ;;      Temps:          0       4       0       0       0
   989 ;;      Totals:         0       4       0       0       0
   990 ;;Total ram usage:        4 bytes
   991 ;; Hardware stack levels required when called:    6
   992 ;; This function calls:
   993 ;;		_FAN_OFF
   994 ;;		_FAN_ON
   995 ;;		_LCD_clear_screen
   996 ;;		_LCD_displayStringOnRowColum
   997 ;;		_door_is_close
   998 ;;		_door_is_open
   999 ;;		_foodIsInMicro
  1000 ;;		_foodOutMicro
  1001 ;;		_heat_off
  1002 ;;		_heat_on
  1003 ;;		_microWave_init
  1004 ;;		_scan_minutes
  1005 ;;		_show_remaining_time
  1006 ;;		_start
  1007 ;;		_start_LED_OFF
  1008 ;;		_start_LED_ON
  1009 ;;		_start_calc_time
  1010 ;;		_stop
  1011 ;;		_stop_cal_time
  1012 ;; This function is called by:
  1013 ;;		Startup code after reset
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           
  1018                           ;psect for function _main
  1019  02C6                     _main:	
  1020  02C6                     l3371:	
  1021                           ;incstack = 0
  1022                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1023                           
  1024                           
  1025                           ;main.c: 31:     ADCON1 = 0x06;
  1026  02C6  3006               	movlw	6
  1027  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  1028  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  1029  02C9  009F               	movwf	31	;volatile
  1030  02CA                     l3373:	
  1031                           
  1032                           ;main.c: 32:     microWave_init();
  1033  02CA  120A  158A  25BD  120A  118A  	fcall	_microWave_init
  1034  02CF                     l3375:	
  1035                           
  1036                           ;main.c: 35:     {;main.c: 36:         if(start())
  1037  02CF  120A  158A  2302  120A  118A  	fcall	_start
  1038  02D4  3A00               	xorlw	0
  1039  02D5  1903               	skipnz
  1040  02D6  2AD8               	goto	u4341
  1041  02D7  2AD9               	goto	u4340
  1042  02D8                     u4341:	
  1043  02D8  2ACF               	goto	l3375
  1044  02D9                     u4340:	
  1045  02D9                     l3377:	
  1046                           
  1047                           ;main.c: 37:         {;main.c: 38:             start_LED_ON();
  1048  02D9  120A  118A  27FB  120A  118A  	fcall	_start_LED_ON
  1049  02DE                     l3379:	
  1050                           
  1051                           ;main.c: 40:             LCD_displayStringOnRowColum(0 , 3 ,"**welcome**");
  1052  02DE  3003               	movlw	3
  1053  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1054  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1055  02E1  00D0               	movwf	??_main
  1056  02E2  0850               	movf	??_main,w
  1057  02E3  00AA               	movwf	LCD_displayStringOnRowColum@colum
  1058  02E4  30BB               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1059  02E5  00D1               	movwf	??_main+1
  1060  02E6  0851               	movf	??_main+1,w
  1061  02E7  00AB               	movwf	LCD_displayStringOnRowColum@str
  1062  02E8  3000               	movlw	0
  1063  02E9  120A  158A  2346  120A  118A  	fcall	_LCD_displayStringOnRowColum
  1064  02EE                     l3381:	
  1065                           
  1066                           ;main.c: 41:             LCD_displayStringOnRowColum(1 , 0 ,"microwaveProject*");
  1067  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  1068  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  1069  02F0  01AA               	clrf	LCD_displayStringOnRowColum@colum
  1070  02F1  304E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1071  02F2  00D0               	movwf	??_main
  1072  02F3  0850               	movf	??_main,w
  1073  02F4  00AB               	movwf	LCD_displayStringOnRowColum@str
  1074  02F5  3001               	movlw	1
  1075  02F6  120A  158A  2346  120A  118A  	fcall	_LCD_displayStringOnRowColum
  1076  02FB                     l3383:	
  1077                           
  1078                           ;main.c: 42:             for(counter = ((10000000UL / 1000000) * 1000000 /30 ) ; counter
      +                           > 0 ; counter--){};
  1079  02FB  3000               	movlw	0
  1080  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1081  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1082  02FE  00DC               	movwf	_counter+3
  1083  02FF  3005               	movlw	5
  1084  0300  00DB               	movwf	_counter+2
  1085  0301  3016               	movlw	22
  1086  0302  00DA               	movwf	_counter+1
  1087  0303  3015               	movlw	21
  1088  0304  00D9               	movwf	_counter
  1089  0305                     l3385:	
  1090  0305  085C               	movf	_counter+3,w
  1091  0306  045B               	iorwf	_counter+2,w
  1092  0307  045A               	iorwf	_counter+1,w
  1093  0308  0459               	iorwf	_counter,w
  1094  0309  1D03               	skipz
  1095  030A  2B0C               	goto	u4351
  1096  030B  2B0D               	goto	u4350
  1097  030C                     u4351:	
  1098  030C  2B0E               	goto	l3389
  1099  030D                     u4350:	
  1100  030D  2B32               	goto	l3391
  1101  030E                     l3389:	
  1102  030E  3001               	movlw	1
  1103  030F  00D0               	movwf	??_main
  1104  0310  3000               	movlw	0
  1105  0311  00D1               	movwf	??_main+1
  1106  0312  3000               	movlw	0
  1107  0313  00D2               	movwf	??_main+2
  1108  0314  3000               	movlw	0
  1109  0315  00D3               	movwf	??_main+3
  1110  0316  0850               	movf	??_main,w
  1111  0317  02D9               	subwf	_counter,f
  1112  0318  0851               	movf	??_main+1,w
  1113  0319  1C03               	skipc
  1114  031A  0F51               	incfsz	??_main+1,w
  1115  031B  2B1D               	goto	u4365
  1116  031C  2B1E               	goto	u4366
  1117  031D                     u4365:	
  1118  031D  02DA               	subwf	_counter+1,f
  1119  031E                     u4366:	
  1120  031E  0852               	movf	??_main+2,w
  1121  031F  1C03               	skipc
  1122  0320  0F52               	incfsz	??_main+2,w
  1123  0321  2B23               	goto	u4367
  1124  0322  2B24               	goto	u4368
  1125  0323                     u4367:	
  1126  0323  02DB               	subwf	_counter+2,f
  1127  0324                     u4368:	
  1128  0324  0853               	movf	??_main+3,w
  1129  0325  1C03               	skipc
  1130  0326  0F53               	incfsz	??_main+3,w
  1131  0327  2B29               	goto	u4369
  1132  0328  2B2A               	goto	u4360
  1133  0329                     u4369:	
  1134  0329  02DC               	subwf	_counter+3,f
  1135  032A                     u4360:	
  1136  032A  085C               	movf	_counter+3,w
  1137  032B  045B               	iorwf	_counter+2,w
  1138  032C  045A               	iorwf	_counter+1,w
  1139  032D  0459               	iorwf	_counter,w
  1140  032E  1D03               	skipz
  1141  032F  2B31               	goto	u4371
  1142  0330  2B32               	goto	u4370
  1143  0331                     u4371:	
  1144  0331  2B0E               	goto	l3389
  1145  0332                     u4370:	
  1146  0332                     l3391:	
  1147                           
  1148                           ;main.c: 43:             scan_minutes();
  1149  0332  120A  118A  241D  120A  118A  	fcall	_scan_minutes
  1150                           
  1151                           ;main.c: 44:             if(foodIsInMicro() && door_is_close())
  1152  0337  120A  158A  24B3  120A  118A  	fcall	_foodIsInMicro
  1153  033C  3A00               	xorlw	0
  1154  033D  1903               	skipnz
  1155  033E  2B40               	goto	u4381
  1156  033F  2B41               	goto	u4380
  1157  0340                     u4381:	
  1158  0340  2ACF               	goto	l3375
  1159  0341                     u4380:	
  1160  0341                     l3393:	
  1161  0341  120A  158A  2476  120A  118A  	fcall	_door_is_close
  1162  0346  3A00               	xorlw	0
  1163  0347  1903               	skipnz
  1164  0348  2B4A               	goto	u4391
  1165  0349  2B4B               	goto	u4390
  1166  034A                     u4391:	
  1167  034A  2ACF               	goto	l3375
  1168  034B                     u4390:	
  1169  034B                     l3395:	
  1170                           
  1171                           ;main.c: 45:             {;main.c: 46:                 heat_on();
  1172  034B  120A  118A  26C9  120A  118A  	fcall	_heat_on
  1173  0350                     l3397:	
  1174                           
  1175                           ;main.c: 47:                 FAN_ON();
  1176  0350  120A  158A  22CD  120A  118A  	fcall	_FAN_ON
  1177  0355                     l3399:	
  1178                           
  1179                           ;main.c: 48:                 start_calc_time();
  1180  0355  120A  158A  231E  120A  118A  	fcall	_start_calc_time
  1181                           
  1182                           ;main.c: 50:                 while(!stop() )
  1183  035A  2BEC               	goto	l3443
  1184  035B                     l3401:	
  1185                           
  1186                           ;main.c: 51:                 {;main.c: 52:                     if(!start())
  1187  035B  120A  158A  2302  120A  118A  	fcall	_start
  1188  0360  3A00               	xorlw	0
  1189  0361  1D03               	skipz
  1190  0362  2B64               	goto	u4401
  1191  0363  2B65               	goto	u4400
  1192  0364                     u4401:	
  1193  0364  2BC5               	goto	l3433
  1194  0365                     u4400:	
  1195  0365                     l3403:	
  1196                           
  1197                           ;main.c: 53:                     {;main.c: 54:                         show_remaining_ti
      +                          me();
  1198  0365  120A  158A  2766  120A  118A  	fcall	_show_remaining_time
  1199  036A                     l3405:	
  1200                           
  1201                           ;main.c: 55:                         if(minutes == 0 && second == 0 )
  1202  036A  1283               	bcf	3,5	;RP0=0, select bank0
  1203  036B  1303               	bcf	3,6	;RP1=0, select bank0
  1204  036C  085D               	movf	_minutes,w	;volatile
  1205  036D  045E               	iorwf	_minutes+1,w	;volatile
  1206  036E  1D03               	btfss	3,2
  1207  036F  2B71               	goto	u4411
  1208  0370  2B72               	goto	u4410
  1209  0371                     u4411:	
  1210  0371  2BEC               	goto	l3443
  1211  0372                     u4410:	
  1212  0372                     l3407:	
  1213  0372  0860               	movf	_second,w	;volatile
  1214  0373  1D03               	btfss	3,2
  1215  0374  2B76               	goto	u4421
  1216  0375  2B77               	goto	u4420
  1217  0376                     u4421:	
  1218  0376  2BEC               	goto	l3443
  1219  0377                     u4420:	
  1220  0377                     l3409:	
  1221                           
  1222                           ;main.c: 56:                         {;main.c: 57:                             stop_cal_
      +                          time();
  1223  0377  120A  158A  22D1  120A  118A  	fcall	_stop_cal_time
  1224  037C                     l3411:	
  1225                           
  1226                           ;main.c: 58:                             show_remaining_time();
  1227  037C  120A  158A  2766  120A  118A  	fcall	_show_remaining_time
  1228  0381                     l3413:	
  1229                           
  1230                           ;main.c: 59:                             heat_off();
  1231  0381  120A  158A  22DE  120A  118A  	fcall	_heat_off
  1232                           
  1233                           ;main.c: 60:                             LCD_displayStringOnRowColum(1 , 0 ,"*******GOOD
      +                          **********");
  1234  0386  1283               	bcf	3,5	;RP0=0, select bank0
  1235  0387  1303               	bcf	3,6	;RP1=0, select bank0
  1236  0388  01AA               	clrf	LCD_displayStringOnRowColum@colum
  1237  0389  3026               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1238  038A  00D0               	movwf	??_main
  1239  038B  0850               	movf	??_main,w
  1240  038C  00AB               	movwf	LCD_displayStringOnRowColum@str
  1241  038D  3001               	movlw	1
  1242  038E  120A  158A  2346  120A  118A  	fcall	_LCD_displayStringOnRowColum
  1243  0393                     l3415:	
  1244                           
  1245                           ;main.c: 62:                             {;main.c: 63:                                 i
      +                          f(stop())
  1246  0393  120A  158A  2310  120A  118A  	fcall	_stop
  1247  0398  3A00               	xorlw	0
  1248  0399  1903               	skipnz
  1249  039A  2B9C               	goto	u4431
  1250  039B  2B9D               	goto	u4430
  1251  039C                     u4431:	
  1252  039C  2BA2               	goto	l3421
  1253  039D                     u4430:	
  1254  039D                     l3417:	
  1255                           
  1256                           ;main.c: 64:                                 {;main.c: 65:                              
      +                                 finish =1;
  1257  039D  1283               	bcf	3,5	;RP0=0, select bank0
  1258  039E  1303               	bcf	3,6	;RP1=0, select bank0
  1259  039F  01DF               	clrf	_finish
  1260  03A0  0ADF               	incf	_finish,f
  1261                           
  1262                           ;main.c: 66:                                     break;
  1263  03A1  2BB6               	goto	l3427
  1264  03A2                     l3421:	
  1265  03A2  120A  158A  2302  120A  118A  	fcall	_start
  1266  03A7  3A00               	xorlw	0
  1267  03A8  1903               	skipnz
  1268  03A9  2BAB               	goto	u4441
  1269  03AA  2BAC               	goto	u4440
  1270  03AB                     u4441:	
  1271  03AB  2B93               	goto	l3415
  1272  03AC                     u4440:	
  1273  03AC                     l3423:	
  1274                           
  1275                           ;main.c: 69:                                 {;main.c: 70:                              
      +                                 scan_minutes();
  1276  03AC  120A  118A  241D  120A  118A  	fcall	_scan_minutes
  1277  03B1                     l3425:	
  1278                           
  1279                           ;main.c: 71:                                     start_calc_time();
  1280  03B1  120A  158A  231E  120A  118A  	fcall	_start_calc_time
  1281  03B6                     l3427:	
  1282                           ;main.c: 72:                                     break;
  1283                           
  1284                           
  1285                           ;main.c: 75:                             if(finish)
  1286  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1287  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  1288  03B8  085F               	movf	_finish,w
  1289  03B9  1903               	btfsc	3,2
  1290  03BA  2BBC               	goto	u4451
  1291  03BB  2BBD               	goto	u4450
  1292  03BC                     u4451:	
  1293  03BC  2BBF               	goto	l3431
  1294  03BD                     u4450:	
  1295  03BD                     l3429:	
  1296                           
  1297                           ;main.c: 76:                             {;main.c: 77:                                 f
      +                          inish=0;
  1298  03BD  01DF               	clrf	_finish
  1299                           
  1300                           ;main.c: 78:                                 break;
  1301  03BE  2BF6               	goto	l3445
  1302  03BF                     l3431:	
  1303                           
  1304                           ;main.c: 80:                             heat_on();
  1305  03BF  120A  118A  26C9  120A  118A  	fcall	_heat_on
  1306  03C4  2BEC               	goto	l3443
  1307  03C5                     l3433:	
  1308                           
  1309                           ;main.c: 84:                     {;main.c: 85:                        stop_cal_time();
  1310  03C5  120A  158A  22D1  120A  118A  	fcall	_stop_cal_time
  1311                           
  1312                           ;main.c: 86:                        heat_off();
  1313  03CA  120A  158A  22DE  120A  118A  	fcall	_heat_off
  1314  03CF                     l3435:	
  1315                           
  1316                           ;main.c: 87:                        LCD_displayStringOnRowColum(1 , 0 ,"*****PAUSE*****"
      +                          );
  1317  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  1318  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  1319  03D1  01AA               	clrf	LCD_displayStringOnRowColum@colum
  1320  03D2  3071               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1321  03D3  00D0               	movwf	??_main
  1322  03D4  0850               	movf	??_main,w
  1323  03D5  00AB               	movwf	LCD_displayStringOnRowColum@str
  1324  03D6  3001               	movlw	1
  1325  03D7  120A  158A  2346  120A  118A  	fcall	_LCD_displayStringOnRowColum
  1326  03DC                     l3437:	
  1327                           ;main.c: 88:                        while(!start());
  1328                           
  1329  03DC  120A  158A  2302  120A  118A  	fcall	_start
  1330  03E1  3A00               	xorlw	0
  1331  03E2  1903               	skipnz
  1332  03E3  2BE5               	goto	u4461
  1333  03E4  2BE6               	goto	u4460
  1334  03E5                     u4461:	
  1335  03E5  2BDC               	goto	l3437
  1336  03E6                     u4460:	
  1337  03E6                     l3439:	
  1338                           
  1339                           ;main.c: 89:                        start_calc_time();
  1340  03E6  120A  158A  231E  120A  118A  	fcall	_start_calc_time
  1341  03EB  2BBF               	goto	l3431
  1342  03EC                     l3443:	
  1343                           
  1344                           ;main.c: 50:                 while(!stop() )
  1345  03EC  120A  158A  2310  120A  118A  	fcall	_stop
  1346  03F1  3A00               	xorlw	0
  1347  03F2  1903               	skipnz
  1348  03F3  2BF5               	goto	u4471
  1349  03F4  2BF6               	goto	u4470
  1350  03F5                     u4471:	
  1351  03F5  2B5B               	goto	l3401
  1352  03F6                     u4470:	
  1353  03F6                     l3445:	
  1354                           
  1355                           ;main.c: 93:                 stop_cal_time();
  1356  03F6  120A  158A  22D1  120A  118A  	fcall	_stop_cal_time
  1357                           
  1358                           ;main.c: 94:                 heat_off();
  1359  03FB  120A  158A  22DE  120A  118A  	fcall	_heat_off
  1360                           
  1361                           ;main.c: 95:                 FAN_OFF();
  1362  0400  120A  158A  22D7  120A  118A  	fcall	_FAN_OFF
  1363  0405                     l3447:	
  1364                           
  1365                           ;main.c: 96:                 door_is_open();
  1366  0405  120A  158A  243A  120A  118A  	fcall	_door_is_open
  1367  040A                     l3449:	
  1368                           
  1369                           ;main.c: 97:                 foodOutMicro();
  1370  040A  120A  158A  24F0  120A  118A  	fcall	_foodOutMicro
  1371                           
  1372                           ;main.c: 98:                 start_LED_OFF();
  1373  040F  120A  158A  22EC  120A  118A  	fcall	_start_LED_OFF
  1374                           
  1375                           ;main.c: 99:                 LCD_clear_screen();
  1376  0414  120A  158A  22E5  120A  118A  	fcall	_LCD_clear_screen
  1377  0419  2ACF               	goto	l3375
  1378  041A  120A  118A  2810   	ljmp	start
  1379  041D                     __end_of_main:	
  1380                           
  1381                           	psect	text1
  1382  0AD1                     __ptext1:	
  1383 ;; *************** function _stop_cal_time *****************
  1384 ;; Defined at:
  1385 ;;		line 342 in file "microwave.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0, pclath, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1399 ;;      Params:         0       0       0       0       0
  1400 ;;      Locals:         0       0       0       0       0
  1401 ;;      Temps:          0       0       0       0       0
  1402 ;;      Totals:         0       0       0       0       0
  1403 ;;Total ram usage:        0 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    3
  1406 ;; This function calls:
  1407 ;;		_global_INT_disable
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           
  1414                           ;psect for function _stop_cal_time
  1415  0AD1                     _stop_cal_time:	
  1416  0AD1                     l3149:	
  1417                           ;incstack = 0
  1418                           ; Regs used in _stop_cal_time: [wreg+status,2+status,0+pclath+cstack]
  1419                           
  1420                           
  1421                           ;microwave.c: 344:     global_INT_disable();
  1422  0AD1  120A  158A  22F3  120A  158A  	fcall	_global_INT_disable
  1423  0AD6                     l431:	
  1424  0AD6  0008               	return
  1425  0AD7                     __end_of_stop_cal_time:	
  1426                           
  1427                           	psect	text2
  1428  0AF3                     __ptext2:	
  1429 ;; *************** function _global_INT_disable *****************
  1430 ;; Defined at:
  1431 ;;		line 88 in file "interrupt.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2, status,0
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1445 ;;      Params:         0       0       0       0       0
  1446 ;;      Locals:         0       0       0       0       0
  1447 ;;      Temps:          0       1       0       0       0
  1448 ;;      Totals:         0       1       0       0       0
  1449 ;;Total ram usage:        1 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; Hardware stack levels required when called:    2
  1452 ;; This function calls:
  1453 ;;		Nothing
  1454 ;; This function is called by:
  1455 ;;		_stop_cal_time
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           
  1460                           ;psect for function _global_INT_disable
  1461  0AF3                     _global_INT_disable:	
  1462  0AF3                     l2949:	
  1463                           ;incstack = 0
  1464                           ; Regs used in _global_INT_disable: [wreg+status,2+status,0]
  1465                           
  1466                           
  1467                           ;interrupt.c: 91:     *((volatile unint8*)0X0B) &=~(1 << 7);
  1468  0AF3  307F               	movlw	127
  1469  0AF4  1283               	bcf	3,5	;RP0=0, select bank0
  1470  0AF5  1303               	bcf	3,6	;RP1=0, select bank0
  1471  0AF6  00A0               	movwf	??_global_INT_disable
  1472  0AF7  0820               	movf	??_global_INT_disable,w
  1473  0AF8  058B               	andwf	11,f	;volatile
  1474  0AF9                     l278:	
  1475  0AF9  0008               	return
  1476  0AFA                     __end_of_global_INT_disable:	
  1477                           
  1478                           	psect	text3
  1479  0B10                     __ptext3:	
  1480 ;; *************** function _stop *****************
  1481 ;; Defined at:
  1482 ;;		line 101 in file "microwave.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      unsigned char 
  1489 ;; Registers used:
  1490 ;;		wreg
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1496 ;;      Params:         0       0       0       0       0
  1497 ;;      Locals:         0       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0
  1499 ;;      Totals:         0       0       0       0       0
  1500 ;;Total ram usage:        0 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    2
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _stop
  1512  0B10                     _stop:	
  1513  0B10                     l2389:	
  1514                           ;incstack = 0
  1515                           ; Regs used in _stop: [wreg]
  1516                           
  1517                           
  1518                           ;microwave.c: 103:  if(!(*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 3)))
  1519  0B10  1283               	bcf	3,5	;RP0=0, select bank0
  1520  0B11  1303               	bcf	3,6	;RP1=0, select bank0
  1521  0B12  1986               	btfsc	6,3	;volatile
  1522  0B13  2B15               	goto	u2571
  1523  0B14  2B16               	goto	u2570
  1524  0B15                     u2571:	
  1525  0B15  2B1C               	goto	l2397
  1526  0B16                     u2570:	
  1527  0B16                     l343:	
  1528  0B16  1D86               	btfss	6,3	;volatile
  1529  0B17  2B19               	goto	u2581
  1530  0B18  2B1A               	goto	u2580
  1531  0B19                     u2581:	
  1532  0B19  2B16               	goto	l343
  1533  0B1A                     u2580:	
  1534  0B1A                     l2393:	
  1535                           
  1536                           ;microwave.c: 107:   return 1;
  1537  0B1A  3001               	movlw	1
  1538  0B1B  2B1D               	goto	l346
  1539  0B1C                     l2397:	
  1540                           
  1541                           ;microwave.c: 111:       return 0;
  1542  0B1C  3000               	movlw	0
  1543  0B1D                     l346:	
  1544  0B1D  0008               	return
  1545  0B1E                     __end_of_stop:	
  1546                           
  1547                           	psect	text4
  1548  0B1E                     __ptext4:	
  1549 ;; *************** function _start_calc_time *****************
  1550 ;; Defined at:
  1551 ;;		line 335 in file "microwave.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;		None
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;		None
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2, status,0, pclath, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1565 ;;      Params:         0       0       0       0       0
  1566 ;;      Locals:         0       0       0       0       0
  1567 ;;      Temps:          0       1       0       0       0
  1568 ;;      Totals:         0       1       0       0       0
  1569 ;;Total ram usage:        1 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; Hardware stack levels required when called:    3
  1572 ;; This function calls:
  1573 ;;		_global_INT_enable
  1574 ;;		_set_T0DR
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           
  1581                           ;psect for function _start_calc_time
  1582  0B1E                     _start_calc_time:	
  1583  0B1E                     l3113:	
  1584                           ;incstack = 0
  1585                           ; Regs used in _start_calc_time: [wreg+status,2+status,0+pclath+cstack]
  1586                           
  1587                           
  1588                           ;microwave.c: 337:     set_T0DR(0);
  1589  0B1E  3000               	movlw	0
  1590  0B1F  120A  118A  26F8  120A  158A  	fcall	_set_T0DR
  1591  0B24                     l3115:	
  1592                           
  1593                           ;microwave.c: 338:     *((volatile unint8*)0X0B) &= ~(1 << 2 );
  1594  0B24  30FB               	movlw	251
  1595  0B25  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0B26  1303               	bcf	3,6	;RP1=0, select bank0
  1597  0B27  00A2               	movwf	??_start_calc_time
  1598  0B28  0822               	movf	??_start_calc_time,w
  1599  0B29  058B               	andwf	11,f	;volatile
  1600  0B2A                     l3117:	
  1601                           
  1602                           ;microwave.c: 339:     global_INT_enable();
  1603  0B2A  120A  158A  22C9  120A  158A  	fcall	_global_INT_enable
  1604  0B2F                     l428:	
  1605  0B2F  0008               	return
  1606  0B30                     __end_of_start_calc_time:	
  1607                           
  1608                           	psect	text5
  1609  0AC9                     __ptext5:	
  1610 ;; *************** function _global_INT_enable *****************
  1611 ;; Defined at:
  1612 ;;		line 82 in file "interrupt.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;		None
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;		None
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      void 
  1619 ;; Registers used:
  1620 ;;		None
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1626 ;;      Params:         0       0       0       0       0
  1627 ;;      Locals:         0       0       0       0       0
  1628 ;;      Temps:          0       0       0       0       0
  1629 ;;      Totals:         0       0       0       0       0
  1630 ;;Total ram usage:        0 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; Hardware stack levels required when called:    2
  1633 ;; This function calls:
  1634 ;;		Nothing
  1635 ;; This function is called by:
  1636 ;;		_start_calc_time
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           
  1641                           ;psect for function _global_INT_enable
  1642  0AC9                     _global_INT_enable:	
  1643  0AC9                     l2181:	
  1644                           ;incstack = 0
  1645                           ; Regs used in _global_INT_enable: []
  1646                           
  1647                           
  1648                           ;interrupt.c: 85:     *((volatile unint8*)0X0B) |=(1 << 7);
  1649  0AC9  178B               	bsf	11,7	;volatile
  1650  0ACA                     l275:	
  1651  0ACA  0008               	return
  1652  0ACB                     __end_of_global_INT_enable:	
  1653                           
  1654                           	psect	text6
  1655  07FB                     __ptext6:	
  1656 ;; *************** function _start_LED_ON *****************
  1657 ;; Defined at:
  1658 ;;		line 114 in file "microwave.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;		None
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      void 
  1665 ;; Registers used:
  1666 ;;		None
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1672 ;;      Params:         0       0       0       0       0
  1673 ;;      Locals:         0       0       0       0       0
  1674 ;;      Temps:          0       0       0       0       0
  1675 ;;      Totals:         0       0       0       0       0
  1676 ;;Total ram usage:        0 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; Hardware stack levels required when called:    2
  1679 ;; This function calls:
  1680 ;;		Nothing
  1681 ;; This function is called by:
  1682 ;;		_main
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           
  1687                           ;psect for function _start_LED_ON
  1688  07FB                     _start_LED_ON:	
  1689  07FB                     l2235:	
  1690                           ;incstack = 0
  1691                           ; Regs used in _start_LED_ON: []
  1692                           
  1693                           
  1694                           ;microwave.c: 116:     ( *((volatile unint8*)PORT_B + (unint8)0x00) |=(unint8)1 << 7);
  1695  07FB  1283               	bcf	3,5	;RP0=0, select bank0
  1696  07FC  1303               	bcf	3,6	;RP1=0, select bank0
  1697  07FD  1786               	bsf	6,7	;volatile
  1698  07FE                     l349:	
  1699  07FE  0008               	return
  1700  07FF                     __end_of_start_LED_ON:	
  1701                           
  1702                           	psect	text7
  1703  0AEC                     __ptext7:	
  1704 ;; *************** function _start_LED_OFF *****************
  1705 ;; Defined at:
  1706 ;;		line 119 in file "microwave.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;		None
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;		None
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      void 
  1713 ;; Registers used:
  1714 ;;		wreg, status,2, status,0
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1720 ;;      Params:         0       0       0       0       0
  1721 ;;      Locals:         0       0       0       0       0
  1722 ;;      Temps:          0       1       0       0       0
  1723 ;;      Totals:         0       1       0       0       0
  1724 ;;Total ram usage:        1 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; Hardware stack levels required when called:    2
  1727 ;; This function calls:
  1728 ;;		Nothing
  1729 ;; This function is called by:
  1730 ;;		_main
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           
  1735                           ;psect for function _start_LED_OFF
  1736  0AEC                     _start_LED_OFF:	
  1737  0AEC                     l3183:	
  1738                           ;incstack = 0
  1739                           ; Regs used in _start_LED_OFF: [wreg+status,2+status,0]
  1740                           
  1741                           
  1742                           ;microwave.c: 121:  (*((volatile unint8*)PORT_B + (unint8)0x00) &=~((unint8)1 << 7));
  1743  0AEC  307F               	movlw	127
  1744  0AED  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0AEE  1303               	bcf	3,6	;RP1=0, select bank0
  1746  0AEF  00A0               	movwf	??_start_LED_OFF
  1747  0AF0  0820               	movf	??_start_LED_OFF,w
  1748  0AF1  0586               	andwf	6,f	;volatile
  1749  0AF2                     l352:	
  1750  0AF2  0008               	return
  1751  0AF3                     __end_of_start_LED_OFF:	
  1752                           
  1753                           	psect	text8
  1754  0B02                     __ptext8:	
  1755 ;; *************** function _start *****************
  1756 ;; Defined at:
  1757 ;;		line 88 in file "microwave.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      unsigned char 
  1764 ;; Registers used:
  1765 ;;		wreg
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1771 ;;      Params:         0       0       0       0       0
  1772 ;;      Locals:         0       0       0       0       0
  1773 ;;      Temps:          0       0       0       0       0
  1774 ;;      Totals:         0       0       0       0       0
  1775 ;;Total ram usage:        0 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    2
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_main
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           
  1786                           ;psect for function _start
  1787  0B02                     _start:	
  1788  0B02                     l2223:	
  1789                           ;incstack = 0
  1790                           ; Regs used in _start: [wreg]
  1791                           
  1792                           
  1793                           ;microwave.c: 90:  if(!(*((volatile unint8*)PORT_A + (unint8)0x00) & (1 << 5)))
  1794  0B02  1283               	bcf	3,5	;RP0=0, select bank0
  1795  0B03  1303               	bcf	3,6	;RP1=0, select bank0
  1796  0B04  1A85               	btfsc	5,5	;volatile
  1797  0B05  2B07               	goto	u2411
  1798  0B06  2B08               	goto	u2410
  1799  0B07                     u2411:	
  1800  0B07  2B0E               	goto	l2231
  1801  0B08                     u2410:	
  1802  0B08                     l336:	
  1803  0B08  1E85               	btfss	5,5	;volatile
  1804  0B09  2B0B               	goto	u2421
  1805  0B0A  2B0C               	goto	u2420
  1806  0B0B                     u2421:	
  1807  0B0B  2B08               	goto	l336
  1808  0B0C                     u2420:	
  1809  0B0C                     l2227:	
  1810                           
  1811                           ;microwave.c: 95:    return 1;
  1812  0B0C  3001               	movlw	1
  1813  0B0D  2B0F               	goto	l339
  1814  0B0E                     l2231:	
  1815                           
  1816                           ;microwave.c: 98:     return 0;
  1817  0B0E  3000               	movlw	0
  1818  0B0F                     l339:	
  1819  0B0F  0008               	return
  1820  0B10                     __end_of_start:	
  1821                           
  1822                           	psect	text9
  1823  0F66                     __ptext9:	
  1824 ;; *************** function _show_remaining_time *****************
  1825 ;; Defined at:
  1826 ;;		line 208 in file "microwave.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1840 ;;      Params:         0       0       0       0       0
  1841 ;;      Locals:         0       0       0       0       0
  1842 ;;      Temps:          0       2       0       0       0
  1843 ;;      Totals:         0       2       0       0       0
  1844 ;;Total ram usage:        2 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; Hardware stack levels required when called:    5
  1847 ;; This function calls:
  1848 ;;		_LCD_displayCharacter
  1849 ;;		_LCD_goToRowColum
  1850 ;;		_LCD_init
  1851 ;;		_LCD_intgerToString
  1852 ;; This function is called by:
  1853 ;;		_main
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           
  1858                           ;psect for function _show_remaining_time
  1859  0F66                     _show_remaining_time:	
  1860  0F66                     l3119:	
  1861                           ;incstack = 0
  1862                           ; Regs used in _show_remaining_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  1863                           
  1864                           
  1865                           ;microwave.c: 210:     LCD_init();
  1866  0F66  120A  158A  2330  120A  158A  	fcall	_LCD_init
  1867  0F6B                     l3121:	
  1868                           
  1869                           ;microwave.c: 212:     if(minutes >= 10)
  1870  0F6B  3000               	movlw	0
  1871  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  1872  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  1873  0F6E  025E               	subwf	_minutes+1,w	;volatile
  1874  0F6F  300A               	movlw	10
  1875  0F70  1903               	skipnz
  1876  0F71  025D               	subwf	_minutes,w	;volatile
  1877  0F72  1C03               	skipc
  1878  0F73  2F75               	goto	u4021
  1879  0F74  2F76               	goto	u4020
  1880  0F75                     u4021:	
  1881  0F75  2F89               	goto	l3127
  1882  0F76                     u4020:	
  1883  0F76                     l3123:	
  1884                           
  1885                           ;microwave.c: 213:     {;microwave.c: 214:         LCD_goToRowColum(0 , 0);
  1886  0F76  01A5               	clrf	LCD_goToRowColum@colum
  1887  0F77  3000               	movlw	0
  1888  0F78  120A  158A  2387  120A  158A  	fcall	_LCD_goToRowColum
  1889  0F7D                     l3125:	
  1890                           
  1891                           ;microwave.c: 216:         LCD_intgerToString(minutes);
  1892  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  1893  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  1894  0F7F  085E               	movf	_minutes+1,w	;volatile
  1895  0F80  00B5               	movwf	LCD_intgerToString@data+1
  1896  0F81  085D               	movf	_minutes,w	;volatile
  1897  0F82  00B4               	movwf	LCD_intgerToString@data
  1898  0F83  120A  118A  27DC  120A  158A  	fcall	_LCD_intgerToString
  1899                           
  1900                           ;microwave.c: 217:     }
  1901  0F88  2FA5               	goto	l383
  1902  0F89                     l3127:	
  1903                           
  1904                           ;microwave.c: 219:     {;microwave.c: 220:         LCD_goToRowColum(0 , 0);
  1905  0F89  01A5               	clrf	LCD_goToRowColum@colum
  1906  0F8A  3000               	movlw	0
  1907  0F8B  120A  158A  2387  120A  158A  	fcall	_LCD_goToRowColum
  1908  0F90                     l3129:	
  1909                           
  1910                           ;microwave.c: 222:      LCD_intgerToString(0);
  1911  0F90  3000               	movlw	0
  1912  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  1913  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  1914  0F93  00B4               	movwf	LCD_intgerToString@data
  1915  0F94  00B5               	movwf	LCD_intgerToString@data+1
  1916  0F95  120A  118A  27DC  120A  158A  	fcall	_LCD_intgerToString
  1917  0F9A                     l3131:	
  1918                           
  1919                           ;microwave.c: 224:      LCD_intgerToString(minutes);
  1920  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  1921  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  1922  0F9C  085E               	movf	_minutes+1,w	;volatile
  1923  0F9D  00B5               	movwf	LCD_intgerToString@data+1
  1924  0F9E  085D               	movf	_minutes,w	;volatile
  1925  0F9F  00B4               	movwf	LCD_intgerToString@data
  1926  0FA0  120A  118A  27DC  120A  158A  	fcall	_LCD_intgerToString
  1927  0FA5                     l383:	
  1928                           ;microwave.c: 225:     }
  1929                           
  1930                           
  1931                           ;microwave.c: 227:         LCD_goToRowColum(0 , 2);
  1932  0FA5  3002               	movlw	2
  1933  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  1934  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  1935  0FA8  00C7               	movwf	??_show_remaining_time
  1936  0FA9  0847               	movf	??_show_remaining_time,w
  1937  0FAA  00A5               	movwf	LCD_goToRowColum@colum
  1938  0FAB  3000               	movlw	0
  1939  0FAC  120A  158A  2387  120A  158A  	fcall	_LCD_goToRowColum
  1940  0FB1                     l3133:	
  1941                           
  1942                           ;microwave.c: 229:      LCD_displayCharacter(':');
  1943  0FB1  303A               	movlw	58
  1944  0FB2  120A  118A  25E7  120A  158A  	fcall	_LCD_displayCharacter
  1945  0FB7                     l3135:	
  1946                           
  1947                           ;microwave.c: 231:  if(second >= 10)
  1948  0FB7  300A               	movlw	10
  1949  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  1950  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  1951  0FBA  0260               	subwf	_second,w	;volatile
  1952  0FBB  1C03               	skipc
  1953  0FBC  2FBE               	goto	u4031
  1954  0FBD  2FBF               	goto	u4030
  1955  0FBE                     u4031:	
  1956  0FBE  2FD8               	goto	l3141
  1957  0FBF                     u4030:	
  1958  0FBF                     l3137:	
  1959                           
  1960                           ;microwave.c: 232:     {;microwave.c: 233:         LCD_goToRowColum(0 , 3);
  1961  0FBF  3003               	movlw	3
  1962  0FC0  00C7               	movwf	??_show_remaining_time
  1963  0FC1  0847               	movf	??_show_remaining_time,w
  1964  0FC2  00A5               	movwf	LCD_goToRowColum@colum
  1965  0FC3  3000               	movlw	0
  1966  0FC4  120A  158A  2387  120A  158A  	fcall	_LCD_goToRowColum
  1967  0FC9                     l3139:	
  1968                           
  1969                           ;microwave.c: 235:         LCD_intgerToString(second);
  1970  0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  1971  0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  1972  0FCB  0860               	movf	_second,w	;volatile
  1973  0FCC  00C7               	movwf	??_show_remaining_time
  1974  0FCD  01C8               	clrf	??_show_remaining_time+1
  1975  0FCE  0847               	movf	??_show_remaining_time,w
  1976  0FCF  00B4               	movwf	LCD_intgerToString@data
  1977  0FD0  0848               	movf	??_show_remaining_time+1,w
  1978  0FD1  00B5               	movwf	LCD_intgerToString@data+1
  1979  0FD2  120A  118A  27DC  120A  158A  	fcall	_LCD_intgerToString
  1980                           
  1981                           ;microwave.c: 236:  }
  1982  0FD7  2FED               	goto	l385
  1983  0FD8                     l3141:	
  1984                           
  1985                           ;microwave.c: 238:     {;microwave.c: 239:         LCD_goToRowColum(0 , 3);
  1986  0FD8  3003               	movlw	3
  1987  0FD9  00C7               	movwf	??_show_remaining_time
  1988  0FDA  0847               	movf	??_show_remaining_time,w
  1989  0FDB  00A5               	movwf	LCD_goToRowColum@colum
  1990  0FDC  3000               	movlw	0
  1991  0FDD  120A  158A  2387  120A  158A  	fcall	_LCD_goToRowColum
  1992  0FE2                     l3143:	
  1993                           
  1994                           ;microwave.c: 241:         LCD_intgerToString(0);
  1995  0FE2  3000               	movlw	0
  1996  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  1997  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  1998  0FE5  00B4               	movwf	LCD_intgerToString@data
  1999  0FE6  00B5               	movwf	LCD_intgerToString@data+1
  2000  0FE7  120A  118A  27DC  120A  158A  	fcall	_LCD_intgerToString
  2001  0FEC  2FC9               	goto	l3139
  2002  0FED                     l385:	
  2003                           ;microwave.c: 245:     }
  2004                           
  2005                           
  2006                           ;microwave.c: 246:         LCD_goToRowColum(0 , 5);
  2007  0FED  3005               	movlw	5
  2008  0FEE  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0FEF  1303               	bcf	3,6	;RP1=0, select bank0
  2010  0FF0  00C7               	movwf	??_show_remaining_time
  2011  0FF1  0847               	movf	??_show_remaining_time,w
  2012  0FF2  00A5               	movwf	LCD_goToRowColum@colum
  2013  0FF3  3000               	movlw	0
  2014  0FF4  120A  158A  2387  120A  158A  	fcall	_LCD_goToRowColum
  2015  0FF9                     l3147:	
  2016                           
  2017                           ;microwave.c: 248:         LCD_displayCharacter(' ');
  2018  0FF9  3020               	movlw	32
  2019  0FFA  120A  118A  25E7  120A  158A  	fcall	_LCD_displayCharacter
  2020  0FFF                     l386:	
  2021  0FFF  0008               	return
  2022  1000                     __end_of_show_remaining_time:	
  2023                           
  2024                           	psect	text10
  2025  041D                     __ptext10:	
  2026 ;; *************** function _scan_minutes *****************
  2027 ;; Defined at:
  2028 ;;		line 124 in file "microwave.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  minutes_digi    5   41[BANK0 ] unsigned char [5]
  2033 ;;  digit           1   47[BANK0 ] unsigned char 
  2034 ;;  indix_of_dig    1   46[BANK0 ] unsigned char 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      void 
  2037 ;; Registers used:
  2038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2044 ;;      Params:         0       0       0       0       0
  2045 ;;      Locals:         0       7       0       0       0
  2046 ;;      Temps:          0       2       0       0       0
  2047 ;;      Totals:         0       9       0       0       0
  2048 ;;Total ram usage:        9 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    5
  2051 ;; This function calls:
  2052 ;;		_LCD_clear_screen
  2053 ;;		_LCD_displayString
  2054 ;;		_LCD_goToRowColum
  2055 ;;		_LCD_init
  2056 ;;		_LCD_intgerToString
  2057 ;;		___wmul
  2058 ;;		_key_pressed
  2059 ;; This function is called by:
  2060 ;;		_main
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           
  2065                           ;psect for function _scan_minutes
  2066  041D                     _scan_minutes:	
  2067  041D                     l3309:	
  2068                           ;incstack = 0
  2069                           ; Regs used in _scan_minutes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2070                           
  2071                           
  2072                           ;microwave.c: 126:     unint8 minutes_digits[5]={0};
  2073  041D  3049               	movlw	scan_minutes@minutes_digits& (0+255)
  2074  041E  0084               	movwf	4
  2075  041F  3005               	movlw	5
  2076  0420  00FF               	movwf	btemp+1
  2077  0421                     u4260:	
  2078  0421  1383               	bcf	3,7	;select IRP bank0
  2079  0422  0180               	clrf	0
  2080  0423  0A84               	incf	4,f
  2081  0424  0BFF               	decfsz	btemp+1,f
  2082  0425  2C21               	goto	u4260
  2083  0426                     l3311:	
  2084                           
  2085                           ;microwave.c: 128:     unint8 indix_of_digit=0 , digit ;
  2086  0426  1283               	bcf	3,5	;RP0=0, select bank0
  2087  0427  1303               	bcf	3,6	;RP1=0, select bank0
  2088  0428  01CE               	clrf	scan_minutes@indix_of_digit
  2089  0429                     l3313:	
  2090                           
  2091                           ;microwave.c: 130:     LCD_init();
  2092  0429  120A  158A  2330  120A  118A  	fcall	_LCD_init
  2093  042E                     l3315:	
  2094                           
  2095                           ;microwave.c: 131:     LCD_clear_screen();
  2096  042E  120A  158A  22E5  120A  118A  	fcall	_LCD_clear_screen
  2097  0433                     l3317:	
  2098                           
  2099                           ;microwave.c: 132:     LCD_goToRowColum(0 , 0);
  2100  0433  1283               	bcf	3,5	;RP0=0, select bank0
  2101  0434  1303               	bcf	3,6	;RP1=0, select bank0
  2102  0435  01A5               	clrf	LCD_goToRowColum@colum
  2103  0436  3000               	movlw	0
  2104  0437  120A  158A  2387  120A  118A  	fcall	_LCD_goToRowColum
  2105  043C                     l3319:	
  2106                           
  2107                           ;microwave.c: 133:     LCD_displayString("00:00");
  2108  043C  30C7               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2109  043D  1283               	bcf	3,5	;RP0=0, select bank0
  2110  043E  1303               	bcf	3,6	;RP1=0, select bank0
  2111  043F  00A5               	movwf	LCD_displayString@str
  2112  0440  3080               	movlw	128
  2113  0441  00A6               	movwf	LCD_displayString@str+1
  2114  0442  120A  158A  23D5  120A  118A  	fcall	_LCD_displayString
  2115  0447                     l3321:	
  2116                           
  2117                           ;microwave.c: 134:     LCD_goToRowColum(1 , 0);
  2118  0447  1283               	bcf	3,5	;RP0=0, select bank0
  2119  0448  1303               	bcf	3,6	;RP1=0, select bank0
  2120  0449  01A5               	clrf	LCD_goToRowColum@colum
  2121  044A  3001               	movlw	1
  2122  044B  120A  158A  2387  120A  118A  	fcall	_LCD_goToRowColum
  2123  0450                     l3323:	
  2124                           
  2125                           ;microwave.c: 135:     LCD_displayString("set time please  ");
  2126  0450  303C               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2127  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2128  0452  1303               	bcf	3,6	;RP1=0, select bank0
  2129  0453  00A5               	movwf	LCD_displayString@str
  2130  0454  3080               	movlw	128
  2131  0455  00A6               	movwf	LCD_displayString@str+1
  2132  0456  120A  158A  23D5  120A  118A  	fcall	_LCD_displayString
  2133  045B                     l3325:	
  2134                           
  2135                           ;microwave.c: 136:     LCD_goToRowColum(0 ,0);
  2136  045B  1283               	bcf	3,5	;RP0=0, select bank0
  2137  045C  1303               	bcf	3,6	;RP1=0, select bank0
  2138  045D  01A5               	clrf	LCD_goToRowColum@colum
  2139  045E  3000               	movlw	0
  2140  045F  120A  158A  2387  120A  118A  	fcall	_LCD_goToRowColum
  2141  0464                     l3327:	
  2142                           
  2143                           ;microwave.c: 139:     {;microwave.c: 140:         digit=key_pressed();
  2144  0464  120A  118A  203E  120A  118A  	fcall	_key_pressed
  2145  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2146  046A  1303               	bcf	3,6	;RP1=0, select bank0
  2147  046B  00C7               	movwf	??_scan_minutes
  2148  046C  0847               	movf	??_scan_minutes,w
  2149  046D  00CF               	movwf	scan_minutes@digit
  2150  046E                     l3329:	
  2151                           
  2152                           ;microwave.c: 143:         if(digit !='*' && digit!='#' && digit !=10 )
  2153  046E  302A               	movlw	42
  2154  046F  064F               	xorwf	scan_minutes@digit,w
  2155  0470  1903               	btfsc	3,2
  2156  0471  2C73               	goto	u4271
  2157  0472  2C74               	goto	u4270
  2158  0473                     u4271:	
  2159  0473  2C9B               	goto	l3341
  2160  0474                     u4270:	
  2161  0474                     l3331:	
  2162  0474  3023               	movlw	35
  2163  0475  064F               	xorwf	scan_minutes@digit,w
  2164  0476  1903               	btfsc	3,2
  2165  0477  2C79               	goto	u4281
  2166  0478  2C7A               	goto	u4280
  2167  0479                     u4281:	
  2168  0479  2C9B               	goto	l3341
  2169  047A                     u4280:	
  2170  047A                     l3333:	
  2171  047A  300A               	movlw	10
  2172  047B  064F               	xorwf	scan_minutes@digit,w
  2173  047C  1903               	btfsc	3,2
  2174  047D  2C7F               	goto	u4291
  2175  047E  2C80               	goto	u4290
  2176  047F                     u4291:	
  2177  047F  2C9B               	goto	l3341
  2178  0480                     u4290:	
  2179  0480                     l3335:	
  2180                           
  2181                           ;microwave.c: 144:         {;microwave.c: 145:             LCD_intgerToString(digit);
  2182  0480  084F               	movf	scan_minutes@digit,w
  2183  0481  00C7               	movwf	??_scan_minutes
  2184  0482  01C8               	clrf	??_scan_minutes+1
  2185  0483  0847               	movf	??_scan_minutes,w
  2186  0484  00B4               	movwf	LCD_intgerToString@data
  2187  0485  0848               	movf	??_scan_minutes+1,w
  2188  0486  00B5               	movwf	LCD_intgerToString@data+1
  2189  0487  120A  118A  27DC  120A  118A  	fcall	_LCD_intgerToString
  2190  048C                     l3337:	
  2191                           
  2192                           ;microwave.c: 147:             minutes_digits[indix_of_digit]=digit;
  2193  048C  1283               	bcf	3,5	;RP0=0, select bank0
  2194  048D  1303               	bcf	3,6	;RP1=0, select bank0
  2195  048E  084F               	movf	scan_minutes@digit,w
  2196  048F  00C7               	movwf	??_scan_minutes
  2197  0490  084E               	movf	scan_minutes@indix_of_digit,w
  2198  0491  3E49               	addlw	(low (scan_minutes@minutes_digits| 0))& (0+255)
  2199  0492  0084               	movwf	4
  2200  0493  0847               	movf	??_scan_minutes,w
  2201  0494  1383               	bcf	3,7	;select IRP bank0
  2202  0495  0080               	movwf	0
  2203  0496                     l3339:	
  2204                           
  2205                           ;microwave.c: 149:             indix_of_digit++;
  2206  0496  3001               	movlw	1
  2207  0497  00C7               	movwf	??_scan_minutes
  2208  0498  0847               	movf	??_scan_minutes,w
  2209  0499  07CE               	addwf	scan_minutes@indix_of_digit,f
  2210                           
  2211                           ;microwave.c: 150:         }
  2212  049A  2C64               	goto	l3327
  2213  049B                     l3341:	
  2214  049B  302A               	movlw	42
  2215  049C  064F               	xorwf	scan_minutes@digit,w
  2216  049D  1D03               	btfss	3,2
  2217  049E  2CA0               	goto	u4301
  2218  049F  2CA1               	goto	u4300
  2219  04A0                     u4301:	
  2220  04A0  2CA2               	goto	l3347
  2221  04A1                     u4300:	
  2222  04A1  2CC8               	goto	l3357
  2223  04A2                     l3347:	
  2224  04A2  3023               	movlw	35
  2225  04A3  064F               	xorwf	scan_minutes@digit,w
  2226  04A4  1D03               	btfss	3,2
  2227  04A5  2CA7               	goto	u4311
  2228  04A6  2CA8               	goto	u4310
  2229  04A7                     u4311:	
  2230  04A7  2CC7               	goto	l359
  2231  04A8                     u4310:	
  2232  04A8                     l3349:	
  2233                           
  2234                           ;microwave.c: 156:         {;microwave.c: 157:              LCD_goToRowColum(0 , 0);
  2235  04A8  01A5               	clrf	LCD_goToRowColum@colum
  2236  04A9  3000               	movlw	0
  2237  04AA  120A  158A  2387  120A  118A  	fcall	_LCD_goToRowColum
  2238  04AF                     l3351:	
  2239                           
  2240                           ;microwave.c: 159:              LCD_displayString("00:00");
  2241  04AF  30C7               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2242  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2243  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2244  04B2  00A5               	movwf	LCD_displayString@str
  2245  04B3  3080               	movlw	128
  2246  04B4  00A6               	movwf	LCD_displayString@str+1
  2247  04B5  120A  158A  23D5  120A  118A  	fcall	_LCD_displayString
  2248  04BA                     l3353:	
  2249                           
  2250                           ;microwave.c: 161:              LCD_goToRowColum(0 , 0);
  2251  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2252  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2253  04BC  01A5               	clrf	LCD_goToRowColum@colum
  2254  04BD  3000               	movlw	0
  2255  04BE  120A  158A  2387  120A  118A  	fcall	_LCD_goToRowColum
  2256  04C3                     l3355:	
  2257                           
  2258                           ;microwave.c: 163:              indix_of_digit=0;
  2259  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2260  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2261  04C5  01CE               	clrf	scan_minutes@indix_of_digit
  2262  04C6  2C64               	goto	l3327
  2263  04C7                     l359:	
  2264  04C7  2C64               	goto	l3327
  2265  04C8                     l3357:	
  2266                           
  2267                           ;microwave.c: 168:      indix_of_digit =0;
  2268  04C8  01CE               	clrf	scan_minutes@indix_of_digit
  2269                           
  2270                           ;microwave.c: 172:  while(indix_of_digit < 2 )
  2271  04C9  2CFA               	goto	l3367
  2272  04CA                     l3359:	
  2273                           
  2274                           ;microwave.c: 173:     {;microwave.c: 174:         if(indix_of_digit == 0)
  2275  04CA  084E               	movf	scan_minutes@indix_of_digit,w
  2276  04CB  1D03               	btfss	3,2
  2277  04CC  2CCE               	goto	u4321
  2278  04CD  2CCF               	goto	u4320
  2279  04CE                     u4321:	
  2280  04CE  2CDB               	goto	l3363
  2281  04CF                     u4320:	
  2282  04CF                     l3361:	
  2283                           
  2284                           ;microwave.c: 175:         {;microwave.c: 176:             minutes = minutes_digits[indi
      +                          x_of_digit];
  2285  04CF  084E               	movf	scan_minutes@indix_of_digit,w
  2286  04D0  3E49               	addlw	(low (scan_minutes@minutes_digits| 0))& (0+255)
  2287  04D1  0084               	movwf	4
  2288  04D2  1383               	bcf	3,7	;select IRP bank0
  2289  04D3  0800               	movf	0,w
  2290  04D4  00C7               	movwf	??_scan_minutes
  2291  04D5  01C8               	clrf	??_scan_minutes+1
  2292  04D6  0847               	movf	??_scan_minutes,w
  2293  04D7  00DD               	movwf	_minutes	;volatile
  2294  04D8  0848               	movf	??_scan_minutes+1,w
  2295  04D9  00DE               	movwf	_minutes+1	;volatile
  2296                           
  2297                           ;microwave.c: 177:         }
  2298  04DA  2CF6               	goto	l3365
  2299  04DB                     l3363:	
  2300                           
  2301                           ;microwave.c: 179:   {;microwave.c: 180:    minutes = minutes * 10 + minutes_digits[indi
      +                          x_of_digit];
  2302  04DB  084E               	movf	scan_minutes@indix_of_digit,w
  2303  04DC  3E49               	addlw	(low (scan_minutes@minutes_digits| 0))& (0+255)
  2304  04DD  0084               	movwf	4
  2305  04DE  085E               	movf	_minutes+1,w	;volatile
  2306  04DF  00A1               	movwf	___wmul@multiplier+1
  2307  04E0  085D               	movf	_minutes,w	;volatile
  2308  04E1  00A0               	movwf	___wmul@multiplier
  2309  04E2  300A               	movlw	10
  2310  04E3  00A2               	movwf	___wmul@multiplicand
  2311  04E4  3000               	movlw	0
  2312  04E5  00A3               	movwf	___wmul@multiplicand+1
  2313  04E6  120A  158A  23AE  120A  118A  	fcall	___wmul
  2314  04EB  1383               	bcf	3,7	;select IRP bank0
  2315  04EC  0800               	movf	0,w
  2316  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  2317  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  2318  04EF  0720               	addwf	?___wmul,w
  2319  04F0  00DD               	movwf	_minutes	;volatile
  2320  04F1  3000               	movlw	0
  2321  04F2  1803               	skipnc
  2322  04F3  3001               	movlw	1
  2323  04F4  0721               	addwf	?___wmul+1,w
  2324  04F5  00DE               	movwf	_minutes+1	;volatile
  2325  04F6                     l3365:	
  2326                           
  2327                           ;microwave.c: 183:      indix_of_digit++;
  2328  04F6  3001               	movlw	1
  2329  04F7  00C7               	movwf	??_scan_minutes
  2330  04F8  0847               	movf	??_scan_minutes,w
  2331  04F9  07CE               	addwf	scan_minutes@indix_of_digit,f
  2332  04FA                     l3367:	
  2333                           
  2334                           ;microwave.c: 172:  while(indix_of_digit < 2 )
  2335  04FA  3002               	movlw	2
  2336  04FB  024E               	subwf	scan_minutes@indix_of_digit,w
  2337  04FC  1C03               	skipc
  2338  04FD  2CFF               	goto	u4331
  2339  04FE  2D00               	goto	u4330
  2340  04FF                     u4331:	
  2341  04FF  2CCA               	goto	l3359
  2342  0500                     u4330:	
  2343  0500                     l3369:	
  2344                           
  2345                           ;microwave.c: 185:         second=0;
  2346  0500  01E0               	clrf	_second	;volatile
  2347  0501                     l370:	
  2348  0501  0008               	return
  2349  0502                     __end_of_scan_minutes:	
  2350                           
  2351                           	psect	text11
  2352  003E                     __ptext11:	
  2353 ;; *************** function _key_pressed *****************
  2354 ;; Defined at:
  2355 ;;		line 19 in file "keypad.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;		None
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;		None
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      unsigned char 
  2362 ;; Registers used:
  2363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2369 ;;      Params:         0       0       0       0       0
  2370 ;;      Locals:         0       0       0       0       0
  2371 ;;      Temps:          0       4       0       0       0
  2372 ;;      Totals:         0       4       0       0       0
  2373 ;;Total ram usage:        4 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    2
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_scan_minutes
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           
  2384                           ;psect for function _key_pressed
  2385  003E                     _key_pressed:	
  2386  003E                     l2791:	
  2387                           ;incstack = 0
  2388                           ; Regs used in _key_pressed: [wreg-fsr0h+status,2+status,0+pclath]
  2389                           
  2390  003E  30FE               	movlw	254
  2391  003F  1283               	bcf	3,5	;RP0=0, select bank0
  2392  0040  1303               	bcf	3,6	;RP1=0, select bank0
  2393  0041  00A0               	movwf	??_key_pressed
  2394  0042  0820               	movf	??_key_pressed,w
  2395  0043  0588               	andwf	8,f	;volatile
  2396  0044                     l152:	
  2397  0044  1488               	bsf	8,1	;volatile
  2398  0045                     l154:	
  2399  0045  1508               	bsf	8,2	;volatile
  2400  0046                     l156:	
  2401  0046  1588               	bsf	8,3	;volatile
  2402  0047                     l2799:	
  2403                           
  2404                           ;keypad.c: 23:     for(counter = ((10000000UL / 1000000) * 500 /30 ) ; counter > 0 ; cou
      +                          nter--){};
  2405  0047  3000               	movlw	0
  2406  0048  00DC               	movwf	_counter+3
  2407  0049  3000               	movlw	0
  2408  004A  00DB               	movwf	_counter+2
  2409  004B  3000               	movlw	0
  2410  004C  00DA               	movwf	_counter+1
  2411  004D  30A6               	movlw	166
  2412  004E  00D9               	movwf	_counter
  2413  004F  085C               	movf	_counter+3,w
  2414  0050  045B               	iorwf	_counter+2,w
  2415  0051  045A               	iorwf	_counter+1,w
  2416  0052  0459               	iorwf	_counter,w
  2417  0053  1D03               	skipz
  2418  0054  2856               	goto	u3341
  2419  0055  2857               	goto	u3340
  2420  0056                     u3341:	
  2421  0056  2858               	goto	l2803
  2422  0057                     u3340:	
  2423  0057  287C               	goto	l159
  2424  0058                     l2803:	
  2425  0058  3001               	movlw	1
  2426  0059  00A0               	movwf	??_key_pressed
  2427  005A  3000               	movlw	0
  2428  005B  00A1               	movwf	??_key_pressed+1
  2429  005C  3000               	movlw	0
  2430  005D  00A2               	movwf	??_key_pressed+2
  2431  005E  3000               	movlw	0
  2432  005F  00A3               	movwf	??_key_pressed+3
  2433  0060  0820               	movf	??_key_pressed,w
  2434  0061  02D9               	subwf	_counter,f
  2435  0062  0821               	movf	??_key_pressed+1,w
  2436  0063  1C03               	skipc
  2437  0064  0F21               	incfsz	??_key_pressed+1,w
  2438  0065  2867               	goto	u3355
  2439  0066  2868               	goto	u3356
  2440  0067                     u3355:	
  2441  0067  02DA               	subwf	_counter+1,f
  2442  0068                     u3356:	
  2443  0068  0822               	movf	??_key_pressed+2,w
  2444  0069  1C03               	skipc
  2445  006A  0F22               	incfsz	??_key_pressed+2,w
  2446  006B  286D               	goto	u3357
  2447  006C  286E               	goto	u3358
  2448  006D                     u3357:	
  2449  006D  02DB               	subwf	_counter+2,f
  2450  006E                     u3358:	
  2451  006E  0823               	movf	??_key_pressed+3,w
  2452  006F  1C03               	skipc
  2453  0070  0F23               	incfsz	??_key_pressed+3,w
  2454  0071  2873               	goto	u3359
  2455  0072  2874               	goto	u3350
  2456  0073                     u3359:	
  2457  0073  02DC               	subwf	_counter+3,f
  2458  0074                     u3350:	
  2459  0074  085C               	movf	_counter+3,w
  2460  0075  045B               	iorwf	_counter+2,w
  2461  0076  045A               	iorwf	_counter+1,w
  2462  0077  0459               	iorwf	_counter,w
  2463  0078  1D03               	skipz
  2464  0079  287B               	goto	u3361
  2465  007A  287C               	goto	u3360
  2466  007B                     u3361:	
  2467  007B  2858               	goto	l2803
  2468  007C                     u3360:	
  2469  007C                     l159:	
  2470                           
  2471                           ;keypad.c: 24:     if(!(*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 0))){ while(!
      +                          (*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 0))); return keypad[0][0] ;}
  2472  007C  1806               	btfsc	6,0	;volatile
  2473  007D  287F               	goto	u3371
  2474  007E  2880               	goto	u3370
  2475  007F                     u3371:	
  2476  007F  288C               	goto	l160
  2477  0080                     u3370:	
  2478  0080                     l161:	
  2479  0080  1C06               	btfss	6,0	;volatile
  2480  0081  2883               	goto	u3381
  2481  0082  2884               	goto	u3380
  2482  0083                     u3381:	
  2483  0083  2880               	goto	l161
  2484  0084                     u3380:	
  2485  0084                     l2807:	
  2486  0084  3001               	movlw	low (_keypad-__stringbase)
  2487  0085  0084               	movwf	4
  2488  0086  120A  118A  270A  120A  118A  	fcall	stringdir
  2489  008B  2AC5               	goto	l164
  2490  008C                     l160:	
  2491                           
  2492                           ;keypad.c: 25:     if(!(*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 1))){ while(!
      +                          (*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 1))); return keypad[0][1] ;}
  2493  008C  1886               	btfsc	6,1	;volatile
  2494  008D  288F               	goto	u3391
  2495  008E  2890               	goto	u3390
  2496  008F                     u3391:	
  2497  008F  289C               	goto	l165
  2498  0090                     u3390:	
  2499  0090                     l166:	
  2500  0090  1C86               	btfss	6,1	;volatile
  2501  0091  2893               	goto	u3401
  2502  0092  2894               	goto	u3400
  2503  0093                     u3401:	
  2504  0093  2890               	goto	l166
  2505  0094                     u3400:	
  2506  0094                     l2813:	
  2507  0094  3002               	movlw	low (((_keypad+1)-__stringbase)| (0+32768))
  2508  0095  0084               	movwf	4
  2509  0096  120A  118A  270A  120A  118A  	fcall	stringdir
  2510  009B  2AC5               	goto	l164
  2511  009C                     l165:	
  2512                           
  2513                           ;keypad.c: 26:     if(!(*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 2))){ while(!
      +                          (*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 2))); return keypad[0][2] ;}
  2514  009C  1906               	btfsc	6,2	;volatile
  2515  009D  289F               	goto	u3411
  2516  009E  28A0               	goto	u3410
  2517  009F                     u3411:	
  2518  009F  28AC               	goto	l2823
  2519  00A0                     u3410:	
  2520  00A0                     l170:	
  2521  00A0  1D06               	btfss	6,2	;volatile
  2522  00A1  28A3               	goto	u3421
  2523  00A2  28A4               	goto	u3420
  2524  00A3                     u3421:	
  2525  00A3  28A0               	goto	l170
  2526  00A4                     u3420:	
  2527  00A4                     l2819:	
  2528  00A4  3003               	movlw	low (((_keypad+2)-__stringbase)| (0+32768))
  2529  00A5  0084               	movwf	4
  2530  00A6  120A  118A  270A  120A  118A  	fcall	stringdir
  2531  00AB  2AC5               	goto	l164
  2532  00AC                     l2823:	
  2533                           
  2534                           ;keypad.c: 27:     for(counter = ((10000000UL / 1000000) * 500 /30 ) ; counter > 0 ; cou
      +                          nter--){};
  2535  00AC  3000               	movlw	0
  2536  00AD  00DC               	movwf	_counter+3
  2537  00AE  3000               	movlw	0
  2538  00AF  00DB               	movwf	_counter+2
  2539  00B0  3000               	movlw	0
  2540  00B1  00DA               	movwf	_counter+1
  2541  00B2  30A6               	movlw	166
  2542  00B3  00D9               	movwf	_counter
  2543  00B4  085C               	movf	_counter+3,w
  2544  00B5  045B               	iorwf	_counter+2,w
  2545  00B6  045A               	iorwf	_counter+1,w
  2546  00B7  0459               	iorwf	_counter,w
  2547  00B8  1D03               	skipz
  2548  00B9  28BB               	goto	u3431
  2549  00BA  28BC               	goto	u3430
  2550  00BB                     u3431:	
  2551  00BB  28BD               	goto	l2827
  2552  00BC                     u3430:	
  2553  00BC  28E1               	goto	l175
  2554  00BD                     l2827:	
  2555  00BD  3001               	movlw	1
  2556  00BE  00A0               	movwf	??_key_pressed
  2557  00BF  3000               	movlw	0
  2558  00C0  00A1               	movwf	??_key_pressed+1
  2559  00C1  3000               	movlw	0
  2560  00C2  00A2               	movwf	??_key_pressed+2
  2561  00C3  3000               	movlw	0
  2562  00C4  00A3               	movwf	??_key_pressed+3
  2563  00C5  0820               	movf	??_key_pressed,w
  2564  00C6  02D9               	subwf	_counter,f
  2565  00C7  0821               	movf	??_key_pressed+1,w
  2566  00C8  1C03               	skipc
  2567  00C9  0F21               	incfsz	??_key_pressed+1,w
  2568  00CA  28CC               	goto	u3445
  2569  00CB  28CD               	goto	u3446
  2570  00CC                     u3445:	
  2571  00CC  02DA               	subwf	_counter+1,f
  2572  00CD                     u3446:	
  2573  00CD  0822               	movf	??_key_pressed+2,w
  2574  00CE  1C03               	skipc
  2575  00CF  0F22               	incfsz	??_key_pressed+2,w
  2576  00D0  28D2               	goto	u3447
  2577  00D1  28D3               	goto	u3448
  2578  00D2                     u3447:	
  2579  00D2  02DB               	subwf	_counter+2,f
  2580  00D3                     u3448:	
  2581  00D3  0823               	movf	??_key_pressed+3,w
  2582  00D4  1C03               	skipc
  2583  00D5  0F23               	incfsz	??_key_pressed+3,w
  2584  00D6  28D8               	goto	u3449
  2585  00D7  28D9               	goto	u3440
  2586  00D8                     u3449:	
  2587  00D8  02DC               	subwf	_counter+3,f
  2588  00D9                     u3440:	
  2589  00D9  085C               	movf	_counter+3,w
  2590  00DA  045B               	iorwf	_counter+2,w
  2591  00DB  045A               	iorwf	_counter+1,w
  2592  00DC  0459               	iorwf	_counter,w
  2593  00DD  1D03               	skipz
  2594  00DE  28E0               	goto	u3451
  2595  00DF  28E1               	goto	u3450
  2596  00E0                     u3451:	
  2597  00E0  28BD               	goto	l2827
  2598  00E1                     u3450:	
  2599  00E1                     l175:	
  2600  00E1  1408               	bsf	8,0	;volatile
  2601  00E2                     l2831:	
  2602  00E2  30FD               	movlw	253
  2603  00E3  00A0               	movwf	??_key_pressed
  2604  00E4  0820               	movf	??_key_pressed,w
  2605  00E5  0588               	andwf	8,f	;volatile
  2606  00E6                     l179:	
  2607  00E6  1508               	bsf	8,2	;volatile
  2608  00E7                     l181:	
  2609  00E7  1588               	bsf	8,3	;volatile
  2610  00E8                     l2837:	
  2611                           
  2612                           ;keypad.c: 30:     for(counter = ((10000000UL / 1000000) * 500 /30 ) ; counter > 0 ; cou
      +                          nter--){};
  2613  00E8  3000               	movlw	0
  2614  00E9  00DC               	movwf	_counter+3
  2615  00EA  3000               	movlw	0
  2616  00EB  00DB               	movwf	_counter+2
  2617  00EC  3000               	movlw	0
  2618  00ED  00DA               	movwf	_counter+1
  2619  00EE  30A6               	movlw	166
  2620  00EF  00D9               	movwf	_counter
  2621  00F0  085C               	movf	_counter+3,w
  2622  00F1  045B               	iorwf	_counter+2,w
  2623  00F2  045A               	iorwf	_counter+1,w
  2624  00F3  0459               	iorwf	_counter,w
  2625  00F4  1D03               	skipz
  2626  00F5  28F7               	goto	u3461
  2627  00F6  28F8               	goto	u3460
  2628  00F7                     u3461:	
  2629  00F7  28F9               	goto	l2841
  2630  00F8                     u3460:	
  2631  00F8  291D               	goto	l184
  2632  00F9                     l2841:	
  2633  00F9  3001               	movlw	1
  2634  00FA  00A0               	movwf	??_key_pressed
  2635  00FB  3000               	movlw	0
  2636  00FC  00A1               	movwf	??_key_pressed+1
  2637  00FD  3000               	movlw	0
  2638  00FE  00A2               	movwf	??_key_pressed+2
  2639  00FF  3000               	movlw	0
  2640  0100  00A3               	movwf	??_key_pressed+3
  2641  0101  0820               	movf	??_key_pressed,w
  2642  0102  02D9               	subwf	_counter,f
  2643  0103  0821               	movf	??_key_pressed+1,w
  2644  0104  1C03               	skipc
  2645  0105  0F21               	incfsz	??_key_pressed+1,w
  2646  0106  2908               	goto	u3475
  2647  0107  2909               	goto	u3476
  2648  0108                     u3475:	
  2649  0108  02DA               	subwf	_counter+1,f
  2650  0109                     u3476:	
  2651  0109  0822               	movf	??_key_pressed+2,w
  2652  010A  1C03               	skipc
  2653  010B  0F22               	incfsz	??_key_pressed+2,w
  2654  010C  290E               	goto	u3477
  2655  010D  290F               	goto	u3478
  2656  010E                     u3477:	
  2657  010E  02DB               	subwf	_counter+2,f
  2658  010F                     u3478:	
  2659  010F  0823               	movf	??_key_pressed+3,w
  2660  0110  1C03               	skipc
  2661  0111  0F23               	incfsz	??_key_pressed+3,w
  2662  0112  2914               	goto	u3479
  2663  0113  2915               	goto	u3470
  2664  0114                     u3479:	
  2665  0114  02DC               	subwf	_counter+3,f
  2666  0115                     u3470:	
  2667  0115  085C               	movf	_counter+3,w
  2668  0116  045B               	iorwf	_counter+2,w
  2669  0117  045A               	iorwf	_counter+1,w
  2670  0118  0459               	iorwf	_counter,w
  2671  0119  1D03               	skipz
  2672  011A  291C               	goto	u3481
  2673  011B  291D               	goto	u3480
  2674  011C                     u3481:	
  2675  011C  28F9               	goto	l2841
  2676  011D                     u3480:	
  2677  011D                     l184:	
  2678                           
  2679                           ;keypad.c: 31:     if(!(*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 0))){ while(!
      +                          (*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 0))); return keypad[1][0] ;}
  2680  011D  1806               	btfsc	6,0	;volatile
  2681  011E  2920               	goto	u3491
  2682  011F  2921               	goto	u3490
  2683  0120                     u3491:	
  2684  0120  292D               	goto	l185
  2685  0121                     u3490:	
  2686  0121                     l186:	
  2687  0121  1C06               	btfss	6,0	;volatile
  2688  0122  2924               	goto	u3501
  2689  0123  2925               	goto	u3500
  2690  0124                     u3501:	
  2691  0124  2921               	goto	l186
  2692  0125                     u3500:	
  2693  0125                     l2845:	
  2694  0125  3004               	movlw	low (((_keypad+3)-__stringbase)| (0+32768))
  2695  0126  0084               	movwf	4
  2696  0127  120A  118A  270A  120A  118A  	fcall	stringdir
  2697  012C  2AC5               	goto	l164
  2698  012D                     l185:	
  2699                           
  2700                           ;keypad.c: 32:     if(!(*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 1))){ while(!
      +                          (*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 1))); return keypad[1][1] ;}
  2701  012D  1886               	btfsc	6,1	;volatile
  2702  012E  2930               	goto	u3511
  2703  012F  2931               	goto	u3510
  2704  0130                     u3511:	
  2705  0130  293D               	goto	l189
  2706  0131                     u3510:	
  2707  0131                     l190:	
  2708  0131  1C86               	btfss	6,1	;volatile
  2709  0132  2934               	goto	u3521
  2710  0133  2935               	goto	u3520
  2711  0134                     u3521:	
  2712  0134  2931               	goto	l190
  2713  0135                     u3520:	
  2714  0135                     l2851:	
  2715  0135  3005               	movlw	low (((_keypad+4)-__stringbase)| (0+32768))
  2716  0136  0084               	movwf	4
  2717  0137  120A  118A  270A  120A  118A  	fcall	stringdir
  2718  013C  2AC5               	goto	l164
  2719  013D                     l189:	
  2720                           
  2721                           ;keypad.c: 33:     if(!(*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 2))){ while(!
      +                          (*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 2))); return keypad[1][2] ;}
  2722  013D  1906               	btfsc	6,2	;volatile
  2723  013E  2940               	goto	u3531
  2724  013F  2941               	goto	u3530
  2725  0140                     u3531:	
  2726  0140  294D               	goto	l2861
  2727  0141                     u3530:	
  2728  0141                     l194:	
  2729  0141  1D06               	btfss	6,2	;volatile
  2730  0142  2944               	goto	u3541
  2731  0143  2945               	goto	u3540
  2732  0144                     u3541:	
  2733  0144  2941               	goto	l194
  2734  0145                     u3540:	
  2735  0145                     l2857:	
  2736  0145  3006               	movlw	low (((_keypad+5)-__stringbase)| (0+32768))
  2737  0146  0084               	movwf	4
  2738  0147  120A  118A  270A  120A  118A  	fcall	stringdir
  2739  014C  2AC5               	goto	l164
  2740  014D                     l2861:	
  2741                           
  2742                           ;keypad.c: 34:     for(counter = ((10000000UL / 1000000) * 500 /30 ) ; counter > 0 ; cou
      +                          nter--){};
  2743  014D  3000               	movlw	0
  2744  014E  00DC               	movwf	_counter+3
  2745  014F  3000               	movlw	0
  2746  0150  00DB               	movwf	_counter+2
  2747  0151  3000               	movlw	0
  2748  0152  00DA               	movwf	_counter+1
  2749  0153  30A6               	movlw	166
  2750  0154  00D9               	movwf	_counter
  2751  0155  085C               	movf	_counter+3,w
  2752  0156  045B               	iorwf	_counter+2,w
  2753  0157  045A               	iorwf	_counter+1,w
  2754  0158  0459               	iorwf	_counter,w
  2755  0159  1D03               	skipz
  2756  015A  295C               	goto	u3551
  2757  015B  295D               	goto	u3550
  2758  015C                     u3551:	
  2759  015C  295E               	goto	l2865
  2760  015D                     u3550:	
  2761  015D  2982               	goto	l199
  2762  015E                     l2865:	
  2763  015E  3001               	movlw	1
  2764  015F  00A0               	movwf	??_key_pressed
  2765  0160  3000               	movlw	0
  2766  0161  00A1               	movwf	??_key_pressed+1
  2767  0162  3000               	movlw	0
  2768  0163  00A2               	movwf	??_key_pressed+2
  2769  0164  3000               	movlw	0
  2770  0165  00A3               	movwf	??_key_pressed+3
  2771  0166  0820               	movf	??_key_pressed,w
  2772  0167  02D9               	subwf	_counter,f
  2773  0168  0821               	movf	??_key_pressed+1,w
  2774  0169  1C03               	skipc
  2775  016A  0F21               	incfsz	??_key_pressed+1,w
  2776  016B  296D               	goto	u3565
  2777  016C  296E               	goto	u3566
  2778  016D                     u3565:	
  2779  016D  02DA               	subwf	_counter+1,f
  2780  016E                     u3566:	
  2781  016E  0822               	movf	??_key_pressed+2,w
  2782  016F  1C03               	skipc
  2783  0170  0F22               	incfsz	??_key_pressed+2,w
  2784  0171  2973               	goto	u3567
  2785  0172  2974               	goto	u3568
  2786  0173                     u3567:	
  2787  0173  02DB               	subwf	_counter+2,f
  2788  0174                     u3568:	
  2789  0174  0823               	movf	??_key_pressed+3,w
  2790  0175  1C03               	skipc
  2791  0176  0F23               	incfsz	??_key_pressed+3,w
  2792  0177  2979               	goto	u3569
  2793  0178  297A               	goto	u3560
  2794  0179                     u3569:	
  2795  0179  02DC               	subwf	_counter+3,f
  2796  017A                     u3560:	
  2797  017A  085C               	movf	_counter+3,w
  2798  017B  045B               	iorwf	_counter+2,w
  2799  017C  045A               	iorwf	_counter+1,w
  2800  017D  0459               	iorwf	_counter,w
  2801  017E  1D03               	skipz
  2802  017F  2981               	goto	u3571
  2803  0180  2982               	goto	u3570
  2804  0181                     u3571:	
  2805  0181  295E               	goto	l2865
  2806  0182                     u3570:	
  2807  0182                     l199:	
  2808  0182  1408               	bsf	8,0	;volatile
  2809  0183                     l201:	
  2810  0183  1488               	bsf	8,1	;volatile
  2811  0184                     l2871:	
  2812  0184  30FB               	movlw	251
  2813  0185  00A0               	movwf	??_key_pressed
  2814  0186  0820               	movf	??_key_pressed,w
  2815  0187  0588               	andwf	8,f	;volatile
  2816  0188                     l205:	
  2817  0188  1588               	bsf	8,3	;volatile
  2818  0189                     l2875:	
  2819                           
  2820                           ;keypad.c: 37:     for(counter = ((10000000UL / 1000000) * 500 /30 ) ; counter > 0 ; cou
      +                          nter--){};
  2821  0189  3000               	movlw	0
  2822  018A  00DC               	movwf	_counter+3
  2823  018B  3000               	movlw	0
  2824  018C  00DB               	movwf	_counter+2
  2825  018D  3000               	movlw	0
  2826  018E  00DA               	movwf	_counter+1
  2827  018F  30A6               	movlw	166
  2828  0190  00D9               	movwf	_counter
  2829  0191  085C               	movf	_counter+3,w
  2830  0192  045B               	iorwf	_counter+2,w
  2831  0193  045A               	iorwf	_counter+1,w
  2832  0194  0459               	iorwf	_counter,w
  2833  0195  1D03               	skipz
  2834  0196  2998               	goto	u3581
  2835  0197  2999               	goto	u3580
  2836  0198                     u3581:	
  2837  0198  299A               	goto	l2879
  2838  0199                     u3580:	
  2839  0199  29BE               	goto	l208
  2840  019A                     l2879:	
  2841  019A  3001               	movlw	1
  2842  019B  00A0               	movwf	??_key_pressed
  2843  019C  3000               	movlw	0
  2844  019D  00A1               	movwf	??_key_pressed+1
  2845  019E  3000               	movlw	0
  2846  019F  00A2               	movwf	??_key_pressed+2
  2847  01A0  3000               	movlw	0
  2848  01A1  00A3               	movwf	??_key_pressed+3
  2849  01A2  0820               	movf	??_key_pressed,w
  2850  01A3  02D9               	subwf	_counter,f
  2851  01A4  0821               	movf	??_key_pressed+1,w
  2852  01A5  1C03               	skipc
  2853  01A6  0F21               	incfsz	??_key_pressed+1,w
  2854  01A7  29A9               	goto	u3595
  2855  01A8  29AA               	goto	u3596
  2856  01A9                     u3595:	
  2857  01A9  02DA               	subwf	_counter+1,f
  2858  01AA                     u3596:	
  2859  01AA  0822               	movf	??_key_pressed+2,w
  2860  01AB  1C03               	skipc
  2861  01AC  0F22               	incfsz	??_key_pressed+2,w
  2862  01AD  29AF               	goto	u3597
  2863  01AE  29B0               	goto	u3598
  2864  01AF                     u3597:	
  2865  01AF  02DB               	subwf	_counter+2,f
  2866  01B0                     u3598:	
  2867  01B0  0823               	movf	??_key_pressed+3,w
  2868  01B1  1C03               	skipc
  2869  01B2  0F23               	incfsz	??_key_pressed+3,w
  2870  01B3  29B5               	goto	u3599
  2871  01B4  29B6               	goto	u3590
  2872  01B5                     u3599:	
  2873  01B5  02DC               	subwf	_counter+3,f
  2874  01B6                     u3590:	
  2875  01B6  085C               	movf	_counter+3,w
  2876  01B7  045B               	iorwf	_counter+2,w
  2877  01B8  045A               	iorwf	_counter+1,w
  2878  01B9  0459               	iorwf	_counter,w
  2879  01BA  1D03               	skipz
  2880  01BB  29BD               	goto	u3601
  2881  01BC  29BE               	goto	u3600
  2882  01BD                     u3601:	
  2883  01BD  299A               	goto	l2879
  2884  01BE                     u3600:	
  2885  01BE                     l208:	
  2886                           
  2887                           ;keypad.c: 38:     if(!(*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 0))){ while(!
      +                          (*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 0))); return keypad[2][0] ;}
  2888  01BE  1806               	btfsc	6,0	;volatile
  2889  01BF  29C1               	goto	u3611
  2890  01C0  29C2               	goto	u3610
  2891  01C1                     u3611:	
  2892  01C1  29CE               	goto	l209
  2893  01C2                     u3610:	
  2894  01C2                     l210:	
  2895  01C2  1C06               	btfss	6,0	;volatile
  2896  01C3  29C5               	goto	u3621
  2897  01C4  29C6               	goto	u3620
  2898  01C5                     u3621:	
  2899  01C5  29C2               	goto	l210
  2900  01C6                     u3620:	
  2901  01C6                     l2883:	
  2902  01C6  3007               	movlw	low (((_keypad+6)-__stringbase)| (0+32768))
  2903  01C7  0084               	movwf	4
  2904  01C8  120A  118A  270A  120A  118A  	fcall	stringdir
  2905  01CD  2AC5               	goto	l164
  2906  01CE                     l209:	
  2907                           
  2908                           ;keypad.c: 39:     if(!(*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 1))){ while(!
      +                          (*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 1))); return keypad[2][1] ;}
  2909  01CE  1886               	btfsc	6,1	;volatile
  2910  01CF  29D1               	goto	u3631
  2911  01D0  29D2               	goto	u3630
  2912  01D1                     u3631:	
  2913  01D1  29DE               	goto	l213
  2914  01D2                     u3630:	
  2915  01D2                     l214:	
  2916  01D2  1C86               	btfss	6,1	;volatile
  2917  01D3  29D5               	goto	u3641
  2918  01D4  29D6               	goto	u3640
  2919  01D5                     u3641:	
  2920  01D5  29D2               	goto	l214
  2921  01D6                     u3640:	
  2922  01D6                     l2889:	
  2923  01D6  3008               	movlw	low (((_keypad+7)-__stringbase)| (0+32768))
  2924  01D7  0084               	movwf	4
  2925  01D8  120A  118A  270A  120A  118A  	fcall	stringdir
  2926  01DD  2AC5               	goto	l164
  2927  01DE                     l213:	
  2928                           
  2929                           ;keypad.c: 40:     if(!(*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 2))){ while(!
      +                          (*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 2))); return keypad[2][2] ;}
  2930  01DE  1906               	btfsc	6,2	;volatile
  2931  01DF  29E1               	goto	u3651
  2932  01E0  29E2               	goto	u3650
  2933  01E1                     u3651:	
  2934  01E1  29EE               	goto	l2899
  2935  01E2                     u3650:	
  2936  01E2                     l218:	
  2937  01E2  1D06               	btfss	6,2	;volatile
  2938  01E3  29E5               	goto	u3661
  2939  01E4  29E6               	goto	u3660
  2940  01E5                     u3661:	
  2941  01E5  29E2               	goto	l218
  2942  01E6                     u3660:	
  2943  01E6                     l2895:	
  2944  01E6  3009               	movlw	low (((_keypad+8)-__stringbase)| (0+32768))
  2945  01E7  0084               	movwf	4
  2946  01E8  120A  118A  270A  120A  118A  	fcall	stringdir
  2947  01ED  2AC5               	goto	l164
  2948  01EE                     l2899:	
  2949                           
  2950                           ;keypad.c: 41:     for(counter = ((10000000UL / 1000000) * 500 /30 ) ; counter > 0 ; cou
      +                          nter--){};
  2951  01EE  3000               	movlw	0
  2952  01EF  00DC               	movwf	_counter+3
  2953  01F0  3000               	movlw	0
  2954  01F1  00DB               	movwf	_counter+2
  2955  01F2  3000               	movlw	0
  2956  01F3  00DA               	movwf	_counter+1
  2957  01F4  30A6               	movlw	166
  2958  01F5  00D9               	movwf	_counter
  2959  01F6  085C               	movf	_counter+3,w
  2960  01F7  045B               	iorwf	_counter+2,w
  2961  01F8  045A               	iorwf	_counter+1,w
  2962  01F9  0459               	iorwf	_counter,w
  2963  01FA  1D03               	skipz
  2964  01FB  29FD               	goto	u3671
  2965  01FC  29FE               	goto	u3670
  2966  01FD                     u3671:	
  2967  01FD  29FF               	goto	l2903
  2968  01FE                     u3670:	
  2969  01FE  2A23               	goto	l223
  2970  01FF                     l2903:	
  2971  01FF  3001               	movlw	1
  2972  0200  00A0               	movwf	??_key_pressed
  2973  0201  3000               	movlw	0
  2974  0202  00A1               	movwf	??_key_pressed+1
  2975  0203  3000               	movlw	0
  2976  0204  00A2               	movwf	??_key_pressed+2
  2977  0205  3000               	movlw	0
  2978  0206  00A3               	movwf	??_key_pressed+3
  2979  0207  0820               	movf	??_key_pressed,w
  2980  0208  02D9               	subwf	_counter,f
  2981  0209  0821               	movf	??_key_pressed+1,w
  2982  020A  1C03               	skipc
  2983  020B  0F21               	incfsz	??_key_pressed+1,w
  2984  020C  2A0E               	goto	u3685
  2985  020D  2A0F               	goto	u3686
  2986  020E                     u3685:	
  2987  020E  02DA               	subwf	_counter+1,f
  2988  020F                     u3686:	
  2989  020F  0822               	movf	??_key_pressed+2,w
  2990  0210  1C03               	skipc
  2991  0211  0F22               	incfsz	??_key_pressed+2,w
  2992  0212  2A14               	goto	u3687
  2993  0213  2A15               	goto	u3688
  2994  0214                     u3687:	
  2995  0214  02DB               	subwf	_counter+2,f
  2996  0215                     u3688:	
  2997  0215  0823               	movf	??_key_pressed+3,w
  2998  0216  1C03               	skipc
  2999  0217  0F23               	incfsz	??_key_pressed+3,w
  3000  0218  2A1A               	goto	u3689
  3001  0219  2A1B               	goto	u3680
  3002  021A                     u3689:	
  3003  021A  02DC               	subwf	_counter+3,f
  3004  021B                     u3680:	
  3005  021B  085C               	movf	_counter+3,w
  3006  021C  045B               	iorwf	_counter+2,w
  3007  021D  045A               	iorwf	_counter+1,w
  3008  021E  0459               	iorwf	_counter,w
  3009  021F  1D03               	skipz
  3010  0220  2A22               	goto	u3691
  3011  0221  2A23               	goto	u3690
  3012  0222                     u3691:	
  3013  0222  29FF               	goto	l2903
  3014  0223                     u3690:	
  3015  0223                     l223:	
  3016  0223  1408               	bsf	8,0	;volatile
  3017  0224                     l225:	
  3018  0224  1488               	bsf	8,1	;volatile
  3019  0225                     l227:	
  3020  0225  1508               	bsf	8,2	;volatile
  3021  0226                     l2911:	
  3022  0226  30F7               	movlw	247
  3023  0227  00A0               	movwf	??_key_pressed
  3024  0228  0820               	movf	??_key_pressed,w
  3025  0229  0588               	andwf	8,f	;volatile
  3026  022A                     l2913:	
  3027                           
  3028                           ;keypad.c: 44:     for(counter = ((10000000UL / 1000000) * 500 /30 ) ; counter > 0 ; cou
      +                          nter--){};
  3029  022A  3000               	movlw	0
  3030  022B  00DC               	movwf	_counter+3
  3031  022C  3000               	movlw	0
  3032  022D  00DB               	movwf	_counter+2
  3033  022E  3000               	movlw	0
  3034  022F  00DA               	movwf	_counter+1
  3035  0230  30A6               	movlw	166
  3036  0231  00D9               	movwf	_counter
  3037  0232  085C               	movf	_counter+3,w
  3038  0233  045B               	iorwf	_counter+2,w
  3039  0234  045A               	iorwf	_counter+1,w
  3040  0235  0459               	iorwf	_counter,w
  3041  0236  1D03               	skipz
  3042  0237  2A39               	goto	u3701
  3043  0238  2A3A               	goto	u3700
  3044  0239                     u3701:	
  3045  0239  2A3B               	goto	l2917
  3046  023A                     u3700:	
  3047  023A  2A5F               	goto	l232
  3048  023B                     l2917:	
  3049  023B  3001               	movlw	1
  3050  023C  00A0               	movwf	??_key_pressed
  3051  023D  3000               	movlw	0
  3052  023E  00A1               	movwf	??_key_pressed+1
  3053  023F  3000               	movlw	0
  3054  0240  00A2               	movwf	??_key_pressed+2
  3055  0241  3000               	movlw	0
  3056  0242  00A3               	movwf	??_key_pressed+3
  3057  0243  0820               	movf	??_key_pressed,w
  3058  0244  02D9               	subwf	_counter,f
  3059  0245  0821               	movf	??_key_pressed+1,w
  3060  0246  1C03               	skipc
  3061  0247  0F21               	incfsz	??_key_pressed+1,w
  3062  0248  2A4A               	goto	u3715
  3063  0249  2A4B               	goto	u3716
  3064  024A                     u3715:	
  3065  024A  02DA               	subwf	_counter+1,f
  3066  024B                     u3716:	
  3067  024B  0822               	movf	??_key_pressed+2,w
  3068  024C  1C03               	skipc
  3069  024D  0F22               	incfsz	??_key_pressed+2,w
  3070  024E  2A50               	goto	u3717
  3071  024F  2A51               	goto	u3718
  3072  0250                     u3717:	
  3073  0250  02DB               	subwf	_counter+2,f
  3074  0251                     u3718:	
  3075  0251  0823               	movf	??_key_pressed+3,w
  3076  0252  1C03               	skipc
  3077  0253  0F23               	incfsz	??_key_pressed+3,w
  3078  0254  2A56               	goto	u3719
  3079  0255  2A57               	goto	u3710
  3080  0256                     u3719:	
  3081  0256  02DC               	subwf	_counter+3,f
  3082  0257                     u3710:	
  3083  0257  085C               	movf	_counter+3,w
  3084  0258  045B               	iorwf	_counter+2,w
  3085  0259  045A               	iorwf	_counter+1,w
  3086  025A  0459               	iorwf	_counter,w
  3087  025B  1D03               	skipz
  3088  025C  2A5E               	goto	u3721
  3089  025D  2A5F               	goto	u3720
  3090  025E                     u3721:	
  3091  025E  2A3B               	goto	l2917
  3092  025F                     u3720:	
  3093  025F                     l232:	
  3094                           
  3095                           ;keypad.c: 45:     if(!(*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 0))){ while(!
      +                          (*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 0))); return keypad[3][0] ;}
  3096  025F  1806               	btfsc	6,0	;volatile
  3097  0260  2A62               	goto	u3731
  3098  0261  2A63               	goto	u3730
  3099  0262                     u3731:	
  3100  0262  2A6F               	goto	l233
  3101  0263                     u3730:	
  3102  0263                     l234:	
  3103  0263  1C06               	btfss	6,0	;volatile
  3104  0264  2A66               	goto	u3741
  3105  0265  2A67               	goto	u3740
  3106  0266                     u3741:	
  3107  0266  2A63               	goto	l234
  3108  0267                     u3740:	
  3109  0267                     l2921:	
  3110  0267  300A               	movlw	low (((_keypad+9)-__stringbase)| (0+32768))
  3111  0268  0084               	movwf	4
  3112  0269  120A  118A  270A  120A  118A  	fcall	stringdir
  3113  026E  2AC5               	goto	l164
  3114  026F                     l233:	
  3115                           
  3116                           ;keypad.c: 46:     if(!(*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 1))){ while(!
      +                          (*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 1))); return keypad[3][1] ;}
  3117  026F  1886               	btfsc	6,1	;volatile
  3118  0270  2A72               	goto	u3751
  3119  0271  2A73               	goto	u3750
  3120  0272                     u3751:	
  3121  0272  2A7F               	goto	l237
  3122  0273                     u3750:	
  3123  0273                     l238:	
  3124  0273  1C86               	btfss	6,1	;volatile
  3125  0274  2A76               	goto	u3761
  3126  0275  2A77               	goto	u3760
  3127  0276                     u3761:	
  3128  0276  2A73               	goto	l238
  3129  0277                     u3760:	
  3130  0277                     l2927:	
  3131  0277  300B               	movlw	low (((_keypad+10)-__stringbase)| (0+32768))
  3132  0278  0084               	movwf	4
  3133  0279  120A  118A  270A  120A  118A  	fcall	stringdir
  3134  027E  2AC5               	goto	l164
  3135  027F                     l237:	
  3136                           
  3137                           ;keypad.c: 47:     if(!(*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 2))){ while(!
      +                          (*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 2))); return keypad[3][2] ;}
  3138  027F  1906               	btfsc	6,2	;volatile
  3139  0280  2A82               	goto	u3771
  3140  0281  2A83               	goto	u3770
  3141  0282                     u3771:	
  3142  0282  2A8F               	goto	l2937
  3143  0283                     u3770:	
  3144  0283                     l242:	
  3145  0283  1D06               	btfss	6,2	;volatile
  3146  0284  2A86               	goto	u3781
  3147  0285  2A87               	goto	u3780
  3148  0286                     u3781:	
  3149  0286  2A83               	goto	l242
  3150  0287                     u3780:	
  3151  0287                     l2933:	
  3152  0287  300C               	movlw	low (((_keypad+11)-__stringbase)| (0+32768))
  3153  0288  0084               	movwf	4
  3154  0289  120A  118A  270A  120A  118A  	fcall	stringdir
  3155  028E  2AC5               	goto	l164
  3156  028F                     l2937:	
  3157                           
  3158                           ;keypad.c: 48:     for(counter = ((10000000UL / 1000000) * 500 /30 ) ; counter > 0 ; cou
      +                          nter--){};
  3159  028F  3000               	movlw	0
  3160  0290  00DC               	movwf	_counter+3
  3161  0291  3000               	movlw	0
  3162  0292  00DB               	movwf	_counter+2
  3163  0293  3000               	movlw	0
  3164  0294  00DA               	movwf	_counter+1
  3165  0295  30A6               	movlw	166
  3166  0296  00D9               	movwf	_counter
  3167  0297  085C               	movf	_counter+3,w
  3168  0298  045B               	iorwf	_counter+2,w
  3169  0299  045A               	iorwf	_counter+1,w
  3170  029A  0459               	iorwf	_counter,w
  3171  029B  1D03               	skipz
  3172  029C  2A9E               	goto	u3791
  3173  029D  2A9F               	goto	u3790
  3174  029E                     u3791:	
  3175  029E  2AA0               	goto	l2941
  3176  029F                     u3790:	
  3177  029F  2AC4               	goto	l2943
  3178  02A0                     l2941:	
  3179  02A0  3001               	movlw	1
  3180  02A1  00A0               	movwf	??_key_pressed
  3181  02A2  3000               	movlw	0
  3182  02A3  00A1               	movwf	??_key_pressed+1
  3183  02A4  3000               	movlw	0
  3184  02A5  00A2               	movwf	??_key_pressed+2
  3185  02A6  3000               	movlw	0
  3186  02A7  00A3               	movwf	??_key_pressed+3
  3187  02A8  0820               	movf	??_key_pressed,w
  3188  02A9  02D9               	subwf	_counter,f
  3189  02AA  0821               	movf	??_key_pressed+1,w
  3190  02AB  1C03               	skipc
  3191  02AC  0F21               	incfsz	??_key_pressed+1,w
  3192  02AD  2AAF               	goto	u3805
  3193  02AE  2AB0               	goto	u3806
  3194  02AF                     u3805:	
  3195  02AF  02DA               	subwf	_counter+1,f
  3196  02B0                     u3806:	
  3197  02B0  0822               	movf	??_key_pressed+2,w
  3198  02B1  1C03               	skipc
  3199  02B2  0F22               	incfsz	??_key_pressed+2,w
  3200  02B3  2AB5               	goto	u3807
  3201  02B4  2AB6               	goto	u3808
  3202  02B5                     u3807:	
  3203  02B5  02DB               	subwf	_counter+2,f
  3204  02B6                     u3808:	
  3205  02B6  0823               	movf	??_key_pressed+3,w
  3206  02B7  1C03               	skipc
  3207  02B8  0F23               	incfsz	??_key_pressed+3,w
  3208  02B9  2ABB               	goto	u3809
  3209  02BA  2ABC               	goto	u3800
  3210  02BB                     u3809:	
  3211  02BB  02DC               	subwf	_counter+3,f
  3212  02BC                     u3800:	
  3213  02BC  085C               	movf	_counter+3,w
  3214  02BD  045B               	iorwf	_counter+2,w
  3215  02BE  045A               	iorwf	_counter+1,w
  3216  02BF  0459               	iorwf	_counter,w
  3217  02C0  1D03               	skipz
  3218  02C1  2AC3               	goto	u3811
  3219  02C2  2AC4               	goto	u3810
  3220  02C3                     u3811:	
  3221  02C3  2AA0               	goto	l2941
  3222  02C4                     u3810:	
  3223  02C4                     l2943:	
  3224                           
  3225                           ;keypad.c: 50:     return 10;
  3226  02C4  300A               	movlw	10
  3227  02C5                     l164:	
  3228  02C5  0008               	return
  3229  02C6                     __end_of_key_pressed:	
  3230                           
  3231                           	psect	text12
  3232  0BAE                     __ptext12:	
  3233 ;; *************** function ___wmul *****************
  3234 ;; Defined at:
  3235 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3238 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;  product         2    4[BANK0 ] unsigned int 
  3241 ;; Return value:  Size  Location     Type
  3242 ;;                  2    0[BANK0 ] unsigned int 
  3243 ;; Registers used:
  3244 ;;		wreg, status,2, status,0
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3250 ;;      Params:         0       4       0       0       0
  3251 ;;      Locals:         0       2       0       0       0
  3252 ;;      Temps:          0       0       0       0       0
  3253 ;;      Totals:         0       6       0       0       0
  3254 ;;Total ram usage:        6 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; Hardware stack levels required when called:    2
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_scan_minutes
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           
  3265                           ;psect for function ___wmul
  3266  0BAE                     ___wmul:	
  3267  0BAE                     l3295:	
  3268                           ;incstack = 0
  3269                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3270                           
  3271  0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  3272  0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  3273  0BB0  01A4               	clrf	___wmul@product
  3274  0BB1  01A5               	clrf	___wmul@product+1
  3275  0BB2                     l3297:	
  3276  0BB2  1C20               	btfss	___wmul@multiplier,0
  3277  0BB3  2BB5               	goto	u4221
  3278  0BB4  2BB6               	goto	u4220
  3279  0BB5                     u4221:	
  3280  0BB5  2BBC               	goto	l529
  3281  0BB6                     u4220:	
  3282  0BB6                     l3299:	
  3283  0BB6  0822               	movf	___wmul@multiplicand,w
  3284  0BB7  07A4               	addwf	___wmul@product,f
  3285  0BB8  1803               	skipnc
  3286  0BB9  0AA5               	incf	___wmul@product+1,f
  3287  0BBA  0823               	movf	___wmul@multiplicand+1,w
  3288  0BBB  07A5               	addwf	___wmul@product+1,f
  3289  0BBC                     l529:	
  3290  0BBC  3001               	movlw	1
  3291  0BBD                     u4235:	
  3292  0BBD  1003               	clrc
  3293  0BBE  0DA2               	rlf	___wmul@multiplicand,f
  3294  0BBF  0DA3               	rlf	___wmul@multiplicand+1,f
  3295  0BC0  3EFF               	addlw	-1
  3296  0BC1  1D03               	skipz
  3297  0BC2  2BBD               	goto	u4235
  3298  0BC3                     l3301:	
  3299  0BC3  3001               	movlw	1
  3300  0BC4                     u4245:	
  3301  0BC4  1003               	clrc
  3302  0BC5  0CA1               	rrf	___wmul@multiplier+1,f
  3303  0BC6  0CA0               	rrf	___wmul@multiplier,f
  3304  0BC7  3EFF               	addlw	-1
  3305  0BC8  1D03               	skipz
  3306  0BC9  2BC4               	goto	u4245
  3307  0BCA                     l3303:	
  3308  0BCA  0820               	movf	___wmul@multiplier,w
  3309  0BCB  0421               	iorwf	___wmul@multiplier+1,w
  3310  0BCC  1D03               	btfss	3,2
  3311  0BCD  2BCF               	goto	u4251
  3312  0BCE  2BD0               	goto	u4250
  3313  0BCF                     u4251:	
  3314  0BCF  2BB2               	goto	l3297
  3315  0BD0                     u4250:	
  3316  0BD0                     l3305:	
  3317  0BD0  0825               	movf	___wmul@product+1,w
  3318  0BD1  00A1               	movwf	?___wmul+1
  3319  0BD2  0824               	movf	___wmul@product,w
  3320  0BD3  00A0               	movwf	?___wmul
  3321  0BD4                     l531:	
  3322  0BD4  0008               	return
  3323  0BD5                     __end_of___wmul:	
  3324                           
  3325                           	psect	text13
  3326  07DC                     __ptext13:	
  3327 ;; *************** function _LCD_intgerToString *****************
  3328 ;; Defined at:
  3329 ;;		line 207 in file "lcd.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;  data            2   20[BANK0 ] int 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  buff           16   23[BANK0 ] unsigned char [16]
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      void 
  3336 ;; Registers used:
  3337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3343 ;;      Params:         0       2       0       0       0
  3344 ;;      Locals:         0      16       0       0       0
  3345 ;;      Temps:          0       1       0       0       0
  3346 ;;      Totals:         0      19       0       0       0
  3347 ;;Total ram usage:       19 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:    4
  3350 ;; This function calls:
  3351 ;;		_LCD_displayString
  3352 ;;		_itoa
  3353 ;; This function is called by:
  3354 ;;		_scan_minutes
  3355 ;;		_show_remaining_time
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           
  3360                           ;psect for function _LCD_intgerToString
  3361  07DC                     _LCD_intgerToString:	
  3362  07DC                     l2785:	
  3363                           ;incstack = 0
  3364                           ; Regs used in _LCD_intgerToString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3365                           
  3366                           
  3367                           ;lcd.c: 207: void LCD_intgerToString(int data);lcd.c: 208: {;lcd.c: 209:    char buff[16
      +                          ];;lcd.c: 211:    itoa(data,buff,10);
  3368  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  3369  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  3370  07DE  0835               	movf	LCD_intgerToString@data+1,w
  3371  07DF  00AA               	movwf	itoa@num+1
  3372  07E0  0834               	movf	LCD_intgerToString@data,w
  3373  07E1  00A9               	movwf	itoa@num
  3374  07E2  3037               	movlw	(low (LCD_intgerToString@buff| 0))& (0+255)
  3375  07E3  00B6               	movwf	??_LCD_intgerToString
  3376  07E4  0836               	movf	??_LCD_intgerToString,w
  3377  07E5  00AB               	movwf	itoa@buff
  3378  07E6  300A               	movlw	10
  3379  07E7  00AC               	movwf	itoa@b
  3380  07E8  3000               	movlw	0
  3381  07E9  00AD               	movwf	itoa@b+1
  3382  07EA  120A  158A  26DC  120A  118A  	fcall	_itoa
  3383  07EF                     l2787:	
  3384                           
  3385                           ;lcd.c: 213:    LCD_displayString(buff);
  3386  07EF  3037               	movlw	(low (LCD_intgerToString@buff| 0))& (0+255)
  3387  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  3388  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  3389  07F2  00A5               	movwf	LCD_displayString@str
  3390  07F3  3000               	movlw	0
  3391  07F4  00A6               	movwf	LCD_displayString@str+1
  3392  07F5  120A  158A  23D5  120A  118A  	fcall	_LCD_displayString
  3393  07FA                     l140:	
  3394  07FA  0008               	return
  3395  07FB                     __end_of_LCD_intgerToString:	
  3396                           
  3397                           	psect	text14
  3398  0EDC                     __ptext14:	
  3399 ;; *************** function _itoa *****************
  3400 ;; Defined at:
  3401 ;;		line 12 in file "lcd.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;  num             2    9[BANK0 ] int 
  3404 ;;  buff            1   11[BANK0 ] PTR unsigned char 
  3405 ;;		 -> LCD_intgerToString@buff(16), 
  3406 ;;  b               2   12[BANK0 ] int 
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  n               2   18[BANK0 ] int 
  3409 ;;  digits_num      2   16[BANK0 ] int 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3419 ;;      Params:         0       5       0       0       0
  3420 ;;      Locals:         0       4       0       0       0
  3421 ;;      Temps:          0       2       0       0       0
  3422 ;;      Totals:         0      11       0       0       0
  3423 ;;Total ram usage:       11 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    3
  3426 ;; This function calls:
  3427 ;;		___awdiv
  3428 ;;		___awmod
  3429 ;; This function is called by:
  3430 ;;		_LCD_intgerToString
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           
  3435                           ;psect for function _itoa
  3436  0EDC                     _itoa:	
  3437  0EDC                     l2689:	
  3438                           ;incstack = 0
  3439                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3440                           
  3441                           
  3442                           ;lcd.c: 12: static void itoa(int num , char *buff , int b);lcd.c: 13: {;lcd.c: 14:     i
      +                          f(num==0)
  3443  0EDC  1283               	bcf	3,5	;RP0=0, select bank0
  3444  0EDD  1303               	bcf	3,6	;RP1=0, select bank0
  3445  0EDE  0829               	movf	itoa@num,w
  3446  0EDF  042A               	iorwf	itoa@num+1,w
  3447  0EE0  1D03               	btfss	3,2
  3448  0EE1  2EE3               	goto	u3171
  3449  0EE2  2EE4               	goto	u3170
  3450  0EE3                     u3171:	
  3451  0EE3  2EEF               	goto	l2695
  3452  0EE4                     u3170:	
  3453  0EE4                     l2691:	
  3454                           
  3455                           ;lcd.c: 15:     {;lcd.c: 16:         buff[0]=48 ;
  3456  0EE4  3030               	movlw	48
  3457  0EE5  00AE               	movwf	??_itoa
  3458  0EE6  082B               	movf	itoa@buff,w
  3459  0EE7  0084               	movwf	4
  3460  0EE8  082E               	movf	??_itoa,w
  3461  0EE9  1383               	bcf	3,7	;select IRP bank0
  3462  0EEA  0080               	movwf	0
  3463  0EEB                     l2693:	
  3464                           
  3465                           ;lcd.c: 17:         buff[1]='\0';
  3466  0EEB  0A2B               	incf	itoa@buff,w
  3467  0EEC  0084               	movwf	4
  3468  0EED  0180               	clrf	0
  3469                           
  3470                           ;lcd.c: 18:     }
  3471  0EEE  2F65               	goto	l93
  3472  0EEF                     l2695:	
  3473                           
  3474                           ;lcd.c: 20:     {;lcd.c: 21:         int digits_num=0 , n ;
  3475  0EEF  01B0               	clrf	itoa@digits_num
  3476  0EF0  01B1               	clrf	itoa@digits_num+1
  3477  0EF1                     l2697:	
  3478                           
  3479                           ;lcd.c: 23:         n=num;
  3480  0EF1  082A               	movf	itoa@num+1,w
  3481  0EF2  00B3               	movwf	itoa@n+1
  3482  0EF3  0829               	movf	itoa@num,w
  3483  0EF4  00B2               	movwf	itoa@n
  3484  0EF5                     l2699:	
  3485                           ;lcd.c: 25:         while(++digits_num && (n/=b));
  3486                           
  3487  0EF5  3001               	movlw	1
  3488  0EF6  07B0               	addwf	itoa@digits_num,f
  3489  0EF7  1803               	skipnc
  3490  0EF8  0AB1               	incf	itoa@digits_num+1,f
  3491  0EF9  3000               	movlw	0
  3492  0EFA  07B1               	addwf	itoa@digits_num+1,f
  3493  0EFB  0830               	movf	itoa@digits_num,w
  3494  0EFC  0431               	iorwf	itoa@digits_num+1,w
  3495  0EFD  1903               	btfsc	3,2
  3496  0EFE  2F00               	goto	u3181
  3497  0EFF  2F01               	goto	u3180
  3498  0F00                     u3181:	
  3499  0F00  2F1A               	goto	l2703
  3500  0F01                     u3180:	
  3501  0F01                     l2701:	
  3502  0F01  082D               	movf	itoa@b+1,w
  3503  0F02  00A1               	movwf	___awdiv@divisor+1
  3504  0F03  082C               	movf	itoa@b,w
  3505  0F04  00A0               	movwf	___awdiv@divisor
  3506  0F05  0833               	movf	itoa@n+1,w
  3507  0F06  00A3               	movwf	___awdiv@dividend+1
  3508  0F07  0832               	movf	itoa@n,w
  3509  0F08  00A2               	movwf	___awdiv@dividend
  3510  0F09  120A  158A  2673  120A  158A  	fcall	___awdiv
  3511  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  3512  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  3513  0F10  0821               	movf	?___awdiv+1,w
  3514  0F11  00B3               	movwf	itoa@n+1
  3515  0F12  0820               	movf	?___awdiv,w
  3516  0F13  00B2               	movwf	itoa@n
  3517  0F14  0832               	movf	itoa@n,w
  3518  0F15  0433               	iorwf	itoa@n+1,w
  3519  0F16  1D03               	btfss	3,2
  3520  0F17  2F19               	goto	u3191
  3521  0F18  2F1A               	goto	u3190
  3522  0F19                     u3191:	
  3523  0F19  2EF5               	goto	l2699
  3524  0F1A                     u3190:	
  3525  0F1A                     l2703:	
  3526                           
  3527                           ;lcd.c: 27:         n=num;
  3528  0F1A  082A               	movf	itoa@num+1,w
  3529  0F1B  00B3               	movwf	itoa@n+1
  3530  0F1C  0829               	movf	itoa@num,w
  3531  0F1D  00B2               	movwf	itoa@n
  3532  0F1E                     l2705:	
  3533                           
  3534                           ;lcd.c: 29:         buff[digits_num--]='\0';
  3535  0F1E  0830               	movf	itoa@digits_num,w
  3536  0F1F  072B               	addwf	itoa@buff,w
  3537  0F20  00AE               	movwf	??_itoa
  3538  0F21  082E               	movf	??_itoa,w
  3539  0F22  0084               	movwf	4
  3540  0F23  1383               	bcf	3,7	;select IRP bank0
  3541  0F24  0180               	clrf	0
  3542  0F25                     l2707:	
  3543  0F25  30FF               	movlw	255
  3544  0F26  07B0               	addwf	itoa@digits_num,f
  3545  0F27  1803               	skipnc
  3546  0F28  0AB1               	incf	itoa@digits_num+1,f
  3547  0F29  30FF               	movlw	255
  3548  0F2A  07B1               	addwf	itoa@digits_num+1,f
  3549                           
  3550                           ;lcd.c: 31:         while(n)
  3551  0F2B  2F5F               	goto	l2715
  3552  0F2C                     l2709:	
  3553                           
  3554                           ;lcd.c: 32:         {;lcd.c: 33:            buff[digits_num--]=(n%b) + 48;
  3555  0F2C  082D               	movf	itoa@b+1,w
  3556  0F2D  00A1               	movwf	___awmod@divisor+1
  3557  0F2E  082C               	movf	itoa@b,w
  3558  0F2F  00A0               	movwf	___awmod@divisor
  3559  0F30  0833               	movf	itoa@n+1,w
  3560  0F31  00A3               	movwf	___awmod@dividend+1
  3561  0F32  0832               	movf	itoa@n,w
  3562  0F33  00A2               	movwf	___awmod@dividend
  3563  0F34  120A  158A  2618  120A  158A  	fcall	___awmod
  3564  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3565  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3566  0F3B  0820               	movf	?___awmod,w
  3567  0F3C  3E30               	addlw	48
  3568  0F3D  00AE               	movwf	??_itoa
  3569  0F3E  0830               	movf	itoa@digits_num,w
  3570  0F3F  072B               	addwf	itoa@buff,w
  3571  0F40  00AF               	movwf	??_itoa+1
  3572  0F41  082F               	movf	??_itoa+1,w
  3573  0F42  0084               	movwf	4
  3574  0F43  082E               	movf	??_itoa,w
  3575  0F44  1383               	bcf	3,7	;select IRP bank0
  3576  0F45  0080               	movwf	0
  3577  0F46                     l2711:	
  3578  0F46  30FF               	movlw	255
  3579  0F47  07B0               	addwf	itoa@digits_num,f
  3580  0F48  1803               	skipnc
  3581  0F49  0AB1               	incf	itoa@digits_num+1,f
  3582  0F4A  30FF               	movlw	255
  3583  0F4B  07B1               	addwf	itoa@digits_num+1,f
  3584  0F4C                     l2713:	
  3585                           
  3586                           ;lcd.c: 35:              n/=b;
  3587  0F4C  082D               	movf	itoa@b+1,w
  3588  0F4D  00A1               	movwf	___awdiv@divisor+1
  3589  0F4E  082C               	movf	itoa@b,w
  3590  0F4F  00A0               	movwf	___awdiv@divisor
  3591  0F50  0833               	movf	itoa@n+1,w
  3592  0F51  00A3               	movwf	___awdiv@dividend+1
  3593  0F52  0832               	movf	itoa@n,w
  3594  0F53  00A2               	movwf	___awdiv@dividend
  3595  0F54  120A  158A  2673  120A  158A  	fcall	___awdiv
  3596  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  3597  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  3598  0F5B  0821               	movf	?___awdiv+1,w
  3599  0F5C  00B3               	movwf	itoa@n+1
  3600  0F5D  0820               	movf	?___awdiv,w
  3601  0F5E  00B2               	movwf	itoa@n
  3602  0F5F                     l2715:	
  3603                           
  3604                           ;lcd.c: 31:         while(n)
  3605  0F5F  0832               	movf	itoa@n,w
  3606  0F60  0433               	iorwf	itoa@n+1,w
  3607  0F61  1D03               	btfss	3,2
  3608  0F62  2F64               	goto	u3201
  3609  0F63  2F65               	goto	u3200
  3610  0F64                     u3201:	
  3611  0F64  2F2C               	goto	l2709
  3612  0F65                     u3200:	
  3613  0F65                     l93:	
  3614  0F65  0008               	return
  3615  0F66                     __end_of_itoa:	
  3616                           
  3617                           	psect	text15
  3618  0E18                     __ptext15:	
  3619 ;; *************** function ___awmod *****************
  3620 ;; Defined at:
  3621 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  divisor         2    0[BANK0 ] int 
  3624 ;;  dividend        2    2[BANK0 ] int 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;  sign            1    6[BANK0 ] unsigned char 
  3627 ;;  counter         1    5[BANK0 ] unsigned char 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  2    0[BANK0 ] int 
  3630 ;; Registers used:
  3631 ;;		wreg, status,2, status,0
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3637 ;;      Params:         0       4       0       0       0
  3638 ;;      Locals:         0       2       0       0       0
  3639 ;;      Temps:          0       1       0       0       0
  3640 ;;      Totals:         0       7       0       0       0
  3641 ;;Total ram usage:        7 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; Hardware stack levels required when called:    2
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		_itoa
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           
  3652                           ;psect for function ___awmod
  3653  0E18                     ___awmod:	
  3654  0E18                     l2651:	
  3655                           ;incstack = 0
  3656                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3657                           
  3658  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  3659  0E19  1303               	bcf	3,6	;RP1=0, select bank0
  3660  0E1A  01A6               	clrf	___awmod@sign
  3661  0E1B                     l2653:	
  3662  0E1B  1FA3               	btfss	___awmod@dividend+1,7
  3663  0E1C  2E1E               	goto	u3081
  3664  0E1D  2E1F               	goto	u3080
  3665  0E1E                     u3081:	
  3666  0E1E  2E26               	goto	l2659
  3667  0E1F                     u3080:	
  3668  0E1F                     l2655:	
  3669  0E1F  09A2               	comf	___awmod@dividend,f
  3670  0E20  09A3               	comf	___awmod@dividend+1,f
  3671  0E21  0AA2               	incf	___awmod@dividend,f
  3672  0E22  1903               	skipnz
  3673  0E23  0AA3               	incf	___awmod@dividend+1,f
  3674  0E24                     l2657:	
  3675  0E24  01A6               	clrf	___awmod@sign
  3676  0E25  0AA6               	incf	___awmod@sign,f
  3677  0E26                     l2659:	
  3678  0E26  1FA1               	btfss	___awmod@divisor+1,7
  3679  0E27  2E29               	goto	u3091
  3680  0E28  2E2A               	goto	u3090
  3681  0E29                     u3091:	
  3682  0E29  2E2F               	goto	l2663
  3683  0E2A                     u3090:	
  3684  0E2A                     l2661:	
  3685  0E2A  09A0               	comf	___awmod@divisor,f
  3686  0E2B  09A1               	comf	___awmod@divisor+1,f
  3687  0E2C  0AA0               	incf	___awmod@divisor,f
  3688  0E2D  1903               	skipnz
  3689  0E2E  0AA1               	incf	___awmod@divisor+1,f
  3690  0E2F                     l2663:	
  3691  0E2F  0820               	movf	___awmod@divisor,w
  3692  0E30  0421               	iorwf	___awmod@divisor+1,w
  3693  0E31  1903               	btfsc	3,2
  3694  0E32  2E34               	goto	u3101
  3695  0E33  2E35               	goto	u3100
  3696  0E34                     u3101:	
  3697  0E34  2E64               	goto	l2681
  3698  0E35                     u3100:	
  3699  0E35                     l2665:	
  3700  0E35  01A5               	clrf	___awmod@counter
  3701  0E36  0AA5               	incf	___awmod@counter,f
  3702  0E37  2E43               	goto	l2671
  3703  0E38                     l2667:	
  3704  0E38  3001               	movlw	1
  3705  0E39                     u3115:	
  3706  0E39  1003               	clrc
  3707  0E3A  0DA0               	rlf	___awmod@divisor,f
  3708  0E3B  0DA1               	rlf	___awmod@divisor+1,f
  3709  0E3C  3EFF               	addlw	-1
  3710  0E3D  1D03               	skipz
  3711  0E3E  2E39               	goto	u3115
  3712  0E3F                     l2669:	
  3713  0E3F  3001               	movlw	1
  3714  0E40  00A4               	movwf	??___awmod
  3715  0E41  0824               	movf	??___awmod,w
  3716  0E42  07A5               	addwf	___awmod@counter,f
  3717  0E43                     l2671:	
  3718  0E43  1FA1               	btfss	___awmod@divisor+1,7
  3719  0E44  2E46               	goto	u3121
  3720  0E45  2E47               	goto	u3120
  3721  0E46                     u3121:	
  3722  0E46  2E38               	goto	l2667
  3723  0E47                     u3120:	
  3724  0E47                     l2673:	
  3725  0E47  0821               	movf	___awmod@divisor+1,w
  3726  0E48  0223               	subwf	___awmod@dividend+1,w
  3727  0E49  1D03               	skipz
  3728  0E4A  2E4D               	goto	u3135
  3729  0E4B  0820               	movf	___awmod@divisor,w
  3730  0E4C  0222               	subwf	___awmod@dividend,w
  3731  0E4D                     u3135:	
  3732  0E4D  1C03               	skipc
  3733  0E4E  2E50               	goto	u3131
  3734  0E4F  2E51               	goto	u3130
  3735  0E50                     u3131:	
  3736  0E50  2E57               	goto	l2677
  3737  0E51                     u3130:	
  3738  0E51                     l2675:	
  3739  0E51  0820               	movf	___awmod@divisor,w
  3740  0E52  02A2               	subwf	___awmod@dividend,f
  3741  0E53  0821               	movf	___awmod@divisor+1,w
  3742  0E54  1C03               	skipc
  3743  0E55  03A3               	decf	___awmod@dividend+1,f
  3744  0E56  02A3               	subwf	___awmod@dividend+1,f
  3745  0E57                     l2677:	
  3746  0E57  3001               	movlw	1
  3747  0E58                     u3145:	
  3748  0E58  1003               	clrc
  3749  0E59  0CA1               	rrf	___awmod@divisor+1,f
  3750  0E5A  0CA0               	rrf	___awmod@divisor,f
  3751  0E5B  3EFF               	addlw	-1
  3752  0E5C  1D03               	skipz
  3753  0E5D  2E58               	goto	u3145
  3754  0E5E                     l2679:	
  3755  0E5E  3001               	movlw	1
  3756  0E5F  02A5               	subwf	___awmod@counter,f
  3757  0E60  1D03               	btfss	3,2
  3758  0E61  2E63               	goto	u3151
  3759  0E62  2E64               	goto	u3150
  3760  0E63                     u3151:	
  3761  0E63  2E47               	goto	l2673
  3762  0E64                     u3150:	
  3763  0E64                     l2681:	
  3764  0E64  0826               	movf	___awmod@sign,w
  3765  0E65  1903               	btfsc	3,2
  3766  0E66  2E68               	goto	u3161
  3767  0E67  2E69               	goto	u3160
  3768  0E68                     u3161:	
  3769  0E68  2E6E               	goto	l2685
  3770  0E69                     u3160:	
  3771  0E69                     l2683:	
  3772  0E69  09A2               	comf	___awmod@dividend,f
  3773  0E6A  09A3               	comf	___awmod@dividend+1,f
  3774  0E6B  0AA2               	incf	___awmod@dividend,f
  3775  0E6C  1903               	skipnz
  3776  0E6D  0AA3               	incf	___awmod@dividend+1,f
  3777  0E6E                     l2685:	
  3778  0E6E  0823               	movf	___awmod@dividend+1,w
  3779  0E6F  00A1               	movwf	?___awmod+1
  3780  0E70  0822               	movf	___awmod@dividend,w
  3781  0E71  00A0               	movwf	?___awmod
  3782  0E72                     l695:	
  3783  0E72  0008               	return
  3784  0E73                     __end_of___awmod:	
  3785                           
  3786                           	psect	text16
  3787  0E73                     __ptext16:	
  3788 ;; *************** function ___awdiv *****************
  3789 ;; Defined at:
  3790 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  divisor         2    0[BANK0 ] int 
  3793 ;;  dividend        2    2[BANK0 ] int 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  quotient        2    7[BANK0 ] int 
  3796 ;;  sign            1    6[BANK0 ] unsigned char 
  3797 ;;  counter         1    5[BANK0 ] unsigned char 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  2    0[BANK0 ] int 
  3800 ;; Registers used:
  3801 ;;		wreg, status,2, status,0
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3807 ;;      Params:         0       4       0       0       0
  3808 ;;      Locals:         0       4       0       0       0
  3809 ;;      Temps:          0       1       0       0       0
  3810 ;;      Totals:         0       9       0       0       0
  3811 ;;Total ram usage:        9 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    2
  3814 ;; This function calls:
  3815 ;;		Nothing
  3816 ;; This function is called by:
  3817 ;;		_itoa
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           
  3822                           ;psect for function ___awdiv
  3823  0E73                     ___awdiv:	
  3824  0E73                     l2607:	
  3825                           ;incstack = 0
  3826                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3827                           
  3828  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  3829  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  3830  0E75  01A6               	clrf	___awdiv@sign
  3831  0E76                     l2609:	
  3832  0E76  1FA1               	btfss	___awdiv@divisor+1,7
  3833  0E77  2E79               	goto	u2981
  3834  0E78  2E7A               	goto	u2980
  3835  0E79                     u2981:	
  3836  0E79  2E81               	goto	l2615
  3837  0E7A                     u2980:	
  3838  0E7A                     l2611:	
  3839  0E7A  09A0               	comf	___awdiv@divisor,f
  3840  0E7B  09A1               	comf	___awdiv@divisor+1,f
  3841  0E7C  0AA0               	incf	___awdiv@divisor,f
  3842  0E7D  1903               	skipnz
  3843  0E7E  0AA1               	incf	___awdiv@divisor+1,f
  3844  0E7F                     l2613:	
  3845  0E7F  01A6               	clrf	___awdiv@sign
  3846  0E80  0AA6               	incf	___awdiv@sign,f
  3847  0E81                     l2615:	
  3848  0E81  1FA3               	btfss	___awdiv@dividend+1,7
  3849  0E82  2E84               	goto	u2991
  3850  0E83  2E85               	goto	u2990
  3851  0E84                     u2991:	
  3852  0E84  2E8E               	goto	l2621
  3853  0E85                     u2990:	
  3854  0E85                     l2617:	
  3855  0E85  09A2               	comf	___awdiv@dividend,f
  3856  0E86  09A3               	comf	___awdiv@dividend+1,f
  3857  0E87  0AA2               	incf	___awdiv@dividend,f
  3858  0E88  1903               	skipnz
  3859  0E89  0AA3               	incf	___awdiv@dividend+1,f
  3860  0E8A                     l2619:	
  3861  0E8A  3001               	movlw	1
  3862  0E8B  00A4               	movwf	??___awdiv
  3863  0E8C  0824               	movf	??___awdiv,w
  3864  0E8D  06A6               	xorwf	___awdiv@sign,f
  3865  0E8E                     l2621:	
  3866  0E8E  01A7               	clrf	___awdiv@quotient
  3867  0E8F  01A8               	clrf	___awdiv@quotient+1
  3868  0E90                     l2623:	
  3869  0E90  0820               	movf	___awdiv@divisor,w
  3870  0E91  0421               	iorwf	___awdiv@divisor+1,w
  3871  0E92  1903               	btfsc	3,2
  3872  0E93  2E95               	goto	u3001
  3873  0E94  2E96               	goto	u3000
  3874  0E95                     u3001:	
  3875  0E95  2ECD               	goto	l2643
  3876  0E96                     u3000:	
  3877  0E96                     l2625:	
  3878  0E96  01A5               	clrf	___awdiv@counter
  3879  0E97  0AA5               	incf	___awdiv@counter,f
  3880  0E98  2EA4               	goto	l2631
  3881  0E99                     l2627:	
  3882  0E99  3001               	movlw	1
  3883  0E9A                     u3015:	
  3884  0E9A  1003               	clrc
  3885  0E9B  0DA0               	rlf	___awdiv@divisor,f
  3886  0E9C  0DA1               	rlf	___awdiv@divisor+1,f
  3887  0E9D  3EFF               	addlw	-1
  3888  0E9E  1D03               	skipz
  3889  0E9F  2E9A               	goto	u3015
  3890  0EA0                     l2629:	
  3891  0EA0  3001               	movlw	1
  3892  0EA1  00A4               	movwf	??___awdiv
  3893  0EA2  0824               	movf	??___awdiv,w
  3894  0EA3  07A5               	addwf	___awdiv@counter,f
  3895  0EA4                     l2631:	
  3896  0EA4  1FA1               	btfss	___awdiv@divisor+1,7
  3897  0EA5  2EA7               	goto	u3021
  3898  0EA6  2EA8               	goto	u3020
  3899  0EA7                     u3021:	
  3900  0EA7  2E99               	goto	l2627
  3901  0EA8                     u3020:	
  3902  0EA8                     l2633:	
  3903  0EA8  3001               	movlw	1
  3904  0EA9                     u3035:	
  3905  0EA9  1003               	clrc
  3906  0EAA  0DA7               	rlf	___awdiv@quotient,f
  3907  0EAB  0DA8               	rlf	___awdiv@quotient+1,f
  3908  0EAC  3EFF               	addlw	-1
  3909  0EAD  1D03               	skipz
  3910  0EAE  2EA9               	goto	u3035
  3911  0EAF  0821               	movf	___awdiv@divisor+1,w
  3912  0EB0  0223               	subwf	___awdiv@dividend+1,w
  3913  0EB1  1D03               	skipz
  3914  0EB2  2EB5               	goto	u3045
  3915  0EB3  0820               	movf	___awdiv@divisor,w
  3916  0EB4  0222               	subwf	___awdiv@dividend,w
  3917  0EB5                     u3045:	
  3918  0EB5  1C03               	skipc
  3919  0EB6  2EB8               	goto	u3041
  3920  0EB7  2EB9               	goto	u3040
  3921  0EB8                     u3041:	
  3922  0EB8  2EC0               	goto	l2639
  3923  0EB9                     u3040:	
  3924  0EB9                     l2635:	
  3925  0EB9  0820               	movf	___awdiv@divisor,w
  3926  0EBA  02A2               	subwf	___awdiv@dividend,f
  3927  0EBB  0821               	movf	___awdiv@divisor+1,w
  3928  0EBC  1C03               	skipc
  3929  0EBD  03A3               	decf	___awdiv@dividend+1,f
  3930  0EBE  02A3               	subwf	___awdiv@dividend+1,f
  3931  0EBF                     l2637:	
  3932  0EBF  1427               	bsf	___awdiv@quotient,0
  3933  0EC0                     l2639:	
  3934  0EC0  3001               	movlw	1
  3935  0EC1                     u3055:	
  3936  0EC1  1003               	clrc
  3937  0EC2  0CA1               	rrf	___awdiv@divisor+1,f
  3938  0EC3  0CA0               	rrf	___awdiv@divisor,f
  3939  0EC4  3EFF               	addlw	-1
  3940  0EC5  1D03               	skipz
  3941  0EC6  2EC1               	goto	u3055
  3942  0EC7                     l2641:	
  3943  0EC7  3001               	movlw	1
  3944  0EC8  02A5               	subwf	___awdiv@counter,f
  3945  0EC9  1D03               	btfss	3,2
  3946  0ECA  2ECC               	goto	u3061
  3947  0ECB  2ECD               	goto	u3060
  3948  0ECC                     u3061:	
  3949  0ECC  2EA8               	goto	l2633
  3950  0ECD                     u3060:	
  3951  0ECD                     l2643:	
  3952  0ECD  0826               	movf	___awdiv@sign,w
  3953  0ECE  1903               	btfsc	3,2
  3954  0ECF  2ED1               	goto	u3071
  3955  0ED0  2ED2               	goto	u3070
  3956  0ED1                     u3071:	
  3957  0ED1  2ED7               	goto	l2647
  3958  0ED2                     u3070:	
  3959  0ED2                     l2645:	
  3960  0ED2  09A7               	comf	___awdiv@quotient,f
  3961  0ED3  09A8               	comf	___awdiv@quotient+1,f
  3962  0ED4  0AA7               	incf	___awdiv@quotient,f
  3963  0ED5  1903               	skipnz
  3964  0ED6  0AA8               	incf	___awdiv@quotient+1,f
  3965  0ED7                     l2647:	
  3966  0ED7  0828               	movf	___awdiv@quotient+1,w
  3967  0ED8  00A1               	movwf	?___awdiv+1
  3968  0ED9  0827               	movf	___awdiv@quotient,w
  3969  0EDA  00A0               	movwf	?___awdiv
  3970  0EDB                     l682:	
  3971  0EDB  0008               	return
  3972  0EDC                     __end_of___awdiv:	
  3973                           
  3974                           	psect	text17
  3975  0AE5                     __ptext17:	
  3976 ;; *************** function _LCD_clear_screen *****************
  3977 ;; Defined at:
  3978 ;;		line 202 in file "lcd.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      void 
  3985 ;; Registers used:
  3986 ;;		wreg, status,2, status,0, pclath, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3992 ;;      Params:         0       0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0
  3994 ;;      Temps:          0       0       0       0       0
  3995 ;;      Totals:         0       0       0       0       0
  3996 ;;Total ram usage:        0 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:    3
  3999 ;; This function calls:
  4000 ;;		_LCD_sendCommand
  4001 ;; This function is called by:
  4002 ;;		_main
  4003 ;;		_scan_minutes
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           
  4008                           ;psect for function _LCD_clear_screen
  4009  0AE5                     _LCD_clear_screen:	
  4010  0AE5                     l2757:	
  4011                           ;incstack = 0
  4012                           ; Regs used in _LCD_clear_screen: [wreg+status,2+status,0+pclath+cstack]
  4013                           
  4014                           
  4015                           ;lcd.c: 204:  LCD_sendCommand(0X01);
  4016  0AE5  3001               	movlw	1
  4017  0AE6  120A  118A  2502  120A  158A  	fcall	_LCD_sendCommand
  4018  0AEB                     l137:	
  4019  0AEB  0008               	return
  4020  0AEC                     __end_of_LCD_clear_screen:	
  4021                           
  4022                           	psect	text18
  4023  0DBD                     __ptext18:	
  4024 ;; *************** function _microWave_init *****************
  4025 ;; Defined at:
  4026 ;;		line 30 in file "microwave.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;		None
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;  data            2    7[BANK0 ] struct .
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      void 
  4033 ;; Registers used:
  4034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4040 ;;      Params:         0       0       0       0       0
  4041 ;;      Locals:         0       2       0       0       0
  4042 ;;      Temps:          0       1       0       0       0
  4043 ;;      Totals:         0       3       0       0       0
  4044 ;;Total ram usage:        3 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; Hardware stack levels required when called:    4
  4047 ;; This function calls:
  4048 ;;		_LCD_init
  4049 ;;		_TIMER0_Call_Back
  4050 ;;		_TIMER0_init
  4051 ;;		_keypad_init
  4052 ;;		_set_T0DR
  4053 ;; This function is called by:
  4054 ;;		_main
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           
  4059                           ;psect for function _microWave_init
  4060  0DBD                     _microWave_init:	
  4061  0DBD                     l2977:	
  4062                           ;incstack = 0
  4063                           ; Regs used in _microWave_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4064                           
  4065                           
  4066                           ;microwave.c: 33:  ( *((volatile unint8*)PORT_A + (unint8)0x80) |=(unint8)1 << 5);
  4067  0DBD  1683               	bsf	3,5	;RP0=1, select bank1
  4068  0DBE  1303               	bcf	3,6	;RP1=0, select bank1
  4069  0DBF  1685               	bsf	5,5	;volatile
  4070                           
  4071                           ;microwave.c: 35:  ( *((volatile unint8*)PORT_B + (unint8)0x80) |=(unint8)1 << 3);
  4072  0DC0  1586               	bsf	6,3	;volatile
  4073  0DC1                     l2979:	
  4074                           
  4075                           ;microwave.c: 37:     (*((volatile unint8*)PORT_B + (unint8)0x80) &=~((unint8)1 << 7));
  4076  0DC1  307F               	movlw	127
  4077  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  4078  0DC3  1303               	bcf	3,6	;RP1=0, select bank0
  4079  0DC4  00A6               	movwf	??_microWave_init
  4080  0DC5  0826               	movf	??_microWave_init,w
  4081  0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  4082  0DC7  1303               	bcf	3,6	;RP1=0, select bank1
  4083  0DC8  0586               	andwf	6,f	;volatile
  4084  0DC9                     l2981:	
  4085                           
  4086                           ;microwave.c: 39:     ( *((volatile unint8*)PORT_B + (unint8)0x80) |=(unint8)1 << 4);
  4087  0DC9  1606               	bsf	6,4	;volatile
  4088                           
  4089                           ;microwave.c: 41:     (*((volatile unint8*)PORT_C + (unint8)0x80) &=~((unint8)1 << 6));
  4090  0DCA  30BF               	movlw	191
  4091  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  4092  0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  4093  0DCD  00A6               	movwf	??_microWave_init
  4094  0DCE  0826               	movf	??_microWave_init,w
  4095  0DCF  1683               	bsf	3,5	;RP0=1, select bank1
  4096  0DD0  1303               	bcf	3,6	;RP1=0, select bank1
  4097  0DD1  0587               	andwf	7,f	;volatile
  4098  0DD2                     l2983:	
  4099                           
  4100                           ;microwave.c: 43:     ( *((volatile unint8*)PORT_B + (unint8)0x80) |=(unint8)1 << 5);
  4101  0DD2  1686               	bsf	6,5	;volatile
  4102                           
  4103                           ;microwave.c: 45:     (*((volatile unint8*)PORT_C + (unint8)0x80) &=~((unint8)1 << 5));
  4104  0DD3  30DF               	movlw	223
  4105  0DD4  1283               	bcf	3,5	;RP0=0, select bank0
  4106  0DD5  1303               	bcf	3,6	;RP1=0, select bank0
  4107  0DD6  00A6               	movwf	??_microWave_init
  4108  0DD7  0826               	movf	??_microWave_init,w
  4109  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  4110  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  4111  0DDA  0587               	andwf	7,f	;volatile
  4112                           
  4113                           ;microwave.c: 47:     (*((volatile unint8*)PORT_B + (unint8)0x80) &=~((unint8)1 << 6));
  4114  0DDB  30BF               	movlw	191
  4115  0DDC  1283               	bcf	3,5	;RP0=0, select bank0
  4116  0DDD  1303               	bcf	3,6	;RP1=0, select bank0
  4117  0DDE  00A6               	movwf	??_microWave_init
  4118  0DDF  0826               	movf	??_microWave_init,w
  4119  0DE0  1683               	bsf	3,5	;RP0=1, select bank1
  4120  0DE1  1303               	bcf	3,6	;RP1=0, select bank1
  4121  0DE2  0586               	andwf	6,f	;volatile
  4122  0DE3                     l2985:	
  4123                           
  4124                           ;microwave.c: 51:     TIMER0_CONFIG data={ internal_PRE_256 , T0_INT_E};
  4125  0DE3  1283               	bcf	3,5	;RP0=0, select bank0
  4126  0DE4  1303               	bcf	3,6	;RP1=0, select bank0
  4127  0DE5  0862               	movf	microWave_init@F119+1,w
  4128  0DE6  00A8               	movwf	microWave_init@data+1
  4129  0DE7  0861               	movf	microWave_init@F119,w
  4130  0DE8  00A7               	movwf	microWave_init@data
  4131  0DE9                     l2987:	
  4132                           
  4133                           ;microwave.c: 53:     TIMER0_init(&data);
  4134  0DE9  3027               	movlw	(low (microWave_init@data| 0))& (0+255)
  4135  0DEA  120A  158A  252D  120A  158A  	fcall	_TIMER0_init
  4136  0DEF                     l2989:	
  4137                           
  4138                           ;microwave.c: 55:     TIMER0_Call_Back(Call_Back_OVFI);
  4139  0DEF  3001               	movlw	(low (fp__Call_Back_OVFI-i1fpbase))& (0+255)
  4140  0DF0  120A  158A  22FA  120A  158A  	fcall	_TIMER0_Call_Back
  4141  0DF5                     l2991:	
  4142                           
  4143                           ;microwave.c: 57:     set_T0DR(0);
  4144  0DF5  3000               	movlw	0
  4145  0DF6  120A  118A  26F8  120A  158A  	fcall	_set_T0DR
  4146  0DFB                     l2993:	
  4147                           
  4148                           ;microwave.c: 71:      *((volatile unint8*)PORT_C + (unint8)0x80) &=~(1 << 2 );
  4149  0DFB  30FB               	movlw	251
  4150  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  4151  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  4152  0DFE  00A6               	movwf	??_microWave_init
  4153  0DFF  0826               	movf	??_microWave_init,w
  4154  0E00  1683               	bsf	3,5	;RP0=1, select bank1
  4155  0E01  1303               	bcf	3,6	;RP1=0, select bank1
  4156  0E02  0587               	andwf	7,f	;volatile
  4157  0E03                     l2995:	
  4158                           
  4159                           ;microwave.c: 75:      keypad_init();
  4160  0E03  120A  158A  2574  120A  158A  	fcall	_keypad_init
  4161  0E08                     l2997:	
  4162                           
  4163                           ;microwave.c: 77:      LCD_init();
  4164  0E08  120A  158A  2330  120A  158A  	fcall	_LCD_init
  4165  0E0D                     l2999:	
  4166                           
  4167                           ;microwave.c: 81:     (*((volatile unint8*)PORT_B + (unint8)0x00) &=~((unint8)1 << 7));
  4168  0E0D  307F               	movlw	127
  4169  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  4170  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  4171  0E10  00A6               	movwf	??_microWave_init
  4172  0E11  0826               	movf	??_microWave_init,w
  4173  0E12  0586               	andwf	6,f	;volatile
  4174  0E13                     l3001:	
  4175                           
  4176                           ;microwave.c: 83:     (*((volatile unint8*)PORT_B + (unint8)0x00) &=~((unint8)1 << 6));
  4177  0E13  30BF               	movlw	191
  4178  0E14  00A6               	movwf	??_microWave_init
  4179  0E15  0826               	movf	??_microWave_init,w
  4180  0E16  0586               	andwf	6,f	;volatile
  4181  0E17                     l332:	
  4182  0E17  0008               	return
  4183  0E18                     __end_of_microWave_init:	
  4184                           
  4185                           	psect	text19
  4186  06F8                     __ptext19:	
  4187 ;; *************** function _set_T0DR *****************
  4188 ;; Defined at:
  4189 ;;		line 20 in file "timer0.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  val             1    wreg     unsigned char 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  val             1    1[BANK0 ] unsigned char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		wreg
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4203 ;;      Params:         0       0       0       0       0
  4204 ;;      Locals:         0       1       0       0       0
  4205 ;;      Temps:          0       1       0       0       0
  4206 ;;      Totals:         0       2       0       0       0
  4207 ;;Total ram usage:        2 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    2
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_microWave_init
  4214 ;;		_start_calc_time
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           
  4219                           ;psect for function _set_T0DR
  4220  06F8                     _set_T0DR:	
  4221                           
  4222                           ;incstack = 0
  4223                           ; Regs used in _set_T0DR: [wreg]
  4224                           ;set_T0DR@val stored from wreg
  4225  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  4226  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  4227  06FA  00A1               	movwf	set_T0DR@val
  4228  06FB                     l2961:	
  4229                           
  4230                           ;timer0.c: 20: void set_T0DR(unint8 val);timer0.c: 21: {;timer0.c: 22:     *((volatile u
      +                          nint8*)0X01) = val;
  4231  06FB  0821               	movf	set_T0DR@val,w
  4232  06FC  00A0               	movwf	??_set_T0DR
  4233  06FD  0820               	movf	??_set_T0DR,w
  4234  06FE  0081               	movwf	1	;volatile
  4235  06FF                     l286:	
  4236  06FF  0008               	return
  4237  0700                     __end_of_set_T0DR:	
  4238                           
  4239                           	psect	text20
  4240  0D74                     __ptext20:	
  4241 ;; *************** function _keypad_init *****************
  4242 ;; Defined at:
  4243 ;;		line 12 in file "keypad.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4257 ;;      Params:         0       0       0       0       0
  4258 ;;      Locals:         0       0       0       0       0
  4259 ;;      Temps:          0       1       0       0       0
  4260 ;;      Totals:         0       1       0       0       0
  4261 ;;Total ram usage:        1 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    2
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		_microWave_init
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function _keypad_init
  4273  0D74                     _keypad_init:	
  4274  0D74                     l2789:	
  4275                           ;incstack = 0
  4276                           ; Regs used in _keypad_init: [wreg+status,2+status,0]
  4277                           
  4278                           
  4279                           ;keypad.c: 14:         (*((volatile unint8* )PORT_D + (unint8)0x80) &=~((unint8)1 << 0))
      +                          ; (*((volatile unint8* )PORT_D + (unint8)0x80) &=~((unint8)1 << 1)); (*((volatile unint8
      +                          * )PORT_D + (unint8)0x80) &=~((unint8)1 << 2)); (*((volatile unint8* )PORT_D + (unint8)0
      +                          x80) &=~((unint8)1 << 3));
  4280  0D74  30FE               	movlw	254
  4281  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  4282  0D76  1303               	bcf	3,6	;RP1=0, select bank0
  4283  0D77  00A0               	movwf	??_keypad_init
  4284  0D78  0820               	movf	??_keypad_init,w
  4285  0D79  1683               	bsf	3,5	;RP0=1, select bank1
  4286  0D7A  1303               	bcf	3,6	;RP1=0, select bank1
  4287  0D7B  0588               	andwf	8,f	;volatile
  4288  0D7C  30FD               	movlw	253
  4289  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  4290  0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  4291  0D7F  00A0               	movwf	??_keypad_init
  4292  0D80  0820               	movf	??_keypad_init,w
  4293  0D81  1683               	bsf	3,5	;RP0=1, select bank1
  4294  0D82  1303               	bcf	3,6	;RP1=0, select bank1
  4295  0D83  0588               	andwf	8,f	;volatile
  4296  0D84  30FB               	movlw	251
  4297  0D85  1283               	bcf	3,5	;RP0=0, select bank0
  4298  0D86  1303               	bcf	3,6	;RP1=0, select bank0
  4299  0D87  00A0               	movwf	??_keypad_init
  4300  0D88  0820               	movf	??_keypad_init,w
  4301  0D89  1683               	bsf	3,5	;RP0=1, select bank1
  4302  0D8A  1303               	bcf	3,6	;RP1=0, select bank1
  4303  0D8B  0588               	andwf	8,f	;volatile
  4304  0D8C  30F7               	movlw	247
  4305  0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  4306  0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  4307  0D8F  00A0               	movwf	??_keypad_init
  4308  0D90  0820               	movf	??_keypad_init,w
  4309  0D91  1683               	bsf	3,5	;RP0=1, select bank1
  4310  0D92  1303               	bcf	3,6	;RP1=0, select bank1
  4311  0D93  0588               	andwf	8,f	;volatile
  4312                           
  4313                           ;keypad.c: 15:         (*((volatile unint8* )PORT_D + (unint8)0x80) &=~((unint8)1 << 0))
      +                          ; (*((volatile unint8* )PORT_D + (unint8)0x80) &=~((unint8)1 << 1)); (*((volatile unint8
      +                          * )PORT_D + (unint8)0x80) &=~((unint8)1 << 2)); (*((volatile unint8* )PORT_D + (unint8)0
      +                          x80) &=~((unint8)1 << 3));
  4314  0D94  30FE               	movlw	254
  4315  0D95  1283               	bcf	3,5	;RP0=0, select bank0
  4316  0D96  1303               	bcf	3,6	;RP1=0, select bank0
  4317  0D97  00A0               	movwf	??_keypad_init
  4318  0D98  0820               	movf	??_keypad_init,w
  4319  0D99  1683               	bsf	3,5	;RP0=1, select bank1
  4320  0D9A  1303               	bcf	3,6	;RP1=0, select bank1
  4321  0D9B  0588               	andwf	8,f	;volatile
  4322  0D9C  30FD               	movlw	253
  4323  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  4324  0D9E  1303               	bcf	3,6	;RP1=0, select bank0
  4325  0D9F  00A0               	movwf	??_keypad_init
  4326  0DA0  0820               	movf	??_keypad_init,w
  4327  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  4328  0DA2  1303               	bcf	3,6	;RP1=0, select bank1
  4329  0DA3  0588               	andwf	8,f	;volatile
  4330  0DA4  30FB               	movlw	251
  4331  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  4332  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  4333  0DA7  00A0               	movwf	??_keypad_init
  4334  0DA8  0820               	movf	??_keypad_init,w
  4335  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  4336  0DAA  1303               	bcf	3,6	;RP1=0, select bank1
  4337  0DAB  0588               	andwf	8,f	;volatile
  4338  0DAC  30F7               	movlw	247
  4339  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  4340  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  4341  0DAF  00A0               	movwf	??_keypad_init
  4342  0DB0  0820               	movf	??_keypad_init,w
  4343  0DB1  1683               	bsf	3,5	;RP0=1, select bank1
  4344  0DB2  1303               	bcf	3,6	;RP1=0, select bank1
  4345  0DB3  0588               	andwf	8,f	;volatile
  4346                           
  4347                           ;keypad.c: 16:         *((volatile unint8*)0x81) &= 0x7F;
  4348  0DB4  307F               	movlw	127
  4349  0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  4350  0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  4351  0DB7  00A0               	movwf	??_keypad_init
  4352  0DB8  0820               	movf	??_keypad_init,w
  4353  0DB9  1683               	bsf	3,5	;RP0=1, select bank1
  4354  0DBA  1303               	bcf	3,6	;RP1=0, select bank1
  4355  0DBB  0581               	andwf	1,f	;volatile
  4356  0DBC                     l147:	
  4357  0DBC  0008               	return
  4358  0DBD                     __end_of_keypad_init:	
  4359                           
  4360                           	psect	text21
  4361  0D2D                     __ptext21:	
  4362 ;; *************** function _TIMER0_init *****************
  4363 ;; Defined at:
  4364 ;;		line 4 in file "timer0.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;  data            1    wreg     PTR struct .
  4367 ;;		 -> microWave_init@data(2), 
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;  data            1    2[BANK0 ] PTR struct .
  4370 ;;		 -> microWave_init@data(2), 
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      void 
  4373 ;; Registers used:
  4374 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4380 ;;      Params:         0       0       0       0       0
  4381 ;;      Locals:         0       1       0       0       0
  4382 ;;      Temps:          0       2       0       0       0
  4383 ;;      Totals:         0       3       0       0       0
  4384 ;;Total ram usage:        3 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; Hardware stack levels required when called:    2
  4387 ;; This function calls:
  4388 ;;		Nothing
  4389 ;; This function is called by:
  4390 ;;		_microWave_init
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           
  4395                           ;psect for function _TIMER0_init
  4396  0D2D                     _TIMER0_init:	
  4397                           
  4398                           ;incstack = 0
  4399                           ; Regs used in _TIMER0_init: [wreg-fsr0h+status,2+status,0]
  4400                           ;TIMER0_init@data stored from wreg
  4401  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  4402  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  4403  0D2F  00A2               	movwf	TIMER0_init@data
  4404  0D30                     l2951:	
  4405                           
  4406                           ;timer0.c: 4: void TIMER0_init(TIMER0_CONFIG *data);timer0.c: 5: {;timer0.c: 6:     *((v
      +                          olatile unint8*)0X81) &=0XC0;
  4407  0D30  30C0               	movlw	192
  4408  0D31  00A0               	movwf	??_TIMER0_init
  4409  0D32  0820               	movf	??_TIMER0_init,w
  4410  0D33  1683               	bsf	3,5	;RP0=1, select bank1
  4411  0D34  1303               	bcf	3,6	;RP1=0, select bank1
  4412  0D35  0581               	andwf	1,f	;volatile
  4413  0D36                     l2953:	
  4414                           
  4415                           ;timer0.c: 8:     if(data->CLK_state != External_positive_edge && data->CLK_state != Ext
      +                          ernal_negative_edge)
  4416  0D36  1283               	bcf	3,5	;RP0=0, select bank0
  4417  0D37  1303               	bcf	3,6	;RP1=0, select bank0
  4418  0D38  0822               	movf	TIMER0_init@data,w
  4419  0D39  0084               	movwf	4
  4420  0D3A  1383               	bcf	3,7	;select IRP bank0
  4421  0D3B  0800               	movf	0,w
  4422  0D3C  1903               	btfsc	3,2
  4423  0D3D  2D3F               	goto	u3821
  4424  0D3E  2D40               	goto	u3820
  4425  0D3F                     u3821:	
  4426  0D3F  2D50               	goto	l2959
  4427  0D40                     u3820:	
  4428  0D40                     l2955:	
  4429  0D40  0822               	movf	TIMER0_init@data,w
  4430  0D41  0084               	movwf	4
  4431  0D42  0300               	decf	0,w
  4432  0D43  1903               	btfsc	3,2
  4433  0D44  2D46               	goto	u3831
  4434  0D45  2D47               	goto	u3830
  4435  0D46                     u3831:	
  4436  0D46  2D50               	goto	l2959
  4437  0D47                     u3830:	
  4438  0D47                     l2957:	
  4439                           
  4440                           ;timer0.c: 9:     {;timer0.c: 10:         *((volatile unint8*)0X81) |=(data->CLK_state <
      +                          < 0);
  4441  0D47  0822               	movf	TIMER0_init@data,w
  4442  0D48  0084               	movwf	4
  4443  0D49  0800               	movf	0,w
  4444  0D4A  00A0               	movwf	??_TIMER0_init
  4445  0D4B  0820               	movf	??_TIMER0_init,w
  4446  0D4C  1683               	bsf	3,5	;RP0=1, select bank1
  4447  0D4D  1303               	bcf	3,6	;RP1=0, select bank1
  4448  0D4E  0481               	iorwf	1,f	;volatile
  4449                           
  4450                           ;timer0.c: 11:     }
  4451  0D4F  2D62               	goto	l282
  4452  0D50                     l2959:	
  4453                           
  4454                           ;timer0.c: 13:     {;timer0.c: 14:         *((volatile unint8*)0X81) |=(1<<5) | (data->C
      +                          LK_state << 4);
  4455  0D50  0822               	movf	TIMER0_init@data,w
  4456  0D51  0084               	movwf	4
  4457  0D52  0800               	movf	0,w
  4458  0D53  00A0               	movwf	??_TIMER0_init
  4459  0D54  3003               	movlw	3
  4460  0D55                     u3845:	
  4461  0D55  1003               	clrc
  4462  0D56  0DA0               	rlf	??_TIMER0_init,f
  4463  0D57  3EFF               	addlw	-1
  4464  0D58  1D03               	skipz
  4465  0D59  2D55               	goto	u3845
  4466  0D5A  1003               	clrc
  4467  0D5B  0D20               	rlf	??_TIMER0_init,w
  4468  0D5C  3820               	iorlw	32
  4469  0D5D  00A1               	movwf	??_TIMER0_init+1
  4470  0D5E  0821               	movf	??_TIMER0_init+1,w
  4471  0D5F  1683               	bsf	3,5	;RP0=1, select bank1
  4472  0D60  1303               	bcf	3,6	;RP1=0, select bank1
  4473  0D61  0481               	iorwf	1,f	;volatile
  4474  0D62                     l282:	
  4475                           ;timer0.c: 15:     }
  4476                           
  4477                           
  4478                           ;timer0.c: 17:     *((volatile unint8*)0X0B) |=(data->INT_state << 5);
  4479  0D62  1283               	bcf	3,5	;RP0=0, select bank0
  4480  0D63  1303               	bcf	3,6	;RP1=0, select bank0
  4481  0D64  0A22               	incf	TIMER0_init@data,w
  4482  0D65  0084               	movwf	4
  4483  0D66  0800               	movf	0,w
  4484  0D67  00A0               	movwf	??_TIMER0_init
  4485  0D68  3004               	movlw	4
  4486  0D69                     u3855:	
  4487  0D69  1003               	clrc
  4488  0D6A  0DA0               	rlf	??_TIMER0_init,f
  4489  0D6B  3EFF               	addlw	-1
  4490  0D6C  1D03               	skipz
  4491  0D6D  2D69               	goto	u3855
  4492  0D6E  1003               	clrc
  4493  0D6F  0D20               	rlf	??_TIMER0_init,w
  4494  0D70  00A1               	movwf	??_TIMER0_init+1
  4495  0D71  0821               	movf	??_TIMER0_init+1,w
  4496  0D72  048B               	iorwf	11,f	;volatile
  4497  0D73                     l283:	
  4498  0D73  0008               	return
  4499  0D74                     __end_of_TIMER0_init:	
  4500                           
  4501                           	psect	text22
  4502  0AFA                     __ptext22:	
  4503 ;; *************** function _TIMER0_Call_Back *****************
  4504 ;; Defined at:
  4505 ;;		line 17 in file "interrupt.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  ptr             1    wreg     PTR FTN()void 
  4508 ;;		 -> Call_Back_OVFI(1), 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  ptr             1    1[BANK0 ] PTR FTN()void 
  4511 ;;		 -> Call_Back_OVFI(1), 
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  1    wreg      void 
  4514 ;; Registers used:
  4515 ;;		wreg
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4521 ;;      Params:         0       0       0       0       0
  4522 ;;      Locals:         0       1       0       0       0
  4523 ;;      Temps:          0       1       0       0       0
  4524 ;;      Totals:         0       2       0       0       0
  4525 ;;Total ram usage:        2 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:    2
  4528 ;; This function calls:
  4529 ;;		Nothing
  4530 ;; This function is called by:
  4531 ;;		_microWave_init
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           
  4536                           ;psect for function _TIMER0_Call_Back
  4537  0AFA                     _TIMER0_Call_Back:	
  4538                           
  4539                           ;incstack = 0
  4540                           ; Regs used in _TIMER0_Call_Back: [wreg]
  4541                           ;TIMER0_Call_Back@ptr stored from wreg
  4542  0AFA  1283               	bcf	3,5	;RP0=0, select bank0
  4543  0AFB  1303               	bcf	3,6	;RP1=0, select bank0
  4544  0AFC  00A1               	movwf	TIMER0_Call_Back@ptr
  4545  0AFD                     l2947:	
  4546                           
  4547                           ;interrupt.c: 17: void TIMER0_Call_Back(void (*ptr)(void));interrupt.c: 18: {;interrupt.
      +                          c: 20:     TIMER0_CalL_Back_ptr = ptr;
  4548  0AFD  0821               	movf	TIMER0_Call_Back@ptr,w
  4549  0AFE  00A0               	movwf	??_TIMER0_Call_Back
  4550  0AFF  0820               	movf	??_TIMER0_Call_Back,w
  4551  0B00  00F8               	movwf	_TIMER0_CalL_Back_ptr
  4552  0B01                     l255:	
  4553  0B01  0008               	return
  4554  0B02                     __end_of_TIMER0_Call_Back:	
  4555                           
  4556                           	psect	text23
  4557  06C9                     __ptext23:	
  4558 ;; *************** function _heat_on *****************
  4559 ;; Defined at:
  4560 ;;		line 305 in file "microwave.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;		None
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;		None
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4574 ;;      Params:         0       0       0       0       0
  4575 ;;      Locals:         0       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0
  4577 ;;      Totals:         0       0       0       0       0
  4578 ;;Total ram usage:        0 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    4
  4581 ;; This function calls:
  4582 ;;		_LCD_displayString
  4583 ;;		_LCD_goToRowColum
  4584 ;;		_LCD_init
  4585 ;; This function is called by:
  4586 ;;		_main
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           
  4591                           ;psect for function _heat_on
  4592  06C9                     _heat_on:	
  4593  06C9                     l3101:	
  4594                           ;incstack = 0
  4595                           ; Regs used in _heat_on: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4596                           
  4597                           
  4598                           ;microwave.c: 307:     LCD_init();
  4599  06C9  120A  158A  2330  120A  118A  	fcall	_LCD_init
  4600  06CE                     l3103:	
  4601                           
  4602                           ;microwave.c: 309:     ( *((volatile unint8*)PORT_B + (unint8)0x00) |=(unint8)1 << 6);
  4603  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  4604  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  4605  06D0  1706               	bsf	6,6	;volatile
  4606  06D1                     l3105:	
  4607                           
  4608                           ;microwave.c: 311:     LCD_goToRowColum(1 , 0);
  4609  06D1  01A5               	clrf	LCD_goToRowColum@colum
  4610  06D2  3001               	movlw	1
  4611  06D3  120A  158A  2387  120A  118A  	fcall	_LCD_goToRowColum
  4612  06D8                     l3107:	
  4613                           
  4614                           ;microwave.c: 312:     LCD_displayString("                   ");
  4615  06D8  3012               	movlw	(low (((STR_14+5)-__stringbase)| (0+32768)))& (0+255)
  4616  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  4617  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  4618  06DB  00A5               	movwf	LCD_displayString@str
  4619  06DC  3080               	movlw	128
  4620  06DD  00A6               	movwf	LCD_displayString@str+1
  4621  06DE  120A  158A  23D5  120A  118A  	fcall	_LCD_displayString
  4622  06E3                     l3109:	
  4623                           
  4624                           ;microwave.c: 313:     LCD_goToRowColum(1 , 0);
  4625  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  4626  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  4627  06E5  01A5               	clrf	LCD_goToRowColum@colum
  4628  06E6  3001               	movlw	1
  4629  06E7  120A  158A  2387  120A  118A  	fcall	_LCD_goToRowColum
  4630  06EC                     l3111:	
  4631                           
  4632                           ;microwave.c: 314:     LCD_displayString("food heating now");
  4633  06EC  3060               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  4634  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  4635  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  4636  06EF  00A5               	movwf	LCD_displayString@str
  4637  06F0  3080               	movlw	128
  4638  06F1  00A6               	movwf	LCD_displayString@str+1
  4639  06F2  120A  158A  23D5  120A  118A  	fcall	_LCD_displayString
  4640  06F7                     l416:	
  4641  06F7  0008               	return
  4642  06F8                     __end_of_heat_on:	
  4643                           
  4644                           	psect	text24
  4645  0ADE                     __ptext24:	
  4646 ;; *************** function _heat_off *****************
  4647 ;; Defined at:
  4648 ;;		line 317 in file "microwave.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;		None
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;		None
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  1    wreg      void 
  4655 ;; Registers used:
  4656 ;;		wreg, status,2, status,0
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4662 ;;      Params:         0       0       0       0       0
  4663 ;;      Locals:         0       0       0       0       0
  4664 ;;      Temps:          0       1       0       0       0
  4665 ;;      Totals:         0       1       0       0       0
  4666 ;;Total ram usage:        1 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; Hardware stack levels required when called:    2
  4669 ;; This function calls:
  4670 ;;		Nothing
  4671 ;; This function is called by:
  4672 ;;		_main
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           
  4677                           ;psect for function _heat_off
  4678  0ADE                     _heat_off:	
  4679  0ADE                     l3151:	
  4680                           ;incstack = 0
  4681                           ; Regs used in _heat_off: [wreg+status,2+status,0]
  4682                           
  4683                           
  4684                           ;microwave.c: 319:     (*((volatile unint8*)PORT_B + (unint8)0x00) &=~((unint8)1 << 6));
  4685  0ADE  30BF               	movlw	191
  4686  0ADF  1283               	bcf	3,5	;RP0=0, select bank0
  4687  0AE0  1303               	bcf	3,6	;RP1=0, select bank0
  4688  0AE1  00A0               	movwf	??_heat_off
  4689  0AE2  0820               	movf	??_heat_off,w
  4690  0AE3  0586               	andwf	6,f	;volatile
  4691  0AE4                     l419:	
  4692  0AE4  0008               	return
  4693  0AE5                     __end_of_heat_off:	
  4694                           
  4695                           	psect	text25
  4696  0CF0                     __ptext25:	
  4697 ;; *************** function _foodOutMicro *****************
  4698 ;; Defined at:
  4699 ;;		line 288 in file "microwave.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;		None
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;		None
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  1    wreg      unsigned char 
  4706 ;; Registers used:
  4707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4713 ;;      Params:         0       0       0       0       0
  4714 ;;      Locals:         0       0       0       0       0
  4715 ;;      Temps:          0       1       0       0       0
  4716 ;;      Totals:         0       1       0       0       0
  4717 ;;Total ram usage:        1 bytes
  4718 ;; Hardware stack levels used:    1
  4719 ;; Hardware stack levels required when called:    4
  4720 ;; This function calls:
  4721 ;;		_LCD_displayString
  4722 ;;		_LCD_goToRowColum
  4723 ;;		_LCD_init
  4724 ;; This function is called by:
  4725 ;;		_main
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           
  4730                           ;psect for function _foodOutMicro
  4731  0CF0                     _foodOutMicro:	
  4732  0CF0                     l3169:	
  4733                           ;incstack = 0
  4734                           ; Regs used in _foodOutMicro: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4735                           
  4736                           
  4737                           ;microwave.c: 290:     LCD_init();
  4738  0CF0  120A  158A  2330  120A  158A  	fcall	_LCD_init
  4739  0CF5                     l3171:	
  4740                           
  4741                           ;microwave.c: 291:     LCD_goToRowColum(1 , 0);
  4742  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  4743  0CF6  1303               	bcf	3,6	;RP1=0, select bank0
  4744  0CF7  01A5               	clrf	LCD_goToRowColum@colum
  4745  0CF8  3001               	movlw	1
  4746  0CF9  120A  158A  2387  120A  158A  	fcall	_LCD_goToRowColum
  4747  0CFE                     l3173:	
  4748                           
  4749                           ;microwave.c: 292:     LCD_displayString("                        ");
  4750  0CFE  300D               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  4751  0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  4752  0D00  1303               	bcf	3,6	;RP1=0, select bank0
  4753  0D01  00A5               	movwf	LCD_displayString@str
  4754  0D02  3080               	movlw	128
  4755  0D03  00A6               	movwf	LCD_displayString@str+1
  4756  0D04  120A  158A  23D5  120A  158A  	fcall	_LCD_displayString
  4757  0D09                     l3175:	
  4758                           
  4759                           ;microwave.c: 293:     LCD_goToRowColum(1 , 1);
  4760  0D09  1283               	bcf	3,5	;RP0=0, select bank0
  4761  0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  4762  0D0B  01A5               	clrf	LCD_goToRowColum@colum
  4763  0D0C  0AA5               	incf	LCD_goToRowColum@colum,f
  4764  0D0D  3001               	movlw	1
  4765  0D0E  120A  158A  2387  120A  158A  	fcall	_LCD_goToRowColum
  4766  0D13                     l3177:	
  4767                           
  4768                           ;microwave.c: 294:     LCD_displayString("take the food");
  4769  0D13  309F               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  4770  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  4771  0D15  1303               	bcf	3,6	;RP1=0, select bank0
  4772  0D16  00A5               	movwf	LCD_displayString@str
  4773  0D17  3080               	movlw	128
  4774  0D18  00A6               	movwf	LCD_displayString@str+1
  4775  0D19  120A  158A  23D5  120A  158A  	fcall	_LCD_displayString
  4776  0D1E                     l407:	
  4777                           ;microwave.c: 296:     while((*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 5)));
  4778                           
  4779  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  4780  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  4781  0D20  1A86               	btfsc	6,5	;volatile
  4782  0D21  2D23               	goto	u4061
  4783  0D22  2D24               	goto	u4060
  4784  0D23                     u4061:	
  4785  0D23  2D1E               	goto	l407
  4786  0D24                     u4060:	
  4787  0D24                     l410:	
  4788  0D24  1E86               	btfss	6,5	;volatile
  4789  0D25  2D27               	goto	u4071
  4790  0D26  2D28               	goto	u4070
  4791  0D27                     u4071:	
  4792  0D27  2D24               	goto	l410
  4793  0D28                     u4070:	
  4794  0D28                     l3179:	
  4795                           
  4796                           ;microwave.c: 300:  (*((volatile unint8*)PORT_C + (unint8)0x00) ^=((unint8)1 << 5));
  4797  0D28  3020               	movlw	32
  4798  0D29  00AA               	movwf	??_foodOutMicro
  4799  0D2A  082A               	movf	??_foodOutMicro,w
  4800  0D2B  0687               	xorwf	7,f	;volatile
  4801  0D2C                     l413:	
  4802  0D2C  0008               	return
  4803  0D2D                     __end_of_foodOutMicro:	
  4804                           
  4805                           	psect	text26
  4806  0CB3                     __ptext26:	
  4807 ;; *************** function _foodIsInMicro *****************
  4808 ;; Defined at:
  4809 ;;		line 271 in file "microwave.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;		None
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;		None
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  1    wreg      unsigned char 
  4816 ;; Registers used:
  4817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4823 ;;      Params:         0       0       0       0       0
  4824 ;;      Locals:         0       0       0       0       0
  4825 ;;      Temps:          0       1       0       0       0
  4826 ;;      Totals:         0       1       0       0       0
  4827 ;;Total ram usage:        1 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    4
  4830 ;; This function calls:
  4831 ;;		_LCD_displayString
  4832 ;;		_LCD_goToRowColum
  4833 ;;		_LCD_init
  4834 ;; This function is called by:
  4835 ;;		_main
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           
  4840                           ;psect for function _foodIsInMicro
  4841  0CB3                     _foodIsInMicro:	
  4842  0CB3                     l3069:	
  4843                           ;incstack = 0
  4844                           ; Regs used in _foodIsInMicro: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4845                           
  4846                           
  4847                           ;microwave.c: 273:     LCD_init();
  4848  0CB3  120A  158A  2330  120A  158A  	fcall	_LCD_init
  4849  0CB8                     l3071:	
  4850                           
  4851                           ;microwave.c: 274:     LCD_goToRowColum(1 , 0);
  4852  0CB8  1283               	bcf	3,5	;RP0=0, select bank0
  4853  0CB9  1303               	bcf	3,6	;RP1=0, select bank0
  4854  0CBA  01A5               	clrf	LCD_goToRowColum@colum
  4855  0CBB  3001               	movlw	1
  4856  0CBC  120A  158A  2387  120A  158A  	fcall	_LCD_goToRowColum
  4857  0CC1                     l3073:	
  4858                           
  4859                           ;microwave.c: 275:     LCD_displayString("                    ");
  4860  0CC1  3011               	movlw	(low (((STR_14+4)-__stringbase)| (0+32768)))& (0+255)
  4861  0CC2  1283               	bcf	3,5	;RP0=0, select bank0
  4862  0CC3  1303               	bcf	3,6	;RP1=0, select bank0
  4863  0CC4  00A5               	movwf	LCD_displayString@str
  4864  0CC5  3080               	movlw	128
  4865  0CC6  00A6               	movwf	LCD_displayString@str+1
  4866  0CC7  120A  158A  23D5  120A  158A  	fcall	_LCD_displayString
  4867  0CCC                     l3075:	
  4868                           
  4869                           ;microwave.c: 276:     LCD_goToRowColum(1 , 0);
  4870  0CCC  1283               	bcf	3,5	;RP0=0, select bank0
  4871  0CCD  1303               	bcf	3,6	;RP1=0, select bank0
  4872  0CCE  01A5               	clrf	LCD_goToRowColum@colum
  4873  0CCF  3001               	movlw	1
  4874  0CD0  120A  158A  2387  120A  158A  	fcall	_LCD_goToRowColum
  4875  0CD5                     l3077:	
  4876                           
  4877                           ;microwave.c: 277:     LCD_displayString("Enter the food");
  4878  0CD5  3081               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  4879  0CD6  1283               	bcf	3,5	;RP0=0, select bank0
  4880  0CD7  1303               	bcf	3,6	;RP1=0, select bank0
  4881  0CD8  00A5               	movwf	LCD_displayString@str
  4882  0CD9  3080               	movlw	128
  4883  0CDA  00A6               	movwf	LCD_displayString@str+1
  4884  0CDB  120A  158A  23D5  120A  158A  	fcall	_LCD_displayString
  4885  0CE0                     l398:	
  4886                           ;microwave.c: 279:     while((*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 5)));
  4887                           
  4888  0CE0  1283               	bcf	3,5	;RP0=0, select bank0
  4889  0CE1  1303               	bcf	3,6	;RP1=0, select bank0
  4890  0CE2  1A86               	btfsc	6,5	;volatile
  4891  0CE3  2CE5               	goto	u3981
  4892  0CE4  2CE6               	goto	u3980
  4893  0CE5                     u3981:	
  4894  0CE5  2CE0               	goto	l398
  4895  0CE6                     u3980:	
  4896  0CE6                     l401:	
  4897  0CE6  1E86               	btfss	6,5	;volatile
  4898  0CE7  2CE9               	goto	u3991
  4899  0CE8  2CEA               	goto	u3990
  4900  0CE9                     u3991:	
  4901  0CE9  2CE6               	goto	l401
  4902  0CEA                     u3990:	
  4903  0CEA                     l3079:	
  4904                           
  4905                           ;microwave.c: 283:   (*((volatile unint8*)PORT_C + (unint8)0x00) ^=((unint8)1 << 5));
  4906  0CEA  3020               	movlw	32
  4907  0CEB  00AA               	movwf	??_foodIsInMicro
  4908  0CEC  082A               	movf	??_foodIsInMicro,w
  4909  0CED  0687               	xorwf	7,f	;volatile
  4910  0CEE                     l3081:	
  4911                           
  4912                           ;microwave.c: 285:      return 1;
  4913  0CEE  3001               	movlw	1
  4914  0CEF                     l404:	
  4915  0CEF  0008               	return
  4916  0CF0                     __end_of_foodIsInMicro:	
  4917                           
  4918                           	psect	text27
  4919  0C3A                     __ptext27:	
  4920 ;; *************** function _door_is_open *****************
  4921 ;; Defined at:
  4922 ;;		line 252 in file "microwave.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;		None
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;		None
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  1    wreg      unsigned char 
  4929 ;; Registers used:
  4930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4936 ;;      Params:         0       0       0       0       0
  4937 ;;      Locals:         0       0       0       0       0
  4938 ;;      Temps:          0       1       0       0       0
  4939 ;;      Totals:         0       1       0       0       0
  4940 ;;Total ram usage:        1 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; Hardware stack levels required when called:    4
  4943 ;; This function calls:
  4944 ;;		_LCD_displayString
  4945 ;;		_LCD_goToRowColum
  4946 ;;		_LCD_init
  4947 ;; This function is called by:
  4948 ;;		_main
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952                           
  4953                           ;psect for function _door_is_open
  4954  0C3A                     _door_is_open:	
  4955  0C3A                     l3155:	
  4956                           ;incstack = 0
  4957                           ; Regs used in _door_is_open: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4958                           
  4959                           
  4960                           ;microwave.c: 254:     LCD_init();
  4961  0C3A  120A  158A  2330  120A  158A  	fcall	_LCD_init
  4962  0C3F                     l3157:	
  4963                           
  4964                           ;microwave.c: 255:     LCD_goToRowColum(1 , 0);
  4965  0C3F  1283               	bcf	3,5	;RP0=0, select bank0
  4966  0C40  1303               	bcf	3,6	;RP1=0, select bank0
  4967  0C41  01A5               	clrf	LCD_goToRowColum@colum
  4968  0C42  3001               	movlw	1
  4969  0C43  120A  158A  2387  120A  158A  	fcall	_LCD_goToRowColum
  4970  0C48                     l3159:	
  4971                           
  4972                           ;microwave.c: 256:     LCD_displayString("                     ");
  4973  0C48  3010               	movlw	(low (((STR_14+3)-__stringbase)| (0+32768)))& (0+255)
  4974  0C49  1283               	bcf	3,5	;RP0=0, select bank0
  4975  0C4A  1303               	bcf	3,6	;RP1=0, select bank0
  4976  0C4B  00A5               	movwf	LCD_displayString@str
  4977  0C4C  3080               	movlw	128
  4978  0C4D  00A6               	movwf	LCD_displayString@str+1
  4979  0C4E  120A  158A  23D5  120A  158A  	fcall	_LCD_displayString
  4980  0C53                     l3161:	
  4981                           
  4982                           ;microwave.c: 257:     LCD_goToRowColum(1 , 0);
  4983  0C53  1283               	bcf	3,5	;RP0=0, select bank0
  4984  0C54  1303               	bcf	3,6	;RP1=0, select bank0
  4985  0C55  01A5               	clrf	LCD_goToRowColum@colum
  4986  0C56  3001               	movlw	1
  4987  0C57  120A  158A  2387  120A  158A  	fcall	_LCD_goToRowColum
  4988  0C5C                     l3163:	
  4989                           
  4990                           ;microwave.c: 258:     LCD_displayString("open the door");
  4991  0C5C  30AD               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  4992  0C5D  1283               	bcf	3,5	;RP0=0, select bank0
  4993  0C5E  1303               	bcf	3,6	;RP1=0, select bank0
  4994  0C5F  00A5               	movwf	LCD_displayString@str
  4995  0C60  3080               	movlw	128
  4996  0C61  00A6               	movwf	LCD_displayString@str+1
  4997  0C62  120A  158A  23D5  120A  158A  	fcall	_LCD_displayString
  4998  0C67                     l389:	
  4999                           ;microwave.c: 260:  while((*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 4)));
  5000                           
  5001  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  5002  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  5003  0C69  1A06               	btfsc	6,4	;volatile
  5004  0C6A  2C6C               	goto	u4041
  5005  0C6B  2C6D               	goto	u4040
  5006  0C6C                     u4041:	
  5007  0C6C  2C67               	goto	l389
  5008  0C6D                     u4040:	
  5009  0C6D                     l392:	
  5010  0C6D  1E06               	btfss	6,4	;volatile
  5011  0C6E  2C70               	goto	u4051
  5012  0C6F  2C71               	goto	u4050
  5013  0C70                     u4051:	
  5014  0C70  2C6D               	goto	l392
  5015  0C71                     u4050:	
  5016  0C71                     l3165:	
  5017                           
  5018                           ;microwave.c: 264:  (*((volatile unint8*)PORT_C + (unint8)0x00) ^=((unint8)1 << 6));
  5019  0C71  3040               	movlw	64
  5020  0C72  00AA               	movwf	??_door_is_open
  5021  0C73  082A               	movf	??_door_is_open,w
  5022  0C74  0687               	xorwf	7,f	;volatile
  5023  0C75                     l395:	
  5024  0C75  0008               	return
  5025  0C76                     __end_of_door_is_open:	
  5026                           
  5027                           	psect	text28
  5028  0C76                     __ptext28:	
  5029 ;; *************** function _door_is_close *****************
  5030 ;; Defined at:
  5031 ;;		line 189 in file "microwave.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;		None
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      unsigned char 
  5038 ;; Registers used:
  5039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5045 ;;      Params:         0       0       0       0       0
  5046 ;;      Locals:         0       0       0       0       0
  5047 ;;      Temps:          0       1       0       0       0
  5048 ;;      Totals:         0       1       0       0       0
  5049 ;;Total ram usage:        1 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    4
  5052 ;; This function calls:
  5053 ;;		_LCD_displayString
  5054 ;;		_LCD_goToRowColum
  5055 ;;		_LCD_init
  5056 ;; This function is called by:
  5057 ;;		_main
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           
  5062                           ;psect for function _door_is_close
  5063  0C76                     _door_is_close:	
  5064  0C76                     l3085:	
  5065                           ;incstack = 0
  5066                           ; Regs used in _door_is_close: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5067                           
  5068                           
  5069                           ;microwave.c: 191:              LCD_init();
  5070  0C76  120A  158A  2330  120A  158A  	fcall	_LCD_init
  5071  0C7B                     l3087:	
  5072                           
  5073                           ;microwave.c: 192:              LCD_goToRowColum(1 , 0);
  5074  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  5075  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  5076  0C7D  01A5               	clrf	LCD_goToRowColum@colum
  5077  0C7E  3001               	movlw	1
  5078  0C7F  120A  158A  2387  120A  158A  	fcall	_LCD_goToRowColum
  5079  0C84                     l3089:	
  5080                           
  5081                           ;microwave.c: 193:              LCD_displayString("                    ");
  5082  0C84  3011               	movlw	(low (((STR_14+4)-__stringbase)| (0+32768)))& (0+255)
  5083  0C85  1283               	bcf	3,5	;RP0=0, select bank0
  5084  0C86  1303               	bcf	3,6	;RP1=0, select bank0
  5085  0C87  00A5               	movwf	LCD_displayString@str
  5086  0C88  3080               	movlw	128
  5087  0C89  00A6               	movwf	LCD_displayString@str+1
  5088  0C8A  120A  158A  23D5  120A  158A  	fcall	_LCD_displayString
  5089  0C8F                     l3091:	
  5090                           
  5091                           ;microwave.c: 194:              LCD_goToRowColum(1 , 0);
  5092  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  5093  0C90  1303               	bcf	3,6	;RP1=0, select bank0
  5094  0C91  01A5               	clrf	LCD_goToRowColum@colum
  5095  0C92  3001               	movlw	1
  5096  0C93  120A  158A  2387  120A  158A  	fcall	_LCD_goToRowColum
  5097  0C98                     l3093:	
  5098                           
  5099                           ;microwave.c: 195:              LCD_displayString("close the door");
  5100  0C98  3090               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  5101  0C99  1283               	bcf	3,5	;RP0=0, select bank0
  5102  0C9A  1303               	bcf	3,6	;RP1=0, select bank0
  5103  0C9B  00A5               	movwf	LCD_displayString@str
  5104  0C9C  3080               	movlw	128
  5105  0C9D  00A6               	movwf	LCD_displayString@str+1
  5106  0C9E  120A  158A  23D5  120A  158A  	fcall	_LCD_displayString
  5107  0CA3                     l373:	
  5108                           ;microwave.c: 197:  while((*((volatile unint8*)PORT_B + (unint8)0x00) & (1 << 4)));
  5109                           
  5110  0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  5111  0CA4  1303               	bcf	3,6	;RP1=0, select bank0
  5112  0CA5  1A06               	btfsc	6,4	;volatile
  5113  0CA6  2CA8               	goto	u4001
  5114  0CA7  2CA9               	goto	u4000
  5115  0CA8                     u4001:	
  5116  0CA8  2CA3               	goto	l373
  5117  0CA9                     u4000:	
  5118  0CA9                     l376:	
  5119  0CA9  1E06               	btfss	6,4	;volatile
  5120  0CAA  2CAC               	goto	u4011
  5121  0CAB  2CAD               	goto	u4010
  5122  0CAC                     u4011:	
  5123  0CAC  2CA9               	goto	l376
  5124  0CAD                     u4010:	
  5125  0CAD                     l3095:	
  5126                           
  5127                           ;microwave.c: 201:  (*((volatile unint8*)PORT_C + (unint8)0x00) ^=((unint8)1 << 6));
  5128  0CAD  3040               	movlw	64
  5129  0CAE  00AA               	movwf	??_door_is_close
  5130  0CAF  082A               	movf	??_door_is_close,w
  5131  0CB0  0687               	xorwf	7,f	;volatile
  5132  0CB1                     l3097:	
  5133                           
  5134                           ;microwave.c: 203:  return 1;
  5135  0CB1  3001               	movlw	1
  5136  0CB2                     l379:	
  5137  0CB2  0008               	return
  5138  0CB3                     __end_of_door_is_close:	
  5139                           
  5140                           	psect	text29
  5141  0B30                     __ptext29:	
  5142 ;; *************** function _LCD_init *****************
  5143 ;; Defined at:
  5144 ;;		line 40 in file "lcd.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;		None
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;		None
  5149 ;; Return value:  Size  Location     Type
  5150 ;;                  1    wreg      void 
  5151 ;; Registers used:
  5152 ;;		wreg, status,2, status,0, pclath, cstack
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5158 ;;      Params:         0       0       0       0       0
  5159 ;;      Locals:         0       0       0       0       0
  5160 ;;      Temps:          0       1       0       0       0
  5161 ;;      Totals:         0       1       0       0       0
  5162 ;;Total ram usage:        1 bytes
  5163 ;; Hardware stack levels used:    1
  5164 ;; Hardware stack levels required when called:    3
  5165 ;; This function calls:
  5166 ;;		_LCD_sendCommand
  5167 ;; This function is called by:
  5168 ;;		_microWave_init
  5169 ;;		_scan_minutes
  5170 ;;		_door_is_close
  5171 ;;		_show_remaining_time
  5172 ;;		_door_is_open
  5173 ;;		_foodIsInMicro
  5174 ;;		_foodOutMicro
  5175 ;;		_heat_on
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           
  5180                           ;psect for function _LCD_init
  5181  0B30                     _LCD_init:	
  5182  0B30                     l2759:	
  5183                           ;incstack = 0
  5184                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  5185                           
  5186                           
  5187                           ;lcd.c: 42:     *((volatile unint8*) PORT_E + (unint8)0x80) &=(~(1 << 1) & ~(1 << 2) );
  5188  0B30  30F9               	movlw	249
  5189  0B31  1283               	bcf	3,5	;RP0=0, select bank0
  5190  0B32  1303               	bcf	3,6	;RP1=0, select bank0
  5191  0B33  00A5               	movwf	??_LCD_init
  5192  0B34  0825               	movf	??_LCD_init,w
  5193  0B35  1683               	bsf	3,5	;RP0=1, select bank1
  5194  0B36  1303               	bcf	3,6	;RP1=0, select bank1
  5195  0B37  0589               	andwf	9,f	;volatile
  5196  0B38                     l2761:	
  5197                           
  5198                           ;lcd.c: 58:   *((volatile unint8*)PORT_D + (unint8)0x80) = 0X00;
  5199  0B38  0188               	clrf	8	;volatile
  5200  0B39                     l2763:	
  5201                           
  5202                           ;lcd.c: 60:   LCD_sendCommand(0X38);
  5203  0B39  3038               	movlw	56
  5204  0B3A  120A  118A  2502  120A  158A  	fcall	_LCD_sendCommand
  5205  0B3F                     l2765:	
  5206                           
  5207                           ;lcd.c: 64:   LCD_sendCommand(0X0C);
  5208  0B3F  300C               	movlw	12
  5209  0B40  120A  118A  2502  120A  158A  	fcall	_LCD_sendCommand
  5210  0B45                     l96:	
  5211  0B45  0008               	return
  5212  0B46                     __end_of_LCD_init:	
  5213                           
  5214                           	psect	text30
  5215  0B46                     __ptext30:	
  5216 ;; *************** function _LCD_displayStringOnRowColum *****************
  5217 ;; Defined at:
  5218 ;;		line 194 in file "lcd.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;  row             1    wreg     unsigned char 
  5221 ;;  colum           1   10[BANK0 ] unsigned char 
  5222 ;;  str             1   11[BANK0 ] PTR const unsigned char 
  5223 ;;		 -> STR_4(16), STR_3(22), STR_2(18), STR_1(12), 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  row             1   13[BANK0 ] unsigned char 
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  1    wreg      void 
  5228 ;; Registers used:
  5229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5235 ;;      Params:         0       2       0       0       0
  5236 ;;      Locals:         0       1       0       0       0
  5237 ;;      Temps:          0       1       0       0       0
  5238 ;;      Totals:         0       4       0       0       0
  5239 ;;Total ram usage:        4 bytes
  5240 ;; Hardware stack levels used:    1
  5241 ;; Hardware stack levels required when called:    4
  5242 ;; This function calls:
  5243 ;;		_LCD_displayString
  5244 ;;		_LCD_goToRowColum
  5245 ;; This function is called by:
  5246 ;;		_main
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250                           
  5251                           ;psect for function _LCD_displayStringOnRowColum
  5252  0B46                     _LCD_displayStringOnRowColum:	
  5253                           
  5254                           ;incstack = 0
  5255                           ; Regs used in _LCD_displayStringOnRowColum: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  5256                           ;LCD_displayStringOnRowColum@row stored from wreg
  5257  0B46  1283               	bcf	3,5	;RP0=0, select bank0
  5258  0B47  1303               	bcf	3,6	;RP1=0, select bank0
  5259  0B48  00AD               	movwf	LCD_displayStringOnRowColum@row
  5260  0B49                     l3003:	
  5261                           
  5262                           ;lcd.c: 194: void LCD_displayStringOnRowColum(unint8 row , unint8 colum , const unint8 *
      +                          str);lcd.c: 195: {;lcd.c: 196:     LCD_goToRowColum(row , colum);
  5263  0B49  082A               	movf	LCD_displayStringOnRowColum@colum,w
  5264  0B4A  00AC               	movwf	??_LCD_displayStringOnRowColum
  5265  0B4B  082C               	movf	??_LCD_displayStringOnRowColum,w
  5266  0B4C  00A5               	movwf	LCD_goToRowColum@colum
  5267  0B4D  082D               	movf	LCD_displayStringOnRowColum@row,w
  5268  0B4E  120A  158A  2387  120A  158A  	fcall	_LCD_goToRowColum
  5269  0B53                     l3005:	
  5270                           
  5271                           ;lcd.c: 198:  LCD_displayString(str);
  5272  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  5273  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  5274  0B55  082B               	movf	LCD_displayStringOnRowColum@str,w
  5275  0B56  00A5               	movwf	LCD_displayString@str
  5276  0B57  3000               	movlw	0
  5277  0B58  1D03               	btfss	3,2
  5278  0B59  3080               	movlw	128
  5279  0B5A  00A6               	movwf	LCD_displayString@str+1
  5280  0B5B  120A  158A  23D5  120A  158A  	fcall	_LCD_displayString
  5281  0B60                     l134:	
  5282  0B60  0008               	return
  5283  0B61                     __end_of_LCD_displayStringOnRowColum:	
  5284                           
  5285                           	psect	text31
  5286  0B87                     __ptext31:	
  5287 ;; *************** function _LCD_goToRowColum *****************
  5288 ;; Defined at:
  5289 ;;		line 175 in file "lcd.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;  row             1    wreg     unsigned char 
  5292 ;;  colum           1    5[BANK0 ] unsigned char 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  row             1    8[BANK0 ] unsigned char 
  5295 ;;  Address         1    9[BANK0 ] unsigned char 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      void 
  5298 ;; Registers used:
  5299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5305 ;;      Params:         0       1       0       0       0
  5306 ;;      Locals:         0       2       0       0       0
  5307 ;;      Temps:          0       2       0       0       0
  5308 ;;      Totals:         0       5       0       0       0
  5309 ;;Total ram usage:        5 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:    3
  5312 ;; This function calls:
  5313 ;;		_LCD_sendCommand
  5314 ;; This function is called by:
  5315 ;;		_LCD_displayStringOnRowColum
  5316 ;;		_scan_minutes
  5317 ;;		_door_is_close
  5318 ;;		_show_remaining_time
  5319 ;;		_door_is_open
  5320 ;;		_foodIsInMicro
  5321 ;;		_foodOutMicro
  5322 ;;		_heat_on
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           
  5327                           ;psect for function _LCD_goToRowColum
  5328  0B87                     _LCD_goToRowColum:	
  5329                           
  5330                           ;incstack = 0
  5331                           ; Regs used in _LCD_goToRowColum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5332                           ;LCD_goToRowColum@row stored from wreg
  5333  0B87  1283               	bcf	3,5	;RP0=0, select bank0
  5334  0B88  1303               	bcf	3,6	;RP1=0, select bank0
  5335  0B89  00A8               	movwf	LCD_goToRowColum@row
  5336  0B8A                     l2767:	
  5337                           
  5338                           ;lcd.c: 175: void LCD_goToRowColum(unint8 row , unint8 colum);lcd.c: 176: {;lcd.c: 177: 
      +                           unint8 Address;;lcd.c: 179:  switch(row)
  5339  0B8A  2B96               	goto	l2775
  5340  0B8B                     l2769:	
  5341                           
  5342                           ;lcd.c: 183:   Address =colum;
  5343  0B8B  0825               	movf	LCD_goToRowColum@colum,w
  5344  0B8C  00A6               	movwf	??_LCD_goToRowColum
  5345  0B8D  0826               	movf	??_LCD_goToRowColum,w
  5346  0B8E  00A9               	movwf	LCD_goToRowColum@Address
  5347                           
  5348                           ;lcd.c: 184:   break;
  5349  0B8F  2BA6               	goto	l2777
  5350  0B90                     l2771:	
  5351                           
  5352                           ;lcd.c: 186:   Address = colum + 0x40;
  5353  0B90  0825               	movf	LCD_goToRowColum@colum,w
  5354  0B91  3E40               	addlw	64
  5355  0B92  00A6               	movwf	??_LCD_goToRowColum
  5356  0B93  0826               	movf	??_LCD_goToRowColum,w
  5357  0B94  00A9               	movwf	LCD_goToRowColum@Address
  5358                           
  5359                           ;lcd.c: 187:   break;
  5360  0B95  2BA6               	goto	l2777
  5361  0B96                     l2775:	
  5362  0B96  0828               	movf	LCD_goToRowColum@row,w
  5363  0B97  00A6               	movwf	??_LCD_goToRowColum
  5364  0B98  01A7               	clrf	??_LCD_goToRowColum+1
  5365                           
  5366                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5367                           ; Switch size 1, requested type "simple"
  5368                           ; Number of cases is 1, Range of values is 0 to 0
  5369                           ; switch strategies available:
  5370                           ; Name         Instructions Cycles
  5371                           ; simple_byte            4     3 (average)
  5372                           ; direct_byte           11     8 (fixed)
  5373                           ; jumptable            260     6 (fixed)
  5374                           ;	Chosen strategy is simple_byte
  5375  0B99  0827               	movf	??_LCD_goToRowColum+1,w
  5376  0B9A  3A00               	xorlw	0	; case 0
  5377  0B9B  1903               	skipnz
  5378  0B9C  2B9E               	goto	l3481
  5379  0B9D  2BA6               	goto	l2777
  5380  0B9E                     l3481:	
  5381                           
  5382                           ; Switch size 1, requested type "simple"
  5383                           ; Number of cases is 2, Range of values is 0 to 1
  5384                           ; switch strategies available:
  5385                           ; Name         Instructions Cycles
  5386                           ; simple_byte            7     4 (average)
  5387                           ; direct_byte           14     8 (fixed)
  5388                           ; jumptable            260     6 (fixed)
  5389                           ;	Chosen strategy is simple_byte
  5390  0B9E  0826               	movf	??_LCD_goToRowColum,w
  5391  0B9F  3A00               	xorlw	0	; case 0
  5392  0BA0  1903               	skipnz
  5393  0BA1  2B8B               	goto	l2769
  5394  0BA2  3A01               	xorlw	1	; case 1
  5395  0BA3  1903               	skipnz
  5396  0BA4  2B90               	goto	l2771
  5397  0BA5  2BA6               	goto	l2777
  5398  0BA6                     l2777:	
  5399                           
  5400                           ;lcd.c: 190:     LCD_sendCommand(Address + 0X80);
  5401  0BA6  0829               	movf	LCD_goToRowColum@Address,w
  5402  0BA7  3E80               	addlw	128
  5403  0BA8  120A  118A  2502  120A  158A  	fcall	_LCD_sendCommand
  5404  0BAD                     l131:	
  5405  0BAD  0008               	return
  5406  0BAE                     __end_of_LCD_goToRowColum:	
  5407                           
  5408                           	psect	text32
  5409  0502                     __ptext32:	
  5410 ;; *************** function _LCD_sendCommand *****************
  5411 ;; Defined at:
  5412 ;;		line 68 in file "lcd.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;  commond         1    wreg     unsigned char 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;  commond         1    4[BANK0 ] unsigned char 
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  1    wreg      void 
  5419 ;; Registers used:
  5420 ;;		wreg, status,2, status,0
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 0/0
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5426 ;;      Params:         0       0       0       0       0
  5427 ;;      Locals:         0       1       0       0       0
  5428 ;;      Temps:          0       4       0       0       0
  5429 ;;      Totals:         0       5       0       0       0
  5430 ;;Total ram usage:        5 bytes
  5431 ;; Hardware stack levels used:    1
  5432 ;; Hardware stack levels required when called:    2
  5433 ;; This function calls:
  5434 ;;		Nothing
  5435 ;; This function is called by:
  5436 ;;		_LCD_init
  5437 ;;		_LCD_goToRowColum
  5438 ;;		_LCD_clear_screen
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           
  5443                           ;psect for function _LCD_sendCommand
  5444  0502                     _LCD_sendCommand:	
  5445                           
  5446                           ;incstack = 0
  5447                           ; Regs used in _LCD_sendCommand: [wreg+status,2+status,0]
  5448                           ;LCD_sendCommand@commond stored from wreg
  5449  0502  1283               	bcf	3,5	;RP0=0, select bank0
  5450  0503  1303               	bcf	3,6	;RP1=0, select bank0
  5451  0504  00A4               	movwf	LCD_sendCommand@commond
  5452  0505                     l2717:	
  5453                           
  5454                           ;lcd.c: 68: void LCD_sendCommand(unint8 commond);lcd.c: 69: {;lcd.c: 70:  (*((volatile u
      +                          nint8*)PORT_E ) &=~((unint8)1 << 2));
  5455  0505  30FB               	movlw	251
  5456  0506  00A0               	movwf	??_LCD_sendCommand
  5457  0507  0820               	movf	??_LCD_sendCommand,w
  5458  0508  0589               	andwf	9,f	;volatile
  5459  0509                     l2719:	
  5460                           
  5461                           ;lcd.c: 71:     for(counter = ((10000000UL / 1000000) * 500 /30 ) ; counter > 0 ; counte
      +                          r--){};
  5462  0509  3000               	movlw	0
  5463  050A  00DC               	movwf	_counter+3
  5464  050B  3000               	movlw	0
  5465  050C  00DB               	movwf	_counter+2
  5466  050D  3000               	movlw	0
  5467  050E  00DA               	movwf	_counter+1
  5468  050F  30A6               	movlw	166
  5469  0510  00D9               	movwf	_counter
  5470  0511                     l2721:	
  5471  0511  085C               	movf	_counter+3,w
  5472  0512  045B               	iorwf	_counter+2,w
  5473  0513  045A               	iorwf	_counter+1,w
  5474  0514  0459               	iorwf	_counter,w
  5475  0515  1D03               	skipz
  5476  0516  2D18               	goto	u3211
  5477  0517  2D19               	goto	u3210
  5478  0518                     u3211:	
  5479  0518  2D1A               	goto	l2725
  5480  0519                     u3210:	
  5481  0519  2D3E               	goto	l100
  5482  051A                     l2725:	
  5483  051A  3001               	movlw	1
  5484  051B  00A0               	movwf	??_LCD_sendCommand
  5485  051C  3000               	movlw	0
  5486  051D  00A1               	movwf	??_LCD_sendCommand+1
  5487  051E  3000               	movlw	0
  5488  051F  00A2               	movwf	??_LCD_sendCommand+2
  5489  0520  3000               	movlw	0
  5490  0521  00A3               	movwf	??_LCD_sendCommand+3
  5491  0522  0820               	movf	??_LCD_sendCommand,w
  5492  0523  02D9               	subwf	_counter,f
  5493  0524  0821               	movf	??_LCD_sendCommand+1,w
  5494  0525  1C03               	skipc
  5495  0526  0F21               	incfsz	??_LCD_sendCommand+1,w
  5496  0527  2D29               	goto	u3225
  5497  0528  2D2A               	goto	u3226
  5498  0529                     u3225:	
  5499  0529  02DA               	subwf	_counter+1,f
  5500  052A                     u3226:	
  5501  052A  0822               	movf	??_LCD_sendCommand+2,w
  5502  052B  1C03               	skipc
  5503  052C  0F22               	incfsz	??_LCD_sendCommand+2,w
  5504  052D  2D2F               	goto	u3227
  5505  052E  2D30               	goto	u3228
  5506  052F                     u3227:	
  5507  052F  02DB               	subwf	_counter+2,f
  5508  0530                     u3228:	
  5509  0530  0823               	movf	??_LCD_sendCommand+3,w
  5510  0531  1C03               	skipc
  5511  0532  0F23               	incfsz	??_LCD_sendCommand+3,w
  5512  0533  2D35               	goto	u3229
  5513  0534  2D36               	goto	u3220
  5514  0535                     u3229:	
  5515  0535  02DC               	subwf	_counter+3,f
  5516  0536                     u3220:	
  5517  0536  085C               	movf	_counter+3,w
  5518  0537  045B               	iorwf	_counter+2,w
  5519  0538  045A               	iorwf	_counter+1,w
  5520  0539  0459               	iorwf	_counter,w
  5521  053A  1D03               	skipz
  5522  053B  2D3D               	goto	u3231
  5523  053C  2D3E               	goto	u3230
  5524  053D                     u3231:	
  5525  053D  2D1A               	goto	l2725
  5526  053E                     u3230:	
  5527  053E                     l100:	
  5528                           
  5529                           ;lcd.c: 72:     ( *((volatile unint8*)PORT_E ) |=(unint8)1 << 1);
  5530  053E  1489               	bsf	9,1	;volatile
  5531  053F                     l2727:	
  5532                           
  5533                           ;lcd.c: 73:     for(counter = ((10000000UL / 1000000) * 500 /30 ) ; counter > 0 ; counte
      +                          r--){};
  5534  053F  3000               	movlw	0
  5535  0540  00DC               	movwf	_counter+3
  5536  0541  3000               	movlw	0
  5537  0542  00DB               	movwf	_counter+2
  5538  0543  3000               	movlw	0
  5539  0544  00DA               	movwf	_counter+1
  5540  0545  30A6               	movlw	166
  5541  0546  00D9               	movwf	_counter
  5542  0547  085C               	movf	_counter+3,w
  5543  0548  045B               	iorwf	_counter+2,w
  5544  0549  045A               	iorwf	_counter+1,w
  5545  054A  0459               	iorwf	_counter,w
  5546  054B  1D03               	skipz
  5547  054C  2D4E               	goto	u3241
  5548  054D  2D4F               	goto	u3240
  5549  054E                     u3241:	
  5550  054E  2D50               	goto	l2731
  5551  054F                     u3240:	
  5552  054F  2D74               	goto	l2733
  5553  0550                     l2731:	
  5554  0550  3001               	movlw	1
  5555  0551  00A0               	movwf	??_LCD_sendCommand
  5556  0552  3000               	movlw	0
  5557  0553  00A1               	movwf	??_LCD_sendCommand+1
  5558  0554  3000               	movlw	0
  5559  0555  00A2               	movwf	??_LCD_sendCommand+2
  5560  0556  3000               	movlw	0
  5561  0557  00A3               	movwf	??_LCD_sendCommand+3
  5562  0558  0820               	movf	??_LCD_sendCommand,w
  5563  0559  02D9               	subwf	_counter,f
  5564  055A  0821               	movf	??_LCD_sendCommand+1,w
  5565  055B  1C03               	skipc
  5566  055C  0F21               	incfsz	??_LCD_sendCommand+1,w
  5567  055D  2D5F               	goto	u3255
  5568  055E  2D60               	goto	u3256
  5569  055F                     u3255:	
  5570  055F  02DA               	subwf	_counter+1,f
  5571  0560                     u3256:	
  5572  0560  0822               	movf	??_LCD_sendCommand+2,w
  5573  0561  1C03               	skipc
  5574  0562  0F22               	incfsz	??_LCD_sendCommand+2,w
  5575  0563  2D65               	goto	u3257
  5576  0564  2D66               	goto	u3258
  5577  0565                     u3257:	
  5578  0565  02DB               	subwf	_counter+2,f
  5579  0566                     u3258:	
  5580  0566  0823               	movf	??_LCD_sendCommand+3,w
  5581  0567  1C03               	skipc
  5582  0568  0F23               	incfsz	??_LCD_sendCommand+3,w
  5583  0569  2D6B               	goto	u3259
  5584  056A  2D6C               	goto	u3250
  5585  056B                     u3259:	
  5586  056B  02DC               	subwf	_counter+3,f
  5587  056C                     u3250:	
  5588  056C  085C               	movf	_counter+3,w
  5589  056D  045B               	iorwf	_counter+2,w
  5590  056E  045A               	iorwf	_counter+1,w
  5591  056F  0459               	iorwf	_counter,w
  5592  0570  1D03               	skipz
  5593  0571  2D73               	goto	u3261
  5594  0572  2D74               	goto	u3260
  5595  0573                     u3261:	
  5596  0573  2D50               	goto	l2731
  5597  0574                     u3260:	
  5598  0574                     l2733:	
  5599                           
  5600                           ;lcd.c: 97:     *((volatile unint8*) PORT_D ) = commond;
  5601  0574  0824               	movf	LCD_sendCommand@commond,w
  5602  0575  00A0               	movwf	??_LCD_sendCommand
  5603  0576  0820               	movf	??_LCD_sendCommand,w
  5604  0577  0088               	movwf	8	;volatile
  5605                           
  5606                           ;lcd.c: 98:     for(counter = ((10000000UL / 1000000) * 500 /30 ) ; counter > 0 ; counte
      +                          r--){};
  5607  0578  3000               	movlw	0
  5608  0579  00DC               	movwf	_counter+3
  5609  057A  3000               	movlw	0
  5610  057B  00DB               	movwf	_counter+2
  5611  057C  3000               	movlw	0
  5612  057D  00DA               	movwf	_counter+1
  5613  057E  30A6               	movlw	166
  5614  057F  00D9               	movwf	_counter
  5615  0580  085C               	movf	_counter+3,w
  5616  0581  045B               	iorwf	_counter+2,w
  5617  0582  045A               	iorwf	_counter+1,w
  5618  0583  0459               	iorwf	_counter,w
  5619  0584  1D03               	skipz
  5620  0585  2D87               	goto	u3271
  5621  0586  2D88               	goto	u3270
  5622  0587                     u3271:	
  5623  0587  2D89               	goto	l2737
  5624  0588                     u3270:	
  5625  0588  2DAD               	goto	l2739
  5626  0589                     l2737:	
  5627  0589  3001               	movlw	1
  5628  058A  00A0               	movwf	??_LCD_sendCommand
  5629  058B  3000               	movlw	0
  5630  058C  00A1               	movwf	??_LCD_sendCommand+1
  5631  058D  3000               	movlw	0
  5632  058E  00A2               	movwf	??_LCD_sendCommand+2
  5633  058F  3000               	movlw	0
  5634  0590  00A3               	movwf	??_LCD_sendCommand+3
  5635  0591  0820               	movf	??_LCD_sendCommand,w
  5636  0592  02D9               	subwf	_counter,f
  5637  0593  0821               	movf	??_LCD_sendCommand+1,w
  5638  0594  1C03               	skipc
  5639  0595  0F21               	incfsz	??_LCD_sendCommand+1,w
  5640  0596  2D98               	goto	u3285
  5641  0597  2D99               	goto	u3286
  5642  0598                     u3285:	
  5643  0598  02DA               	subwf	_counter+1,f
  5644  0599                     u3286:	
  5645  0599  0822               	movf	??_LCD_sendCommand+2,w
  5646  059A  1C03               	skipc
  5647  059B  0F22               	incfsz	??_LCD_sendCommand+2,w
  5648  059C  2D9E               	goto	u3287
  5649  059D  2D9F               	goto	u3288
  5650  059E                     u3287:	
  5651  059E  02DB               	subwf	_counter+2,f
  5652  059F                     u3288:	
  5653  059F  0823               	movf	??_LCD_sendCommand+3,w
  5654  05A0  1C03               	skipc
  5655  05A1  0F23               	incfsz	??_LCD_sendCommand+3,w
  5656  05A2  2DA4               	goto	u3289
  5657  05A3  2DA5               	goto	u3280
  5658  05A4                     u3289:	
  5659  05A4  02DC               	subwf	_counter+3,f
  5660  05A5                     u3280:	
  5661  05A5  085C               	movf	_counter+3,w
  5662  05A6  045B               	iorwf	_counter+2,w
  5663  05A7  045A               	iorwf	_counter+1,w
  5664  05A8  0459               	iorwf	_counter,w
  5665  05A9  1D03               	skipz
  5666  05AA  2DAC               	goto	u3291
  5667  05AB  2DAD               	goto	u3290
  5668  05AC                     u3291:	
  5669  05AC  2D89               	goto	l2737
  5670  05AD                     u3290:	
  5671  05AD                     l2739:	
  5672                           
  5673                           ;lcd.c: 99:     (*((volatile unint8*)PORT_E ) &=~((unint8)1 << 1));
  5674  05AD  30FD               	movlw	253
  5675  05AE  00A0               	movwf	??_LCD_sendCommand
  5676  05AF  0820               	movf	??_LCD_sendCommand,w
  5677  05B0  0589               	andwf	9,f	;volatile
  5678  05B1                     l2741:	
  5679                           
  5680                           ;lcd.c: 100:     for(counter = ((10000000UL / 1000000) * 500 /30 ) ; counter > 0 ; count
      +                          er--){};
  5681  05B1  3000               	movlw	0
  5682  05B2  00DC               	movwf	_counter+3
  5683  05B3  3000               	movlw	0
  5684  05B4  00DB               	movwf	_counter+2
  5685  05B5  3000               	movlw	0
  5686  05B6  00DA               	movwf	_counter+1
  5687  05B7  30A6               	movlw	166
  5688  05B8  00D9               	movwf	_counter
  5689  05B9                     l2743:	
  5690  05B9  085C               	movf	_counter+3,w
  5691  05BA  045B               	iorwf	_counter+2,w
  5692  05BB  045A               	iorwf	_counter+1,w
  5693  05BC  0459               	iorwf	_counter,w
  5694  05BD  1D03               	skipz
  5695  05BE  2DC0               	goto	u3301
  5696  05BF  2DC1               	goto	u3300
  5697  05C0                     u3301:	
  5698  05C0  2DC2               	goto	l2747
  5699  05C1                     u3300:	
  5700  05C1  2DE6               	goto	l107
  5701  05C2                     l2747:	
  5702  05C2  3001               	movlw	1
  5703  05C3  00A0               	movwf	??_LCD_sendCommand
  5704  05C4  3000               	movlw	0
  5705  05C5  00A1               	movwf	??_LCD_sendCommand+1
  5706  05C6  3000               	movlw	0
  5707  05C7  00A2               	movwf	??_LCD_sendCommand+2
  5708  05C8  3000               	movlw	0
  5709  05C9  00A3               	movwf	??_LCD_sendCommand+3
  5710  05CA  0820               	movf	??_LCD_sendCommand,w
  5711  05CB  02D9               	subwf	_counter,f
  5712  05CC  0821               	movf	??_LCD_sendCommand+1,w
  5713  05CD  1C03               	skipc
  5714  05CE  0F21               	incfsz	??_LCD_sendCommand+1,w
  5715  05CF  2DD1               	goto	u3315
  5716  05D0  2DD2               	goto	u3316
  5717  05D1                     u3315:	
  5718  05D1  02DA               	subwf	_counter+1,f
  5719  05D2                     u3316:	
  5720  05D2  0822               	movf	??_LCD_sendCommand+2,w
  5721  05D3  1C03               	skipc
  5722  05D4  0F22               	incfsz	??_LCD_sendCommand+2,w
  5723  05D5  2DD7               	goto	u3317
  5724  05D6  2DD8               	goto	u3318
  5725  05D7                     u3317:	
  5726  05D7  02DB               	subwf	_counter+2,f
  5727  05D8                     u3318:	
  5728  05D8  0823               	movf	??_LCD_sendCommand+3,w
  5729  05D9  1C03               	skipc
  5730  05DA  0F23               	incfsz	??_LCD_sendCommand+3,w
  5731  05DB  2DDD               	goto	u3319
  5732  05DC  2DDE               	goto	u3310
  5733  05DD                     u3319:	
  5734  05DD  02DC               	subwf	_counter+3,f
  5735  05DE                     u3310:	
  5736  05DE  085C               	movf	_counter+3,w
  5737  05DF  045B               	iorwf	_counter+2,w
  5738  05E0  045A               	iorwf	_counter+1,w
  5739  05E1  0459               	iorwf	_counter,w
  5740  05E2  1D03               	skipz
  5741  05E3  2DE5               	goto	u3321
  5742  05E4  2DE6               	goto	u3320
  5743  05E5                     u3321:	
  5744  05E5  2DC2               	goto	l2747
  5745  05E6                     u3320:	
  5746  05E6                     l107:	
  5747  05E6  0008               	return
  5748  05E7                     __end_of_LCD_sendCommand:	
  5749                           
  5750                           	psect	text33
  5751  0BD5                     __ptext33:	
  5752 ;; *************** function _LCD_displayString *****************
  5753 ;; Defined at:
  5754 ;;		line 161 in file "lcd.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  str             2    5[BANK0 ] PTR const unsigned char 
  5757 ;;		 -> STR_17(17), STR_16(20), STR_15(14), STR_14(25), 
  5758 ;;		 -> STR_13(15), STR_12(21), STR_11(14), STR_10(22), 
  5759 ;;		 -> STR_9(15), STR_8(21), STR_7(6), STR_6(18), 
  5760 ;;		 -> STR_5(6), LCD_intgerToString@buff(16), STR_4(16), STR_3(22), 
  5761 ;;		 -> STR_2(18), STR_1(12), 
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;  i               1    8[BANK0 ] unsigned char 
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  1    wreg      void 
  5766 ;; Registers used:
  5767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5773 ;;      Params:         0       2       0       0       0
  5774 ;;      Locals:         0       1       0       0       0
  5775 ;;      Temps:          0       1       0       0       0
  5776 ;;      Totals:         0       4       0       0       0
  5777 ;;Total ram usage:        4 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; Hardware stack levels required when called:    3
  5780 ;; This function calls:
  5781 ;;		_LCD_displayCharacter
  5782 ;; This function is called by:
  5783 ;;		_LCD_displayStringOnRowColum
  5784 ;;		_LCD_intgerToString
  5785 ;;		_scan_minutes
  5786 ;;		_door_is_close
  5787 ;;		_door_is_open
  5788 ;;		_foodIsInMicro
  5789 ;;		_foodOutMicro
  5790 ;;		_heat_on
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           
  5795                           ;psect for function _LCD_displayString
  5796  0BD5                     _LCD_displayString:	
  5797  0BD5                     l2749:	
  5798                           ;incstack = 0
  5799                           ; Regs used in _LCD_displayString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5800                           
  5801                           
  5802                           ;lcd.c: 161: void LCD_displayString(const unint8 *str);lcd.c: 162: {;lcd.c: 163:  unint8
      +                           i=0;
  5803  0BD5  1283               	bcf	3,5	;RP0=0, select bank0
  5804  0BD6  1303               	bcf	3,6	;RP1=0, select bank0
  5805  0BD7  01A8               	clrf	LCD_displayString@i
  5806                           
  5807                           ;lcd.c: 165:  while(str[i] !='\0')
  5808  0BD8  2BF0               	goto	l2755
  5809  0BD9                     l2751:	
  5810                           
  5811                           ;lcd.c: 166:  {;lcd.c: 168:   LCD_displayCharacter(str[i]);
  5812  0BD9  0828               	movf	LCD_displayString@i,w
  5813  0BDA  0725               	addwf	LCD_displayString@str,w
  5814  0BDB  0084               	movwf	4
  5815  0BDC  0826               	movf	LCD_displayString@str+1,w
  5816  0BDD  1803               	skipnc
  5817  0BDE  0A26               	incf	LCD_displayString@str+1,w
  5818  0BDF  00FF               	movwf	btemp+1
  5819  0BE0  120A  118A  2700  120A  158A  	fcall	stringtab
  5820  0BE5  120A  118A  25E7  120A  158A  	fcall	_LCD_displayCharacter
  5821  0BEA                     l2753:	
  5822                           
  5823                           ;lcd.c: 170:   i++;
  5824  0BEA  3001               	movlw	1
  5825  0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  5826  0BEC  1303               	bcf	3,6	;RP1=0, select bank0
  5827  0BED  00A7               	movwf	??_LCD_displayString
  5828  0BEE  0827               	movf	??_LCD_displayString,w
  5829  0BEF  07A8               	addwf	LCD_displayString@i,f
  5830  0BF0                     l2755:	
  5831                           
  5832                           ;lcd.c: 165:  while(str[i] !='\0')
  5833  0BF0  0828               	movf	LCD_displayString@i,w
  5834  0BF1  0725               	addwf	LCD_displayString@str,w
  5835  0BF2  0084               	movwf	4
  5836  0BF3  0826               	movf	LCD_displayString@str+1,w
  5837  0BF4  1803               	skipnc
  5838  0BF5  0A26               	incf	LCD_displayString@str+1,w
  5839  0BF6  00FF               	movwf	btemp+1
  5840  0BF7  120A  118A  2700  120A  158A  	fcall	stringtab
  5841  0BFC  3A00               	xorlw	0
  5842  0BFD  1D03               	skipz
  5843  0BFE  2C00               	goto	u3331
  5844  0BFF  2C01               	goto	u3330
  5845  0C00                     u3331:	
  5846  0C00  2BD9               	goto	l2751
  5847  0C01                     u3330:	
  5848  0C01                     l124:	
  5849  0C01  0008               	return
  5850  0C02                     __end_of_LCD_displayString:	
  5851                           
  5852                           	psect	text34
  5853  05E7                     __ptext34:	
  5854 ;; *************** function _LCD_displayCharacter *****************
  5855 ;; Defined at:
  5856 ;;		line 104 in file "lcd.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  ch              1    wreg     unsigned char 
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;  ch              1    4[BANK0 ] unsigned char 
  5861 ;; Return value:  Size  Location     Type
  5862 ;;                  1    wreg      void 
  5863 ;; Registers used:
  5864 ;;		wreg, status,2, status,0
  5865 ;; Tracked objects:
  5866 ;;		On entry : 0/0
  5867 ;;		On exit  : 0/0
  5868 ;;		Unchanged: 0/0
  5869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5870 ;;      Params:         0       0       0       0       0
  5871 ;;      Locals:         0       1       0       0       0
  5872 ;;      Temps:          0       4       0       0       0
  5873 ;;      Totals:         0       5       0       0       0
  5874 ;;Total ram usage:        5 bytes
  5875 ;; Hardware stack levels used:    1
  5876 ;; Hardware stack levels required when called:    2
  5877 ;; This function calls:
  5878 ;;		Nothing
  5879 ;; This function is called by:
  5880 ;;		_LCD_displayString
  5881 ;;		_show_remaining_time
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           
  5886                           ;psect for function _LCD_displayCharacter
  5887  05E7                     _LCD_displayCharacter:	
  5888                           
  5889                           ;incstack = 0
  5890                           ; Regs used in _LCD_displayCharacter: [wreg+status,2+status,0]
  5891                           ;LCD_displayCharacter@ch stored from wreg
  5892  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  5893  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  5894  05E9  00A4               	movwf	LCD_displayCharacter@ch
  5895  05EA                     l2577:	
  5896                           
  5897                           ;lcd.c: 104: void LCD_displayCharacter(unint8 ch);lcd.c: 105: {;lcd.c: 106:  ( *((volati
      +                          le unint8*)PORT_E ) |=(unint8)1 << 2);
  5898  05EA  1509               	bsf	9,2	;volatile
  5899  05EB                     l2579:	
  5900                           
  5901                           ;lcd.c: 108:     for(counter = ((10000000UL / 1000000) * 500 /30 ) ; counter > 0 ; count
      +                          er--){};
  5902  05EB  3000               	movlw	0
  5903  05EC  00DC               	movwf	_counter+3
  5904  05ED  3000               	movlw	0
  5905  05EE  00DB               	movwf	_counter+2
  5906  05EF  3000               	movlw	0
  5907  05F0  00DA               	movwf	_counter+1
  5908  05F1  30A6               	movlw	166
  5909  05F2  00D9               	movwf	_counter
  5910  05F3  085C               	movf	_counter+3,w
  5911  05F4  045B               	iorwf	_counter+2,w
  5912  05F5  045A               	iorwf	_counter+1,w
  5913  05F6  0459               	iorwf	_counter,w
  5914  05F7  1D03               	skipz
  5915  05F8  2DFA               	goto	u2861
  5916  05F9  2DFB               	goto	u2860
  5917  05FA                     u2861:	
  5918  05FA  2DFC               	goto	l2583
  5919  05FB                     u2860:	
  5920  05FB  2E20               	goto	l111
  5921  05FC                     l2583:	
  5922  05FC  3001               	movlw	1
  5923  05FD  00A0               	movwf	??_LCD_displayCharacter
  5924  05FE  3000               	movlw	0
  5925  05FF  00A1               	movwf	??_LCD_displayCharacter+1
  5926  0600  3000               	movlw	0
  5927  0601  00A2               	movwf	??_LCD_displayCharacter+2
  5928  0602  3000               	movlw	0
  5929  0603  00A3               	movwf	??_LCD_displayCharacter+3
  5930  0604  0820               	movf	??_LCD_displayCharacter,w
  5931  0605  02D9               	subwf	_counter,f
  5932  0606  0821               	movf	??_LCD_displayCharacter+1,w
  5933  0607  1C03               	skipc
  5934  0608  0F21               	incfsz	??_LCD_displayCharacter+1,w
  5935  0609  2E0B               	goto	u2875
  5936  060A  2E0C               	goto	u2876
  5937  060B                     u2875:	
  5938  060B  02DA               	subwf	_counter+1,f
  5939  060C                     u2876:	
  5940  060C  0822               	movf	??_LCD_displayCharacter+2,w
  5941  060D  1C03               	skipc
  5942  060E  0F22               	incfsz	??_LCD_displayCharacter+2,w
  5943  060F  2E11               	goto	u2877
  5944  0610  2E12               	goto	u2878
  5945  0611                     u2877:	
  5946  0611  02DB               	subwf	_counter+2,f
  5947  0612                     u2878:	
  5948  0612  0823               	movf	??_LCD_displayCharacter+3,w
  5949  0613  1C03               	skipc
  5950  0614  0F23               	incfsz	??_LCD_displayCharacter+3,w
  5951  0615  2E17               	goto	u2879
  5952  0616  2E18               	goto	u2870
  5953  0617                     u2879:	
  5954  0617  02DC               	subwf	_counter+3,f
  5955  0618                     u2870:	
  5956  0618  085C               	movf	_counter+3,w
  5957  0619  045B               	iorwf	_counter+2,w
  5958  061A  045A               	iorwf	_counter+1,w
  5959  061B  0459               	iorwf	_counter,w
  5960  061C  1D03               	skipz
  5961  061D  2E1F               	goto	u2881
  5962  061E  2E20               	goto	u2880
  5963  061F                     u2881:	
  5964  061F  2DFC               	goto	l2583
  5965  0620                     u2880:	
  5966  0620                     l111:	
  5967                           
  5968                           ;lcd.c: 110:  ( *((volatile unint8*)PORT_E ) |=(unint8)1 << 1);
  5969  0620  1489               	bsf	9,1	;volatile
  5970  0621                     l2585:	
  5971                           
  5972                           ;lcd.c: 112:  for(counter = ((10000000UL / 1000000) * 500 /30 ) ; counter > 0 ; counter-
      +                          -){};
  5973  0621  3000               	movlw	0
  5974  0622  00DC               	movwf	_counter+3
  5975  0623  3000               	movlw	0
  5976  0624  00DB               	movwf	_counter+2
  5977  0625  3000               	movlw	0
  5978  0626  00DA               	movwf	_counter+1
  5979  0627  30A6               	movlw	166
  5980  0628  00D9               	movwf	_counter
  5981  0629  085C               	movf	_counter+3,w
  5982  062A  045B               	iorwf	_counter+2,w
  5983  062B  045A               	iorwf	_counter+1,w
  5984  062C  0459               	iorwf	_counter,w
  5985  062D  1D03               	skipz
  5986  062E  2E30               	goto	u2891
  5987  062F  2E31               	goto	u2890
  5988  0630                     u2891:	
  5989  0630  2E32               	goto	l2589
  5990  0631                     u2890:	
  5991  0631  2E56               	goto	l2591
  5992  0632                     l2589:	
  5993  0632  3001               	movlw	1
  5994  0633  00A0               	movwf	??_LCD_displayCharacter
  5995  0634  3000               	movlw	0
  5996  0635  00A1               	movwf	??_LCD_displayCharacter+1
  5997  0636  3000               	movlw	0
  5998  0637  00A2               	movwf	??_LCD_displayCharacter+2
  5999  0638  3000               	movlw	0
  6000  0639  00A3               	movwf	??_LCD_displayCharacter+3
  6001  063A  0820               	movf	??_LCD_displayCharacter,w
  6002  063B  02D9               	subwf	_counter,f
  6003  063C  0821               	movf	??_LCD_displayCharacter+1,w
  6004  063D  1C03               	skipc
  6005  063E  0F21               	incfsz	??_LCD_displayCharacter+1,w
  6006  063F  2E41               	goto	u2905
  6007  0640  2E42               	goto	u2906
  6008  0641                     u2905:	
  6009  0641  02DA               	subwf	_counter+1,f
  6010  0642                     u2906:	
  6011  0642  0822               	movf	??_LCD_displayCharacter+2,w
  6012  0643  1C03               	skipc
  6013  0644  0F22               	incfsz	??_LCD_displayCharacter+2,w
  6014  0645  2E47               	goto	u2907
  6015  0646  2E48               	goto	u2908
  6016  0647                     u2907:	
  6017  0647  02DB               	subwf	_counter+2,f
  6018  0648                     u2908:	
  6019  0648  0823               	movf	??_LCD_displayCharacter+3,w
  6020  0649  1C03               	skipc
  6021  064A  0F23               	incfsz	??_LCD_displayCharacter+3,w
  6022  064B  2E4D               	goto	u2909
  6023  064C  2E4E               	goto	u2900
  6024  064D                     u2909:	
  6025  064D  02DC               	subwf	_counter+3,f
  6026  064E                     u2900:	
  6027  064E  085C               	movf	_counter+3,w
  6028  064F  045B               	iorwf	_counter+2,w
  6029  0650  045A               	iorwf	_counter+1,w
  6030  0651  0459               	iorwf	_counter,w
  6031  0652  1D03               	skipz
  6032  0653  2E55               	goto	u2911
  6033  0654  2E56               	goto	u2910
  6034  0655                     u2911:	
  6035  0655  2E32               	goto	l2589
  6036  0656                     u2910:	
  6037  0656                     l2591:	
  6038                           
  6039                           ;lcd.c: 150:       *((volatile unint8*) PORT_D ) = ch;
  6040  0656  0824               	movf	LCD_displayCharacter@ch,w
  6041  0657  00A0               	movwf	??_LCD_displayCharacter
  6042  0658  0820               	movf	??_LCD_displayCharacter,w
  6043  0659  0088               	movwf	8	;volatile
  6044                           
  6045                           ;lcd.c: 152:       for(counter = ((10000000UL / 1000000) * 500 /30 ) ; counter > 0 ; cou
      +                          nter--){};
  6046  065A  3000               	movlw	0
  6047  065B  00DC               	movwf	_counter+3
  6048  065C  3000               	movlw	0
  6049  065D  00DB               	movwf	_counter+2
  6050  065E  3000               	movlw	0
  6051  065F  00DA               	movwf	_counter+1
  6052  0660  30A6               	movlw	166
  6053  0661  00D9               	movwf	_counter
  6054  0662  085C               	movf	_counter+3,w
  6055  0663  045B               	iorwf	_counter+2,w
  6056  0664  045A               	iorwf	_counter+1,w
  6057  0665  0459               	iorwf	_counter,w
  6058  0666  1D03               	skipz
  6059  0667  2E69               	goto	u2921
  6060  0668  2E6A               	goto	u2920
  6061  0669                     u2921:	
  6062  0669  2E6B               	goto	l2595
  6063  066A                     u2920:	
  6064  066A  2E8F               	goto	l2597
  6065  066B                     l2595:	
  6066  066B  3001               	movlw	1
  6067  066C  00A0               	movwf	??_LCD_displayCharacter
  6068  066D  3000               	movlw	0
  6069  066E  00A1               	movwf	??_LCD_displayCharacter+1
  6070  066F  3000               	movlw	0
  6071  0670  00A2               	movwf	??_LCD_displayCharacter+2
  6072  0671  3000               	movlw	0
  6073  0672  00A3               	movwf	??_LCD_displayCharacter+3
  6074  0673  0820               	movf	??_LCD_displayCharacter,w
  6075  0674  02D9               	subwf	_counter,f
  6076  0675  0821               	movf	??_LCD_displayCharacter+1,w
  6077  0676  1C03               	skipc
  6078  0677  0F21               	incfsz	??_LCD_displayCharacter+1,w
  6079  0678  2E7A               	goto	u2935
  6080  0679  2E7B               	goto	u2936
  6081  067A                     u2935:	
  6082  067A  02DA               	subwf	_counter+1,f
  6083  067B                     u2936:	
  6084  067B  0822               	movf	??_LCD_displayCharacter+2,w
  6085  067C  1C03               	skipc
  6086  067D  0F22               	incfsz	??_LCD_displayCharacter+2,w
  6087  067E  2E80               	goto	u2937
  6088  067F  2E81               	goto	u2938
  6089  0680                     u2937:	
  6090  0680  02DB               	subwf	_counter+2,f
  6091  0681                     u2938:	
  6092  0681  0823               	movf	??_LCD_displayCharacter+3,w
  6093  0682  1C03               	skipc
  6094  0683  0F23               	incfsz	??_LCD_displayCharacter+3,w
  6095  0684  2E86               	goto	u2939
  6096  0685  2E87               	goto	u2930
  6097  0686                     u2939:	
  6098  0686  02DC               	subwf	_counter+3,f
  6099  0687                     u2930:	
  6100  0687  085C               	movf	_counter+3,w
  6101  0688  045B               	iorwf	_counter+2,w
  6102  0689  045A               	iorwf	_counter+1,w
  6103  068A  0459               	iorwf	_counter,w
  6104  068B  1D03               	skipz
  6105  068C  2E8E               	goto	u2941
  6106  068D  2E8F               	goto	u2940
  6107  068E                     u2941:	
  6108  068E  2E6B               	goto	l2595
  6109  068F                     u2940:	
  6110  068F                     l2597:	
  6111                           
  6112                           ;lcd.c: 154:       (*((volatile unint8*)PORT_E ) &=~((unint8)1 << 1));
  6113  068F  30FD               	movlw	253
  6114  0690  00A0               	movwf	??_LCD_displayCharacter
  6115  0691  0820               	movf	??_LCD_displayCharacter,w
  6116  0692  0589               	andwf	9,f	;volatile
  6117  0693                     l2599:	
  6118                           
  6119                           ;lcd.c: 156:       for(counter = ((10000000UL / 1000000) * 500 /30 ) ; counter > 0 ; cou
      +                          nter--){};
  6120  0693  3000               	movlw	0
  6121  0694  00DC               	movwf	_counter+3
  6122  0695  3000               	movlw	0
  6123  0696  00DB               	movwf	_counter+2
  6124  0697  3000               	movlw	0
  6125  0698  00DA               	movwf	_counter+1
  6126  0699  30A6               	movlw	166
  6127  069A  00D9               	movwf	_counter
  6128  069B                     l2601:	
  6129  069B  085C               	movf	_counter+3,w
  6130  069C  045B               	iorwf	_counter+2,w
  6131  069D  045A               	iorwf	_counter+1,w
  6132  069E  0459               	iorwf	_counter,w
  6133  069F  1D03               	skipz
  6134  06A0  2EA2               	goto	u2951
  6135  06A1  2EA3               	goto	u2950
  6136  06A2                     u2951:	
  6137  06A2  2EA4               	goto	l2605
  6138  06A3                     u2950:	
  6139  06A3  2EC8               	goto	l118
  6140  06A4                     l2605:	
  6141  06A4  3001               	movlw	1
  6142  06A5  00A0               	movwf	??_LCD_displayCharacter
  6143  06A6  3000               	movlw	0
  6144  06A7  00A1               	movwf	??_LCD_displayCharacter+1
  6145  06A8  3000               	movlw	0
  6146  06A9  00A2               	movwf	??_LCD_displayCharacter+2
  6147  06AA  3000               	movlw	0
  6148  06AB  00A3               	movwf	??_LCD_displayCharacter+3
  6149  06AC  0820               	movf	??_LCD_displayCharacter,w
  6150  06AD  02D9               	subwf	_counter,f
  6151  06AE  0821               	movf	??_LCD_displayCharacter+1,w
  6152  06AF  1C03               	skipc
  6153  06B0  0F21               	incfsz	??_LCD_displayCharacter+1,w
  6154  06B1  2EB3               	goto	u2965
  6155  06B2  2EB4               	goto	u2966
  6156  06B3                     u2965:	
  6157  06B3  02DA               	subwf	_counter+1,f
  6158  06B4                     u2966:	
  6159  06B4  0822               	movf	??_LCD_displayCharacter+2,w
  6160  06B5  1C03               	skipc
  6161  06B6  0F22               	incfsz	??_LCD_displayCharacter+2,w
  6162  06B7  2EB9               	goto	u2967
  6163  06B8  2EBA               	goto	u2968
  6164  06B9                     u2967:	
  6165  06B9  02DB               	subwf	_counter+2,f
  6166  06BA                     u2968:	
  6167  06BA  0823               	movf	??_LCD_displayCharacter+3,w
  6168  06BB  1C03               	skipc
  6169  06BC  0F23               	incfsz	??_LCD_displayCharacter+3,w
  6170  06BD  2EBF               	goto	u2969
  6171  06BE  2EC0               	goto	u2960
  6172  06BF                     u2969:	
  6173  06BF  02DC               	subwf	_counter+3,f
  6174  06C0                     u2960:	
  6175  06C0  085C               	movf	_counter+3,w
  6176  06C1  045B               	iorwf	_counter+2,w
  6177  06C2  045A               	iorwf	_counter+1,w
  6178  06C3  0459               	iorwf	_counter,w
  6179  06C4  1D03               	skipz
  6180  06C5  2EC7               	goto	u2971
  6181  06C6  2EC8               	goto	u2970
  6182  06C7                     u2971:	
  6183  06C7  2EA4               	goto	l2605
  6184  06C8                     u2970:	
  6185  06C8                     l118:	
  6186  06C8  0008               	return
  6187  06C9                     __end_of_LCD_displayCharacter:	
  6188                           
  6189                           	psect	text35
  6190  0ACD                     __ptext35:	
  6191 ;; *************** function _FAN_ON *****************
  6192 ;; Defined at:
  6193 ;;		line 322 in file "microwave.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;		None
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;		None
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  1    wreg      void 
  6200 ;; Registers used:
  6201 ;;		None
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6207 ;;      Params:         0       0       0       0       0
  6208 ;;      Locals:         0       0       0       0       0
  6209 ;;      Temps:          0       0       0       0       0
  6210 ;;      Totals:         0       0       0       0       0
  6211 ;;Total ram usage:        0 bytes
  6212 ;; Hardware stack levels used:    1
  6213 ;; Hardware stack levels required when called:    2
  6214 ;; This function calls:
  6215 ;;		Nothing
  6216 ;; This function is called by:
  6217 ;;		_main
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           
  6221                           
  6222                           ;psect for function _FAN_ON
  6223  0ACD                     _FAN_ON:	
  6224  0ACD                     l2347:	
  6225                           ;incstack = 0
  6226                           ; Regs used in _FAN_ON: []
  6227                           
  6228                           
  6229                           ;microwave.c: 324:    *((volatile unint8*)PORT_C ) |=(1 << 2 );
  6230  0ACD  1283               	bcf	3,5	;RP0=0, select bank0
  6231  0ACE  1303               	bcf	3,6	;RP1=0, select bank0
  6232  0ACF  1507               	bsf	7,2	;volatile
  6233  0AD0                     l422:	
  6234  0AD0  0008               	return
  6235  0AD1                     __end_of_FAN_ON:	
  6236                           
  6237                           	psect	text36
  6238  0AD7                     __ptext36:	
  6239 ;; *************** function _FAN_OFF *****************
  6240 ;; Defined at:
  6241 ;;		line 328 in file "microwave.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;		None
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;		None
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  1    wreg      void 
  6248 ;; Registers used:
  6249 ;;		wreg, status,2, status,0
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6255 ;;      Params:         0       0       0       0       0
  6256 ;;      Locals:         0       0       0       0       0
  6257 ;;      Temps:          0       1       0       0       0
  6258 ;;      Totals:         0       1       0       0       0
  6259 ;;Total ram usage:        1 bytes
  6260 ;; Hardware stack levels used:    1
  6261 ;; Hardware stack levels required when called:    2
  6262 ;; This function calls:
  6263 ;;		Nothing
  6264 ;; This function is called by:
  6265 ;;		_main
  6266 ;; This function uses a non-reentrant model
  6267 ;;
  6268                           
  6269                           
  6270                           ;psect for function _FAN_OFF
  6271  0AD7                     _FAN_OFF:	
  6272  0AD7                     l3153:	
  6273                           ;incstack = 0
  6274                           ; Regs used in _FAN_OFF: [wreg+status,2+status,0]
  6275                           
  6276                           
  6277                           ;microwave.c: 330:    *((volatile unint8*)PORT_C) &=~(1 << 2 );
  6278  0AD7  30FB               	movlw	251
  6279  0AD8  1283               	bcf	3,5	;RP0=0, select bank0
  6280  0AD9  1303               	bcf	3,6	;RP1=0, select bank0
  6281  0ADA  00A0               	movwf	??_FAN_OFF
  6282  0ADB  0820               	movf	??_FAN_OFF,w
  6283  0ADC  0587               	andwf	7,f	;volatile
  6284  0ADD                     l425:	
  6285  0ADD  0008               	return
  6286  0ADE                     __end_of_FAN_OFF:	
  6287                           
  6288                           	psect	text37
  6289  0C02                     __ptext37:	
  6290 ;; *************** function _ISR *****************
  6291 ;; Defined at:
  6292 ;;		line 37 in file "interrupt.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;		None
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;		None
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  1    wreg      void 
  6299 ;; Registers used:
  6300 ;;		wreg, status,2, status,0, pclath, cstack
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6306 ;;      Params:         0       0       0       0       0
  6307 ;;      Locals:         0       0       0       0       0
  6308 ;;      Temps:          4       0       0       0       0
  6309 ;;      Totals:         4       0       0       0       0
  6310 ;;Total ram usage:        4 bytes
  6311 ;; Hardware stack levels used:    1
  6312 ;; Hardware stack levels required when called:    1
  6313 ;; This function calls:
  6314 ;;		Absolute function
  6315 ;;		_Call_Back_OVFI
  6316 ;; This function is called by:
  6317 ;;		Interrupt level 1
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           
  6322                           ;psect for function _ISR
  6323  0C02                     _ISR:	
  6324  0C02                     i1l2527:	
  6325                           
  6326                           ;interrupt.c: 40:     if((*((volatile unint8*)0X0B) & (1 << 2)))
  6327  0C02  1D0B               	btfss	11,2	;volatile
  6328  0C03  2C05               	goto	u280_21
  6329  0C04  2C06               	goto	u280_20
  6330  0C05                     u280_21:	
  6331  0C05  2C15               	goto	i1l2535
  6332  0C06                     u280_20:	
  6333  0C06                     i1l2529:	
  6334                           
  6335                           ;interrupt.c: 41:     {;interrupt.c: 42:           if(TIMER0_CalL_Back_ptr != (void*)0)
  6336  0C06  0878               	movf	_TIMER0_CalL_Back_ptr,w
  6337  0C07  1903               	btfsc	3,2
  6338  0C08  2C0A               	goto	u281_21
  6339  0C09  2C0B               	goto	u281_20
  6340  0C0A                     u281_21:	
  6341  0C0A  2C15               	goto	i1l2535
  6342  0C0B                     u281_20:	
  6343  0C0B                     i1l2531:	
  6344                           
  6345                           ;interrupt.c: 43:             {;interrupt.c: 46:               TIMER0_CalL_Back_ptr();
  6346  0C0B  0878               	movf	_TIMER0_CalL_Back_ptr,w
  6347  0C0C  120A  118A  2035  120A  158A  	fcall	i1fptable
  6348  0C11                     i1l2533:	
  6349                           
  6350                           ;interrupt.c: 49:               *((volatile unint8*)0X0B) &=~(1 << 2);
  6351  0C11  30FB               	movlw	251
  6352  0C12  00F1               	movwf	??_ISR
  6353  0C13  0871               	movf	??_ISR,w
  6354  0C14  058B               	andwf	11,f	;volatile
  6355  0C15                     i1l2535:	
  6356                           
  6357                           ;interrupt.c: 56:     if((*((volatile unint8*)0X0C) & (1 << 2)))
  6358  0C15  1283               	bcf	3,5	;RP0=0, select bank0
  6359  0C16  1303               	bcf	3,6	;RP1=0, select bank0
  6360  0C17  1D0C               	btfss	12,2	;volatile
  6361  0C18  2C1A               	goto	u282_21
  6362  0C19  2C1B               	goto	u282_20
  6363  0C1A                     u282_21:	
  6364  0C1A  2C24               	goto	i1l2541
  6365  0C1B                     u282_20:	
  6366  0C1B                     i1l2537:	
  6367                           
  6368                           ;interrupt.c: 59:         {;interrupt.c: 61:             CCP1_CalL_Back_ptr();
  6369  0C1B  0877               	movf	_CCP1_CalL_Back_ptr,w
  6370  0C1C  1903               	btfsc	3,2
  6371  0C1D  2C1F               	goto	u283_21
  6372  0C1E  2C20               	goto	u283_20
  6373  0C1F                     u283_21:	
  6374  0C1F  2C24               	goto	i1l2541
  6375  0C20                     u283_20:	
  6376  0C20                     i1l2539:	
  6377                           
  6378                           ;interrupt.c: 63:             *((volatile unint8*)0X0C) &=~(1 << 2);
  6379  0C20  30FB               	movlw	251
  6380  0C21  00F1               	movwf	??_ISR
  6381  0C22  0871               	movf	??_ISR,w
  6382  0C23  058C               	andwf	12,f	;volatile
  6383  0C24                     i1l2541:	
  6384                           
  6385                           ;interrupt.c: 69:     if((*((volatile unint8*)0X0D) & (1 << 0)))
  6386  0C24  1C0D               	btfss	13,0	;volatile
  6387  0C25  2C27               	goto	u284_21
  6388  0C26  2C28               	goto	u284_20
  6389  0C27                     u284_21:	
  6390  0C27  2C31               	goto	i1l272
  6391  0C28                     u284_20:	
  6392  0C28                     i1l2543:	
  6393                           
  6394                           ;interrupt.c: 72:         {;interrupt.c: 74:             CCP2_CalL_Back_ptr();
  6395  0C28  0876               	movf	_CCP2_CalL_Back_ptr,w
  6396  0C29  1903               	btfsc	3,2
  6397  0C2A  2C2C               	goto	u285_21
  6398  0C2B  2C2D               	goto	u285_20
  6399  0C2C                     u285_21:	
  6400  0C2C  2C31               	goto	i1l272
  6401  0C2D                     u285_20:	
  6402  0C2D                     i1l2545:	
  6403                           
  6404                           ;interrupt.c: 76:             *((volatile unint8*)0X0D) &=~(1 << 0);
  6405  0C2D  30FE               	movlw	254
  6406  0C2E  00F1               	movwf	??_ISR
  6407  0C2F  0871               	movf	??_ISR,w
  6408  0C30  058D               	andwf	13,f	;volatile
  6409  0C31                     i1l272:	
  6410  0C31  0874               	movf	??_ISR+3,w
  6411  0C32  00FF               	movwf	btemp+1
  6412  0C33  0873               	movf	??_ISR+2,w
  6413  0C34  008A               	movwf	10
  6414  0C35  0E72               	swapf	(??_ISR+1)^(0+4294967168),w
  6415  0C36  0083               	movwf	3
  6416  0C37  0EFE               	swapf	btemp,f
  6417  0C38  0E7E               	swapf	btemp,w
  6418  0C39  0009               	retfie
  6419  0C3A                     __end_of_ISR:	
  6420                           
  6421                           	psect	intentry
  6422  0004                     __pintentry:	
  6423                           ;incstack = 0
  6424                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  6425                           
  6426  0004                     interrupt_function:	
  6427  007E                     saved_w	set	btemp
  6428  0004  00FE               	movwf	btemp
  6429  0005  0E03               	swapf	3,w
  6430  0006  00F2               	movwf	??_ISR+1
  6431  0007  080A               	movf	10,w
  6432  0008  00F3               	movwf	??_ISR+2
  6433  0009  1283               	bcf	3,5	;RP0=0, select bank0
  6434  000A  1303               	bcf	3,6	;RP1=0, select bank0
  6435  000B  087F               	movf	btemp+1,w
  6436  000C  00F4               	movwf	??_ISR+3
  6437  000D  120A  158A  2C02   	ljmp	_ISR
  6438                           
  6439                           	psect	text38
  6440  0B61                     __ptext38:	
  6441 ;; *************** function _Call_Back_OVFI *****************
  6442 ;; Defined at:
  6443 ;;		line 11 in file "microwave.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;		None
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;		None
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  1    wreg      void 
  6450 ;; Registers used:
  6451 ;;		wreg, status,2, status,0
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6457 ;;      Params:         0       0       0       0       0
  6458 ;;      Locals:         0       0       0       0       0
  6459 ;;      Temps:          1       0       0       0       0
  6460 ;;      Totals:         1       0       0       0       0
  6461 ;;Total ram usage:        1 bytes
  6462 ;; Hardware stack levels used:    1
  6463 ;; This function calls:
  6464 ;;		Nothing
  6465 ;; This function is called by:
  6466 ;;		_microWave_init
  6467 ;;		_ISR
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           
  6472                           ;psect for function _Call_Back_OVFI
  6473  0B61                     _Call_Back_OVFI:	
  6474  0B61                     i1l2433:	
  6475                           ;incstack = 0
  6476                           ; Regs used in _Call_Back_OVFI: [wreg+status,2+status,0]
  6477                           
  6478                           
  6479                           ;microwave.c: 13:     count++;
  6480  0B61  3001               	movlw	1
  6481  0B62  00F0               	movwf	??_Call_Back_OVFI
  6482  0B63  0870               	movf	??_Call_Back_OVFI,w
  6483  0B64  07F5               	addwf	_count,f	;volatile
  6484                           
  6485                           ;microwave.c: 15:  if(count == 30)
  6486  0B65  301E               	movlw	30
  6487  0B66  0675               	xorwf	_count,w	;volatile
  6488  0B67  1D03               	btfss	3,2
  6489  0B68  2B6A               	goto	u263_21
  6490  0B69  2B6B               	goto	u263_20
  6491  0B6A                     u263_21:	
  6492  0B6A  2B86               	goto	i1l327
  6493  0B6B                     u263_20:	
  6494  0B6B                     i1l2435:	
  6495                           
  6496                           ;microwave.c: 16:  {;microwave.c: 18:         if(second == 0 && minutes !=0)
  6497  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  6498  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  6499  0B6D  0860               	movf	_second,w	;volatile
  6500  0B6E  1D03               	btfss	3,2
  6501  0B6F  2B71               	goto	u264_21
  6502  0B70  2B72               	goto	u264_20
  6503  0B71                     u264_21:	
  6504  0B71  2B83               	goto	i1l2441
  6505  0B72                     u264_20:	
  6506  0B72                     i1l2437:	
  6507  0B72  085D               	movf	_minutes,w	;volatile
  6508  0B73  045E               	iorwf	_minutes+1,w	;volatile
  6509  0B74  1903               	btfsc	3,2
  6510  0B75  2B77               	goto	u265_21
  6511  0B76  2B78               	goto	u265_20
  6512  0B77                     u265_21:	
  6513  0B77  2B83               	goto	i1l2441
  6514  0B78                     u265_20:	
  6515  0B78                     i1l2439:	
  6516                           
  6517                           ;microwave.c: 19:         {;microwave.c: 20:             minutes--; second=59;
  6518  0B78  3001               	movlw	1
  6519  0B79  02DD               	subwf	_minutes,f	;volatile
  6520  0B7A  3000               	movlw	0
  6521  0B7B  1C03               	skipc
  6522  0B7C  03DE               	decf	_minutes+1,f	;volatile
  6523  0B7D  02DE               	subwf	_minutes+1,f	;volatile
  6524  0B7E  303B               	movlw	59
  6525  0B7F  00F0               	movwf	??_Call_Back_OVFI
  6526  0B80  0870               	movf	??_Call_Back_OVFI,w
  6527  0B81  00E0               	movwf	_second	;volatile
  6528                           
  6529                           ;microwave.c: 21:         }
  6530  0B82  2B85               	goto	i1l2443
  6531  0B83                     i1l2441:	
  6532                           
  6533                           ;microwave.c: 23:         {;microwave.c: 24:             second--;
  6534  0B83  3001               	movlw	1
  6535  0B84  02E0               	subwf	_second,f	;volatile
  6536  0B85                     i1l2443:	
  6537                           
  6538                           ;microwave.c: 26:         count=0;
  6539  0B85  01F5               	clrf	_count	;volatile
  6540  0B86                     i1l327:	
  6541  0B86  0008               	return
  6542  0B87                     __end_of_Call_Back_OVFI:	
  6543  0002                     
  6544                           	psect	functab
  6545  0034                     __pfunctab:	
  6546  0034                     fptable:	
  6547  0034  2834               	goto	fptable	;no entries
  6548  0035                     __i1fptable:	
  6549  0035                     i1fptable:	
  6550  0035  00FF               	movwf	(btemp+1)& (0+127)
  6551  0036  3000               	movlw	high i1fptable
  6552  0037  008A               	movwf	10
  6553  0038  087F               	movf	(btemp+1)& (0+127),w
  6554  0039  0782               	addwf	2,f
  6555  003A                     i1fpbase:	
  6556  003A  283A               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
  6557  003B                     fp__Call_Back_OVFI:	
  6558  003B  120A  158A  2B61   	ljmp	_Call_Back_OVFI
  6559  003E                     __end_of__i1fptable:	
  6560  007E                     btemp	set	126	;btemp
  6561  007E                     wtemp0	set	126


Data Sizes:
    Strings     192
    Constant    12
    Data        2
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     52      67
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    TIMER0_init@data	PTR struct . size(1) Largest target is 2
		 -> microWave_init@data(BANK0[2]), 

    CCP2_CalL_Back_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    CCP1_CalL_Back_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    TIMER0_Call_Back@ptr	PTR FTN()void  size(1) Largest target is 1
		 -> Call_Back_OVFI(), 

    TIMER0_CalL_Back_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> Call_Back_OVFI(), Absolute function(), 

    LCD_displayStringOnRowColum@str	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_4(CODE[16]), STR_3(CODE[22]), STR_2(CODE[18]), STR_1(CODE[12]), 

    LCD_displayString@str	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_17(CODE[17]), STR_16(CODE[20]), STR_15(CODE[14]), STR_14(CODE[25]), 
		 -> STR_13(CODE[15]), STR_12(CODE[21]), STR_11(CODE[14]), STR_10(CODE[22]), 
		 -> STR_9(CODE[15]), STR_8(CODE[21]), STR_7(CODE[6]), STR_6(CODE[18]), 
		 -> STR_5(CODE[6]), LCD_intgerToString@buff(BANK0[16]), STR_4(CODE[16]), STR_3(CODE[22]), 
		 -> STR_2(CODE[18]), STR_1(CODE[12]), 

    itoa@buff	PTR unsigned char  size(1) Largest target is 16
		 -> LCD_intgerToString@buff(BANK0[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_Call_Back_OVFI

Critical Paths under _main in BANK0

    _main->_scan_minutes
    _stop_cal_time->_global_INT_disable
    _start_calc_time->_set_T0DR
    _show_remaining_time->_LCD_intgerToString
    _scan_minutes->_LCD_intgerToString
    _LCD_intgerToString->_itoa
    _itoa->___awdiv
    _LCD_clear_screen->_LCD_sendCommand
    _microWave_init->_LCD_init
    _heat_on->_LCD_goToRowColum
    _foodOutMicro->_LCD_goToRowColum
    _foodIsInMicro->_LCD_goToRowColum
    _door_is_open->_LCD_goToRowColum
    _door_is_close->_LCD_goToRowColum
    _LCD_init->_LCD_sendCommand
    _LCD_displayStringOnRowColum->_LCD_goToRowColum
    _LCD_goToRowColum->_LCD_sendCommand
    _LCD_displayString->_LCD_displayCharacter

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   38924
                                             48 BANK0      4     4      0
                            _FAN_OFF
                             _FAN_ON
                   _LCD_clear_screen
        _LCD_displayStringOnRowColum
                      _door_is_close
                       _door_is_open
                      _foodIsInMicro
                       _foodOutMicro
                           _heat_off
                            _heat_on
                     _microWave_init
                       _scan_minutes
                _show_remaining_time
                              _start
                      _start_LED_OFF
                       _start_LED_ON
                    _start_calc_time
                               _stop
                      _stop_cal_time
 ---------------------------------------------------------------------------------
 (1) _stop_cal_time                                        0     0      0       0
                 _global_INT_disable
 ---------------------------------------------------------------------------------
 (2) _global_INT_disable                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _stop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_calc_time                                      1     1      0      31
                                              2 BANK0      1     1      0
                  _global_INT_enable
                           _set_T0DR
 ---------------------------------------------------------------------------------
 (2) _global_INT_enable                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_LED_ON                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_LED_OFF                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _show_remaining_time                                  2     2      0    6703
                                             39 BANK0      2     2      0
               _LCD_displayCharacter
                   _LCD_goToRowColum
                           _LCD_init
                 _LCD_intgerToString
 ---------------------------------------------------------------------------------
 (1) _scan_minutes                                         9     9      0    8946
                                             39 BANK0      9     9      0
                   _LCD_clear_screen
                  _LCD_displayString
                   _LCD_goToRowColum
                           _LCD_init
                 _LCD_intgerToString
                             ___wmul
                        _key_pressed
 ---------------------------------------------------------------------------------
 (2) _key_pressed                                          4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4      36
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_intgerToString                                  19    17      2    4500
                                             20 BANK0     19    17      2
                  _LCD_displayString
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                11     6      5    2236
                                              9 BANK0     11     6      5
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     613
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     805
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCD_clear_screen                                     0     0      0      31
                    _LCD_sendCommand
 ---------------------------------------------------------------------------------
 (1) _microWave_init                                       3     3      0     333
                                              6 BANK0      3     3      0
                           _LCD_init
                   _TIMER0_Call_Back
                        _TIMER0_init
                        _keypad_init
                           _set_T0DR
 ---------------------------------------------------------------------------------
 (2) _set_T0DR                                             2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _keypad_init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TIMER0_init                                          3     3      0     191
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _TIMER0_Call_Back                                     2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _heat_on                                              0     0      0    3683
                  _LCD_displayString
                   _LCD_goToRowColum
                           _LCD_init
 ---------------------------------------------------------------------------------
 (1) _heat_off                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _foodOutMicro                                         1     1      0    3683
                                             10 BANK0      1     1      0
                  _LCD_displayString
                   _LCD_goToRowColum
                           _LCD_init
 ---------------------------------------------------------------------------------
 (1) _foodIsInMicro                                        1     1      0    3683
                                             10 BANK0      1     1      0
                  _LCD_displayString
                   _LCD_goToRowColum
                           _LCD_init
 ---------------------------------------------------------------------------------
 (1) _door_is_open                                         1     1      0    3683
                                             10 BANK0      1     1      0
                  _LCD_displayString
                   _LCD_goToRowColum
                           _LCD_init
 ---------------------------------------------------------------------------------
 (1) _door_is_close                                        1     1      0    3683
                                             10 BANK0      1     1      0
                  _LCD_displayString
                   _LCD_goToRowColum
                           _LCD_init
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             1     1      0      31
                                              5 BANK0      1     1      0
                    _LCD_sendCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_displayStringOnRowColum                          4     2      2    4465
                                             10 BANK0      4     2      2
                  _LCD_displayString
                   _LCD_goToRowColum
 ---------------------------------------------------------------------------------
 (2) _LCD_goToRowColum                                     5     4      1    2141
                                              5 BANK0      5     4      1
                    _LCD_sendCommand
 ---------------------------------------------------------------------------------
 (3) _LCD_sendCommand                                      5     5      0      31
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _LCD_displayString                                    4     2      2    1511
                                              5 BANK0      4     2      2
               _LCD_displayCharacter
 ---------------------------------------------------------------------------------
 (4) _LCD_displayCharacter                                 5     5      0      31
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _FAN_ON                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FAN_OFF                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              1 COMMON     4     4      0
                   Absolute function *
                     _Call_Back_OVFI *
 ---------------------------------------------------------------------------------
 (6) _Call_Back_OVFI                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FAN_OFF
   _FAN_ON
   _LCD_clear_screen
     _LCD_sendCommand
   _LCD_displayStringOnRowColum
     _LCD_displayString
       _LCD_displayCharacter
     _LCD_goToRowColum
       _LCD_sendCommand
   _door_is_close
     _LCD_displayString
       _LCD_displayCharacter
     _LCD_goToRowColum
       _LCD_sendCommand
     _LCD_init
       _LCD_sendCommand
   _door_is_open
     _LCD_displayString
       _LCD_displayCharacter
     _LCD_goToRowColum
       _LCD_sendCommand
     _LCD_init
       _LCD_sendCommand
   _foodIsInMicro
     _LCD_displayString
       _LCD_displayCharacter
     _LCD_goToRowColum
       _LCD_sendCommand
     _LCD_init
       _LCD_sendCommand
   _foodOutMicro
     _LCD_displayString
       _LCD_displayCharacter
     _LCD_goToRowColum
       _LCD_sendCommand
     _LCD_init
       _LCD_sendCommand
   _heat_off
   _heat_on
     _LCD_displayString
       _LCD_displayCharacter
     _LCD_goToRowColum
       _LCD_sendCommand
     _LCD_init
       _LCD_sendCommand
   _microWave_init
     _LCD_init
       _LCD_sendCommand
     _TIMER0_Call_Back
     _TIMER0_init
     _keypad_init
     _set_T0DR
   _scan_minutes
     _LCD_clear_screen
       _LCD_sendCommand
     _LCD_displayString
       _LCD_displayCharacter
     _LCD_goToRowColum
       _LCD_sendCommand
     _LCD_init
       _LCD_sendCommand
     _LCD_intgerToString
       _LCD_displayString
         _LCD_displayCharacter
       _itoa
         ___awdiv
         ___awmod
     ___wmul
     _key_pressed
   _show_remaining_time
     _LCD_displayCharacter
     _LCD_goToRowColum
       _LCD_sendCommand
     _LCD_init
       _LCD_sendCommand
     _LCD_intgerToString
       _LCD_displayString
         _LCD_displayCharacter
       _itoa
         ___awdiv
         ___awmod
   _start
   _start_LED_OFF
   _start_LED_ON
   _start_calc_time
     _global_INT_enable
     _set_T0DR
   _stop
   _stop_cal_time
     _global_INT_disable

 _ISR (ROOT)
   Absolute function(Fake) *
   _Call_Back_OVFI *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     34      43       5       83.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4C      12        0.0%
ABS                  0      0      4C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 05 17:49:02 2020

                    ??_microWave_init 0026                                     pc 0002  
                         __CFG_CP$OFF 0000               LCD_goToRowColum@Address 0029  
                                  l93 0F65                                    l96 0B45  
            __end_of_LCD_clear_screen 0AEC                          ___awdiv@sign 0026  
                                  fsr 0004                   ___wmul@multiplicand 0022  
                        _start_LED_ON 07FB                                   l100 053E  
                                 l111 0620                                   l201 0183  
                                 l210 01C2                                   l107 05E6  
                                 l131 0BAD                                   l124 0C01  
                                 l140 07FA                                   l213 01DE  
                                 l205 0188                                   l118 06C8  
                                 l134 0B60                                   l214 01D2  
                                 l223 0223                                   l232 025F  
                                 l208 01BE                                   l160 008C  
                                 l152 0044                                   l401 0CE6  
                                 l137 0AEB                                   l233 026F  
                                 l225 0224                                   l209 01CE  
                                 l161 0080                                   l410 0D24  
                                 l242 0283                                   l234 0263  
                                 l218 01E2                                   l170 00A0  
                                 l154 0045                                   l147 0DBC  
                                 l227 0225                                   l404 0CEF  
                                 l332 0E17                                   l164 02C5  
                                 l156 0046                                   l413 0D2C  
                                 l237 027F                                   l181 00E7  
                                 l165 009C                                   l422 0AD0  
                                 l238 0273                                   l190 0131  
                                 l166 0090                                   l407 0D1E  
                                 l255 0B01                                   l175 00E1  
                                 l159 007C                                   l343 0B16  
                                 l431 0AD6                                   l416 06F7  
                                 l184 011D                                   l336 0B08  
                                 l352 0AF2                                   l425 0ADD  
                                 l185 012D                                   l282 0D62  
                                 l194 0141                                   l186 0121  
                                 l370 0501                                   l346 0B1D  
                                 l419 0AE4                                   l283 0D73  
                                 l531 0BD4                                   l179 00E6  
                                 l339 0B0F                                   l275 0ACA  
                                 l428 0B2F                                   l373 0CA3  
                                 l189 013D                                   l349 07FE  
                                 l286 06FF                                   l278 0AF9  
                                 l199 0182                                   l359 04C7  
                                 l383 0FA5                                   l376 0CA9  
                                 l392 0C6D                                   l529 0BBC  
                                 l385 0FED                                   l386 0FFF  
                                 l379 0CB2                                   l395 0C75  
                                 l389 0C67                                   l398 0CE0  
                                 l682 0EDB                                   l695 0E72  
                        __CFG_CPD$OFF 0000                                   _ISR 0C02  
                                 fsr0 0004                                   indf 0000  
                        ___awmod@sign 0026                          __CFG_FOSC$HS 0000  
                     __end_of_FAN_OFF 0ADE                         _start_LED_OFF 0AEC  
                        __CFG_LVP$OFF 0000                                  ?_ISR 0070  
                                l3001 0E13                                  l3003 0B49  
                                l3005 0B53                                  l3101 06C9  
                                l3111 06EC                                  l3103 06CE  
                                l2231 0B0E                                  l2223 0B02  
                                l3105 06D1                                  l3121 0F6B  
                                l3113 0B1E                                  l3107 06D8  
                                l3131 0F9A                                  l3123 0F76  
                                l2227 0B0C                                  l2235 07FB  
                                l3115 0B24                                  l3109 06E3  
                                l3301 0BC3                                  l3141 0FD8  
                                l3133 0FB1                                  l3125 0F7D  
                                l2181 0AC9                                  l3117 0B2A  
                                l3071 0CB8                                  l3151 0ADE  
                                l3303 0BCA                                  l3311 0426  
                                l3143 0FE2                                  l3135 0FB7  
                                l3127 0F89                                  l3119 0F66  
                                l3153 0AD7                                  l2601 069B  
                                l3161 0C53                                  l3081 0CEE  
                                l3073 0CC1                                  l3305 0BD0  
                                l3321 0447                                  l3313 0429  
                                l3137 0FBF                                  l3129 0F90  
                                l3401 035B                                  l2347 0ACD  
                                l3091 0C8F                                  l3163 0C5C  
                                l3155 0C3A                                  l3075 0CCC  
                                l3171 0CF5                                  l2611 0E7A  
                                l3331 0474                                  l3323 0450  
                                l3315 042E                                  l3147 0FF9  
                                l3139 0FC9                                  l3411 037C  
                                l3403 0365                                  l2605 06A4  
                                l3093 0C98                                  l3085 0C76  
                                l3165 0C71                                  l3157 0C3F  
                                l3077 0CD5                                  l3069 0CB3  
                                l3173 0CFE                                  l2621 0E8E  
                                l2613 0E7F                                  l2701 0F01  
                                l3333 047A                                  l3341 049B  
                                l3325 045B                                  l3317 0433  
                                l3309 041D                                  l3149 0AD1  
                                l3421 03A2                                  l3413 0381  
                                l3405 036A                                  l3095 0CAD  
                                l3087 0C7B                                  l3159 0C48  
                                l3079 0CEA                                  l3175 0D09  
                                l2631 0EA4                                  l2623 0E90  
                                l2615 0E81                                  l2607 0E73  
                                l2711 0F46                                  l2703 0F1A  
                                l3351 04AF                                  l3335 0480  
                                l3327 0464                                  l3319 043C  
                                l3183 0AEC                                  l3431 03BF  
                                l3423 03AC                                  l3415 0393  
                                l3407 0372                                  l2721 0511  
                                l3097 0CB1                                  l3089 0C84  
                                l3177 0D13                                  l3169 0CF0  
                                l2641 0EC7                                  l2633 0EA8  
                                l2625 0E96                                  l2617 0E85  
                                l2609 0E76                                  l2713 0F4C  
                                l2705 0F1E                                  l3361 04CF  
                                l3353 04BA                                  l3337 048C  
                                l3329 046E                                  l2393 0B1A  
                                l3425 03B1                                  l3417 039D  
                                l3409 0377                                  l3433 03C5  
                                l2731 0550                                  l3179 0D28  
                                l2635 0EB9                                  l2627 0E99  
                                l2643 0ECD                                  l2619 0E8A  
                                l2651 0E18                                  l2715 0F5F  
                                l2707 0F25                                  l2803 0058  
                                l3363 04DB                                  l3355 04C3  
                                l3347 04A2                                  l3339 0496  
                                l3435 03CF                                  l3427 03B6  
                                l3443 03EC                                  l3371 02C6  
                                l2741 05B1                                  l2733 0574  
                                l2725 051A                                  l2717 0505  
                                l2645 0ED2                                  l2637 0EBF  
                                l2629 0EA0                                  l2661 0E2A  
                                l2653 0E1B                                  l2709 0F2C  
                                l2813 0094                                  l3365 04F6  
                                l3349 04A8                                  l3357 04C8  
                                l2397 0B1C                                  l2389 0B10  
                                l3437 03DC                                  l3445 03F6  
                                l3429 03BD                                  l3381 02EE  
                                l3373 02CA                                  l2591 0656  
                                l2583 05FC                                  l2751 0BD9  
                                l2743 05B9                                  l2727 053F  
                                l2719 0509                                  l2647 0ED7  
                                l2639 0EC0                                  l2671 0E43  
                                l2663 0E2F                                  l2655 0E1F  
                                l3295 0BAE                                  l2911 0226  
                                l2903 01FF                                  l2831 00E2  
                                l2823 00AC                                  l2807 0084  
                                l3359 04CA                                  l3367 04FA  
                                l3447 0405                                  l3439 03E6  
                                l3391 0332                                  l3383 02FB  
                                l3375 02CF                                  l2585 0621  
                                l2577 05EA                                  l2753 0BEA  
                                l2737 0589                                  l3481 0B9E  
                                l2761 0B38                                  l2673 0E47  
                                l2665 0E35                                  l2681 0E64  
                                l2657 0E24                                  l3297 0BB2  
                                l2921 0267                                  l2913 022A  
                                l2841 00F9                                  l3369 0500  
                                l3449 040A                                  l3393 0341  
                                l3385 0305                                  l3377 02D9  
                                l2595 066B                                  l2579 05EB  
                                l2755 0BF0                                  l2747 05C2  
                                l2739 05AD                                  l2771 0B90  
                                l2763 0B39                                  l2683 0E69  
                                l2675 0E51                                  l2667 0E38  
                                l2659 0E26                                  l2691 0EE4  
                                l3299 0BB6                                  l2851 0135  
                                l2827 00BD                                  l2819 00A4  
                                l3395 034B                                  l3379 02DE  
                                l2597 068F                                  l2589 0632  
                                l2749 0BD5                                  l2765 0B3F  
                                l2757 0AE5                                  l2685 0E6E  
                                l2677 0E57                                  l2669 0E3F  
                                l2693 0EEB                                  l2941 02A0  
                                l2933 0287                                  l2917 023B  
                                l2861 014D                                  l2845 0125  
                                l2837 00E8                                  l3397 0350  
                                l3389 030E                                  l2599 0693  
                                l2775 0B96                                  l2767 0B8A  
                                l2759 0B30                                  l2951 0D30  
                                l2679 0E5E                                  l2695 0EEF  
                                l2943 02C4                                  l2927 0277  
                                l2871 0184                                  l2791 003E  
                                l3399 0355                                  l2777 0BA6  
                                l2769 0B8B                                  l2953 0D36  
                                l2961 06FB                                  l2697 0EF1  
                                l2689 0EDC                                  l2785 07DC  
                                l2937 028F                                  l2865 015E  
                                l2857 0145                                  l2947 0AFD  
                                l2955 0D40                                  l2699 0EF5  
                                l2787 07EF                                  l2883 01C6  
                                l2875 0189                                  l2957 0D47  
                                l2789 0D74                                  l2981 0DC9  
                                l2949 0AF3                                  l2959 0D50  
                                l2991 0DF5                                  l2983 0DD2  
                                l2895 01E6                                  l2879 019A  
                                l2799 0047                                  l2993 0DFB  
                                l2985 0DE3                                  l2977 0DBD  
                                l2889 01D6                                  l2995 0E03  
                                l2987 0DE9                                  l2979 0DC1  
                                l2899 01EE                                  l2997 0E08  
                                l2989 0DEF                                  l2999 0E0D  
                                STR_1 07CA                                  STR_2 075D  
                                STR_3 0735                                  STR_4 0780  
                                STR_5 07D6                                  STR_6 074B  
                                STR_7 07D6                                  STR_8 0720  
                                STR_9 079F                                  u3000 0E96  
                                u3001 0E95                                  u3020 0EA8  
                                u3100 0E35                                  u3021 0EA7  
                                u3101 0E34                                  u3015 0E9A  
                                u4000 0CA9                                  u3040 0EB9  
                                u3120 0E47                                  u3200 0F65  
                                u4001 0CA8                                  u3041 0EB8  
                                u3121 0E46                                  u3201 0F64  
                                u3210 0519                                  u4010 0CAD  
                                u3130 0E51                                  u2410 0B08  
                                u3211 0518                                  u4011 0CAC  
                                u3035 0EA9                                  u3131 0E50  
                                u3115 0E39                                  u2411 0B07  
                                u3300 05C1                                  u3220 0536  
                                u3060 0ECD                                  u4020 0F76  
                                u2420 0B0C                                  u3301 05C0  
                                u3061 0ECC                                  u3045 0EB5  
                                u4021 0F75                                  u2421 0B0B  
                                u3310 05DE                                  u3230 053E  
                                u3070 0ED2                                  u3150 0E64  
                                u4030 0FBF                                  u3231 053D  
                                u3071 0ED1                                  u3055 0EC1  
                                u3151 0E63                                  u3135 0E4D  
                                u4031 0FBE                                  u3320 05E6  
                                u3240 054F                                  u4040 0C6D  
                                u3160 0E69                                  u3080 0E1F  
                                u3400 0094                                  u3321 05E5  
                                u3241 054E                                  u3225 0529  
                                u4041 0C6C                                  u3161 0E68  
                                u3145 0E58                                  u3081 0E1E  
                                u3401 0093                                  u3330 0C01  
                                u3250 056C                                  u3226 052A  
                                u4050 0C71                                  u3090 0E2A  
                                u3170 0EE4                                  u3410 00A0  
                                u3331 0C00                                  u3315 05D1  
                                u3227 052F                                  u4051 0C70  
                                u3091 0E29                                  u3171 0EE3  
                                u3411 009F                                  u3316 05D2  
                                u3260 0574                                  u3228 0530  
                                u4060 0D24                                  u3180 0F01  
                                u4220 0BB6                                  u3500 0125  
                                u3420 00A4                                  u3340 0057  
                                u4300 04A1                                  u3317 05D7  
                                u3261 0573                                  u3229 0535  
                                u4061 0D23                                  u3181 0F00  
                                u4221 0BB5                                  u3501 0124  
                                u3421 00A3                                  u3341 0056  
                                u4301 04A0                                  u3318 05D8  
                                u3270 0588                                  u4070 0D28  
                                u3190 0F1A                                  u3510 0131  
                                u3430 00BC                                  u3350 0074  
                                u4310 04A8                                  u3319 05DD  
                                u3271 0587                                  u3255 055F  
                                u4071 0D27                                  u3191 0F19  
                                u3511 0130                                  u3431 00BB  
                                u4311 04A7                                  u3280 05A5  
                                u3256 0560                                  u3600 01BE  
                                u3520 0135                                  u3440 00D9  
                                u3360 007C                                  u4320 04CF  
                                u4400 0365                                  u3257 0565  
                                u3601 01BD                                  u3521 0134  
                                u3361 007B                                  u4321 04CE  
                                u4401 0364                                  u3290 05AD  
                                u3258 0566                                  u4250 0BD0  
                                u3610 01C2                                  u3530 0141  
                                u3450 00E1                                  u3370 0080  
                                u4330 0500                                  u2570 0B16  
                                u4410 0372                                  u3291 05AC  
                                u3259 056B                                  u4251 0BCF  
                                u4235 0BBD                                  u3611 01C1  
                                u3531 0140                                  u3451 00E0  
                                u3371 007F                                  u3355 0067  
                                u4331 04FF                                  u2571 0B15  
                                u4411 0371                                  u2900 064E  
                                u3700 023A                                  u3620 01C6  
                                u3540 0145                                  u3460 00F8  
                                u3380 0084                                  u3356 0068  
                                u4260 0421                                  u2580 0B1A  
                                u4420 0377                                  u4340 02D9  
                                u3285 0598                                  u4245 0BC4  
                                u3701 0239                                  u3621 01C5  
                                u3541 0144                                  u3461 00F7  
                                u3445 00CC                                  u3381 0083  
                                u3357 006D                                  u2581 0B19  
                                u4421 0376                                  u4341 02D8  
                                u2910 0656                                  u3286 0599  
                                u3710 0257                                  u3630 01D2  
                                u3550 015D                                  u3470 0115  
                                u3446 00CD                                  u3390 0090  
                                u3358 006E                                  u4270 0474  
                                u4430 039D                                  u4350 030D  
                                u2911 0655                                  u3287 059E  
                                u3631 01D1                                  u3551 015C  
                                u3447 00D2                                  u3391 008F  
                                u3359 0073                                  u4271 0473  
                                u4431 039C                                  u4351 030C  
                                u2920 066A                                  u3288 059F  
                                u3800 02BC                                  u3720 025F  
                                u3640 01D6                                  u3560 017A  
                                u3480 011D                                  u3448 00D3  
                                u4280 047A                                  u4440 03AC  
                                u4360 032A                                  u2921 0669  
                                u2905 0641                                  u3289 05A4  
                                u3721 025E                                  u3641 01D5  
                                u3481 011C                                  u3449 00D8  
                                u4281 0479                                  u4441 03AB  
                                u2930 0687                                  u2906 0642  
                                u3810 02C4                                  u3730 0263  
                                u3650 01E2                                  u3570 0182  
                                u3490 0121                                  u4290 0480  
                                u4450 03BD                                  u4370 0332  
                                u2907 0647                                  u3811 02C3  
                                u3731 0262                                  u3715 024A  
                                u3651 01E1                                  u3571 0181  
                                u3491 0120                                  u3475 0108  
                                u4291 047F                                  u4451 03BC  
                                u4371 0331                                  u2940 068F  
                                u2908 0648                                  u2860 05FB  
                                u3820 0D40                                  u3740 0267  
                                u3716 024B                                  u3660 01E6  
                                u3580 0199                                  u3476 0109  
                                u4460 03E6                                  u4380 0341  
                                u2941 068E                                  u2909 064D  
                                u2861 05FA                                  u3821 0D3F  
                                u3805 02AF                                  u3741 0266  
                                u3717 0250                                  u3661 01E5  
                                u3581 0198                                  u3565 016D  
                                u3477 010E                                  u4461 03E5  
                                u4381 0340                                  u4365 031D  
                                u2950 06A3                                  u2870 0618  
                                u3830 0D47                                  u3806 02B0  
                                u3750 0273                                  u3718 0251  
                                u3670 01FE                                  u3590 01B6  
                                u3566 016E                                  u3478 010F  
                                u4470 03F6                                  u4390 034B  
                                u4366 031E                                  u2951 06A2  
                                u2935 067A                                  u3831 0D46  
                                u3807 02B5                                  u3751 0272  
                                u3719 0256                                  u3671 01FD  
                                u3567 0173                                  u3479 0114  
                                u4471 03F5                                  u4391 034A  
                                u4367 0323                                  u2960 06C0  
                                u2936 067B                                  u2880 0620  
                                u3808 02B6                                  u3760 0277  
                                u3680 021B                                  u3568 0174  
                                u4368 0324                                  u2937 0680  
                                u2881 061F                                  u3809 02BB  
                                u3761 0276                                  u3569 0179  
                                u4369 0329                                  u2970 06C8  
                                u2938 0681                                  u2890 0631  
                                u3770 0283                                  u3690 0223  
                                u2971 06C7                                  u2939 0686  
                                u2891 0630                                  u2875 060B  
                                u3771 0282                                  u3691 0222  
                                u3595 01A9                                  u2876 060C  
                                u2980 0E7A                                  u3780 0287  
                                u3596 01AA                                  u2965 06B3  
                                u2877 0611                                  u3845 0D55  
                                u2981 0E79                                  u3781 0286  
                                u3685 020E                                  u3597 01AF  
                                u2966 06B4                                  u2878 0612  
                                u2990 0E85                                  u3790 029F  
                                u3686 020F                                  u3598 01B0  
                                u2967 06B9                                  u2879 0617  
                                u3855 0D69                                  u2991 0E84  
                                u3791 029E                                  u3687 0214  
                                u3599 01B5                                  u2968 06BA  
                                u3688 0215                                  u2969 06BF  
                                u3689 021A                                  u3980 0CE6  
                                u3981 0CE5                                  u3990 0CEA  
                                u3991 0CE9                          __CFG_WRT$OFF 0000  
                                _main 02C6                        ?_foodIsInMicro 0070  
                                _itoa 0EDC                                  btemp 007E  
                                _stop 0B10            __size_of_LCD_displayString 002D  
            __end_of_LCD_goToRowColum 0BAE                         __CFG_BOREN$ON 0000  
                       ?_foodOutMicro 0070                                  start 0010  
                               ??_ISR 0071                         ?_door_is_open 0070  
                    __end_of_LCD_init 0B46                                 ?_main 0070  
                               ?_itoa 0029                       __end_of___awdiv 0EDC  
                               STR_10 071F                                 STR_11 07BC  
                               STR_12 0720                                 STR_13 0790  
                               STR_14 071C                                 STR_15 07AE  
                               STR_16 0721                                 STR_17 076F  
                       __CFG_WDTE$OFF 0000                       __end_of___awmod 0E73  
                               ?_stop 0070                         _door_is_close 0C76  
                     ___awdiv@divisor 0020                                 i1l327 0B86  
                               i1l272 0C31                       ___awdiv@counter 0025  
                        ?_key_pressed 0070                        ?_start_LED_OFF 0070  
                  LCD_displayString@i 0028                       __end_of_heat_on 06F8  
                        ?_keypad_init 0070                                 _count 0075  
                               _start 0B02                                 fpbase 0000  
                   ??_start_calc_time 0022                                 itoa@b 002C  
                               itoa@n 0032                                 pclath 000A  
                               status 0003                                 wtemp0 007E  
                      ??_foodOutMicro 002A                __size_of_stop_cal_time 0006  
                     __initialization 0013                          __end_of_main 041D  
                        __end_of_itoa 0F66                          __end_of_stop 0B1E  
                      ??_door_is_open 002A                        ?_door_is_close 0070  
                           ??_FAN_OFF 0020                                ??_main 0050  
                              ??_itoa 002E                      scan_minutes@F127 0054  
             __size_of_Call_Back_OVFI 0026                     fp__Call_Back_OVFI 003B  
                              ??_stop 0075                          ?_TIMER0_init 0070  
                              _ADCON1 009F                      ___awdiv@dividend 0022  
                              ?_start 0070                                _FAN_ON 0ACD  
                     ??_foodIsInMicro 002A                                i1l2441 0B83  
                              i1l2433 0B61                                i1l2443 0B85  
                              i1l2435 0B6B                                i1l2531 0C0B  
                              i1l2437 0B72                                i1l2541 0C24  
                              i1l2533 0C11                                i1l2439 0B78  
                              i1l2543 0C28                                i1l2535 0C15  
                              i1l2527 0C02                                i1l2545 0C2D  
                              i1l2537 0C1B                                i1l2529 0C06  
                              i1l2539 0C20                                u263_20 0B6B  
                              u263_21 0B6A                                u264_20 0B72  
                              u280_20 0C06                                u264_21 0B71  
                              u280_21 0C05                                u265_20 0B78  
                              u281_20 0C0B                                u265_21 0B77  
                              u281_21 0C0A                                u282_20 0C1B  
                              u282_21 0C1A                                u283_20 0C20  
                              u283_21 0C1F                                u284_20 0C28  
                              u284_21 0C27                                u285_20 0C2D  
                              u285_21 0C2C                            __i1fptable 0035  
           __size_of_TIMER0_Call_Back 0008                        __CFG_PWRTE$OFF 0000  
                    __end_of_heat_off 0AE5                                ___wmul 0BAE  
                           ??___awdiv 0024                             ??___awmod 0024  
            __size_of_LCD_sendCommand 00E5                                _finish 005F  
                              _keypad 0710                      ___awdiv@quotient 0027  
                              _second 0060                       ___awmod@divisor 0020  
                     ___awmod@counter 0025                      __end_of_set_T0DR 0700  
                           ??_heat_on 0075                    _CCP2_CalL_Back_ptr 0076  
                              fptable 0034                       ??_start_LED_OFF 0020  
                              fptotal 0000                                saved_w 007E  
          scan_minutes@minutes_digits 0049                         _stop_cal_time 0AD1  
         __size_of_global_INT_disable 0007                         ?_scan_minutes 0070  
             __end_of__initialization 0030                             ?_LCD_init 0070  
                      __pcstackCOMMON 0070                          __pidataBANK0 0ACB  
                     ??_door_is_close 002A                         __end_of_start 0B10  
          __end_of_LCD_intgerToString 07FB                     ?_LCD_clear_screen 0070  
                  ??_LCD_clear_screen 0075                  __end_of_foodOutMicro 0D2D  
                      ?_stop_cal_time 0070                           set_T0DR@val 0021  
                __size_of_key_pressed 0288                               ??_start 0075  
                             ?_FAN_ON 0070                  __end_of_door_is_open 0C76  
                          __pbssBANK0 0054                        ??_scan_minutes 0047  
         __end_of_show_remaining_time 1000                  __size_of_keypad_init 0049  
                          ??_LCD_init 0025                     ?_LCD_goToRowColum 0025  
                   scan_minutes@digit 004F                            __pmaintext 02C6  
                  ??_LCD_goToRowColum 0026         __size_of_LCD_displayCharacter 00E2  
                             ?___wmul 0020                            __pintentry 0004  
                      _Call_Back_OVFI 0B61                               _FAN_OFF 0AD7  
                     _start_calc_time 0B1E                     ??_LCD_sendCommand 0020  
                __size_of_TIMER0_init 0047                             ?_heat_off 0070  
                          __stringtab 0700                       __size_of_FAN_ON 0004  
                             i1fpbase 003A                             ?_set_T0DR 0070  
                    _TIMER0_Call_Back 0AFA                  LCD_displayString@str 0025  
        ?_LCD_displayStringOnRowColum 002A                               ___awdiv 0E73  
                             ___awmod 0E18                LCD_sendCommand@commond 0024  
                     __size_of___wmul 0027                __end_of_Call_Back_OVFI 0B87  
                             _heat_on 06C9                               __ptext1 0AD1  
                             __ptext2 0AF3                               __ptext3 0B10  
                             __ptext4 0B1E                               __ptext5 0AC9  
                             __ptext6 07FB                               __ptext7 0AEC  
                             __ptext8 0B02                               __ptext9 0F66  
                     ??_stop_cal_time 0075                   __size_of__i1fptable 0009  
                        __size_of_ISR 0038                               _counter 0059  
             __size_of_microWave_init 005B                      ___awmod@dividend 0022  
                   _global_INT_enable 0AC9                               _minutes 005D  
                          ??_heat_off 0020                    ?_global_INT_enable 0070  
                 LCD_goToRowColum@row 0028                  end_of_initialization 0030  
                             itoa@num 0029                   ??_global_INT_enable 0075  
                          ??_set_T0DR 0020               __end_of_start_calc_time 0B30  
                     ?_Call_Back_OVFI 0070                 __size_of_foodOutMicro 003D  
       ??_LCD_displayStringOnRowColum 002C                  __end_of_scan_minutes 0502  
           __end_of_global_INT_enable 0ACB            scan_minutes@indix_of_digit 004E  
               __size_of_door_is_open 003C                        __end_of_FAN_ON 0AD1  
               __end_of_foodIsInMicro 0CF0                          _foodOutMicro 0CF0  
                   __size_of_LCD_init 0016                          _door_is_open 0C3A  
                      __end_of___wmul 0BD5                   TIMER0_Call_Back@ptr 0021  
                       ?_start_LED_ON 0070        LCD_displayStringOnRowColum@row 002D  
      LCD_displayStringOnRowColum@str 002B                        __end_of_keypad 071C  
                 start_initialization 0013                 __end_of_start_LED_OFF 0AF3  
                         __end_of_ISR 0C3A            __end_of_global_INT_disable 0AFA  
__size_of_LCD_displayStringOnRowColum 001B                    _LCD_intgerToString 07DC  
                            ??_FAN_ON 0075             __size_of_LCD_clear_screen 0007  
                 ?_LCD_intgerToString 0034                       _LCD_sendCommand 0502  
                            ??___wmul 0075                      ?_start_calc_time 0070  
                         __pdataBANK0 0061                        ??_start_LED_ON 0075  
               __end_of_door_is_close 0CB3                              ?_FAN_OFF 0070  
          __size_of_global_INT_enable 0002                  ??_LCD_intgerToString 0036  
           __size_of_LCD_goToRowColum 0027                    __end_of__i1fptable 003E  
            __end_of_TIMER0_Call_Back 0B02                        _microWave_init 0DBD  
                       ??_key_pressed 0020                           __pbssCOMMON 0075  
                           ___latbits 0002                         __pcstackBANK0 0020  
        __end_of_LCD_displayCharacter 06C9                         ??_keypad_init 0020  
              LCD_intgerToString@data 0034                LCD_intgerToString@buff 0037  
                   __size_of_heat_off 0007                       TIMER0_init@data 0022  
                  microWave_init@F119 0061          __size_of_show_remaining_time 009A  
                   __size_of_set_T0DR 0008                             __pfunctab 0034  
               __size_of_scan_minutes 00E5                              ?___awdiv 0020  
                  microWave_init@data 0027                              ?___awmod 0020  
                           __pstrings 0700                __end_of_microWave_init 0E18  
                            ?_heat_on 0070                         ??_TIMER0_init 0020  
                      __size_of_start 000E                   __end_of_key_pressed 02C6  
                   interrupt_function 0004                          _scan_minutes 041D  
             __end_of_LCD_sendCommand 05E7                        ___wmul@product 0024  
                 __end_of_keypad_init 0DBD                              _LCD_init 0B30  
              LCD_displayCharacter@ch 0024                      ??_Call_Back_OVFI 0070  
                     ?_microWave_init 0070                           __stringbase 070F  
                   ___wmul@multiplier 0020                      __size_of_FAN_OFF 0007  
               __end_of_stop_cal_time 0AD7                 LCD_goToRowColum@colum 0025  
                      itoa@digits_num 0030                              i1fptable 0035  
                            i1fptotal 0002                   __end_of_TIMER0_init 0D74  
                    _LCD_clear_screen 0AE5                  __end_of_start_LED_ON 07FF  
                _LCD_displayCharacter 05E7                      __size_of___awdiv 0069  
                    __size_of___awmod 005B                    __end_of__stringtab 0710  
                    _LCD_goToRowColum 0B87                      __size_of_heat_on 002F  
                         _key_pressed 003E                              __ptext10 041D  
                            __ptext11 003E                              __ptext20 0D74  
                            __ptext12 0BAE                              __ptext21 0D2D  
                            __ptext13 07DC                              __ptext30 0B46  
                            __ptext22 0AFA                              __ptext14 0EDC  
                            __ptext31 0B87                              __ptext23 06C9  
                            __ptext15 0E18                              __ptext32 0502  
                            __ptext24 0ADE                              __ptext16 0E73  
                            __ptext33 0BD5                              __ptext25 0CF0  
                            __ptext17 0AE5                              __ptext34 05E7  
                            __ptext26 0CB3                              __ptext18 0DBD  
                            __ptext35 0ACD                              __ptext27 0C3A  
                            __ptext19 06F8                              __ptext36 0AD7  
                            __ptext28 0C76                              __ptext37 0C02  
                            __ptext29 0B30                              __ptext38 0B61  
                            _heat_off 0ADE                           _keypad_init 0D74  
                       __size_of_main 0157                         __size_of_itoa 008A  
                    ?_LCD_sendCommand 0070                         __size_of_stop 000E  
                            _set_T0DR 06F8                    _global_INT_disable 0AF3  
                   _LCD_displayString 0BD5   __end_of_LCD_displayStringOnRowColum 0B61  
         _LCD_displayStringOnRowColum 0B46                 ?_LCD_displayCharacter 0070  
                  ?_LCD_displayString 0025                   ?_global_INT_disable 0070  
                 ??_LCD_displayString 0027                __size_of_foodIsInMicro 003D  
                         _TIMER0_init 0D2D                     ?_TIMER0_Call_Back 0070  
                 _show_remaining_time 0F66                              itoa@buff 002B  
                  ??_TIMER0_Call_Back 0020                  ??_global_INT_disable 0020  
                            intlevel1 0034             __end_of_LCD_displayString 0C02  
                           stringcode 070A                  ?_show_remaining_time 0070  
              __size_of_start_LED_OFF 0007                    _CCP1_CalL_Back_ptr 0077  
         __size_of_LCD_intgerToString 001F              __size_of_start_calc_time 0012  
                            stringdir 070A                              stringtab 0700  
    LCD_displayStringOnRowColum@colum 002A                 __size_of_start_LED_ON 0004  
              __size_of_door_is_close 003D                         _foodIsInMicro 0CB3  
               ??_show_remaining_time 0047                  _TIMER0_CalL_Back_ptr 0078  
              ??_LCD_displayCharacter 0020  
